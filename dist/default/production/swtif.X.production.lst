

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 03 23:32:38 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F877A Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  010F                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  000E                     	;# 
   287  000E                     	;# 
   288  000F                     	;# 
   289  0010                     	;# 
   290  0011                     	;# 
   291  0012                     	;# 
   292  0013                     	;# 
   293  0014                     	;# 
   294  0015                     	;# 
   295  0015                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001B                     	;# 
   303  001C                     	;# 
   304  001D                     	;# 
   305  001E                     	;# 
   306  001F                     	;# 
   307  0081                     	;# 
   308  0085                     	;# 
   309  0086                     	;# 
   310  0087                     	;# 
   311  0088                     	;# 
   312  0089                     	;# 
   313  008C                     	;# 
   314  008D                     	;# 
   315  008E                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0093                     	;# 
   319  0094                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009C                     	;# 
   323  009D                     	;# 
   324  009E                     	;# 
   325  009F                     	;# 
   326  010C                     	;# 
   327  010D                     	;# 
   328  010E                     	;# 
   329  010F                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  0000                     	;# 
   333  0001                     	;# 
   334  0002                     	;# 
   335  0003                     	;# 
   336  0004                     	;# 
   337  0005                     	;# 
   338  0006                     	;# 
   339  0007                     	;# 
   340  0008                     	;# 
   341  0009                     	;# 
   342  000A                     	;# 
   343  000B                     	;# 
   344  000C                     	;# 
   345  000D                     	;# 
   346  000E                     	;# 
   347  000E                     	;# 
   348  000F                     	;# 
   349  0010                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0014                     	;# 
   354  0015                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0017                     	;# 
   358  0018                     	;# 
   359  0019                     	;# 
   360  001A                     	;# 
   361  001B                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  001D                     	;# 
   365  001E                     	;# 
   366  001F                     	;# 
   367  0081                     	;# 
   368  0085                     	;# 
   369  0086                     	;# 
   370  0087                     	;# 
   371  0088                     	;# 
   372  0089                     	;# 
   373  008C                     	;# 
   374  008D                     	;# 
   375  008E                     	;# 
   376  0091                     	;# 
   377  0092                     	;# 
   378  0093                     	;# 
   379  0094                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  010F                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0000                     	;# 
   453  0001                     	;# 
   454  0002                     	;# 
   455  0003                     	;# 
   456  0004                     	;# 
   457  0005                     	;# 
   458  0006                     	;# 
   459  0007                     	;# 
   460  0008                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0014                     	;# 
   474  0015                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  0081                     	;# 
   488  0085                     	;# 
   489  0086                     	;# 
   490  0087                     	;# 
   491  0088                     	;# 
   492  0089                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0094                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  010C                     	;# 
   507  010D                     	;# 
   508  010E                     	;# 
   509  010F                     	;# 
   510  018C                     	;# 
   511  018D                     	;# 
   512                           
   513                           	psect	idataBANK1
   514  0C8E                     __pidataBANK1:
   515                           
   516                           ;initializer for _numbers
   517  0C8E  343F               	retlw	63
   518  0C8F  3406               	retlw	6
   519  0C90  345B               	retlw	91
   520  0C91  344F               	retlw	79
   521  0C92  3466               	retlw	102
   522  0C93  346D               	retlw	109
   523  0C94  347D               	retlw	125
   524  0C95  3447               	retlw	71
   525  0C96  347F               	retlw	127
   526  0C97  3467               	retlw	103
   527                           
   528                           ;initializer for _MODE
   529  0C98  3401               	retlw	1
   530  0C99  3400               	retlw	0
   531                           
   532                           ;initializer for _DESIRED_TEMP
   533  0C9A  343C               	retlw	60
   534  0C9B  3400               	retlw	0
   535  000E                     _TMR1	set	14
   536  0010                     _T1CON	set	16
   537  001E                     _ADRESH	set	30
   538  001F                     _ADCON0bits	set	31
   539  001F                     _ADCON0	set	31
   540  0013                     _SSPBUF	set	19
   541  0014                     _SSPCON	set	20
   542  0008                     _PORTD	set	8
   543  0059                     _INTF	set	89
   544  0060                     _TMR1IF	set	96
   545  0037                     _RB7	set	55
   546  003A                     _RC2	set	58
   547  003D                     _RC5	set	61
   548  0032                     _RB2	set	50
   549  005C                     _INTE	set	92
   550  0031                     _RB1	set	49
   551  005F                     _GIE	set	95
   552  005E                     _PEIE	set	94
   553  002C                     _RA4	set	44
   554  002B                     _RA3	set	43
   555  00FA                     _GO_DONE	set	250
   556  0063                     _SSPIF	set	99
   557  0049                     _RE1	set	73
   558  004A                     _RE2	set	74
   559  009E                     _ADRESL	set	158
   560  009F                     _ADCON1	set	159
   561  0093                     _SSPADD	set	147
   562  0091                     _SSPCON2	set	145
   563  0094                     _SSPSTATbits	set	148
   564  0088                     _TRISD	set	136
   565  040E                     _INTEDG	set	1038
   566  0437                     _TRISB7	set	1079
   567  0430                     _TRISB0	set	1072
   568  0432                     _TRISB2	set	1074
   569  043D                     _TRISC5	set	1085
   570  043A                     _TRISC2	set	1082
   571  0460                     _TMR1IE	set	1120
   572  042D                     _TRISA5	set	1069
   573  042C                     _TRISA4	set	1068
   574  042B                     _TRISA3	set	1067
   575  048B                     _RCEN	set	1163
   576  048E                     _ACKSTAT	set	1166
   577  048C                     _ACKEN	set	1164
   578  048D                     _ACKDT	set	1165
   579  0489                     _RSEN	set	1161
   580  048A                     _PEN	set	1162
   581  0488                     _SEN	set	1160
   582  043C                     _TRISC4	set	1084
   583  043B                     _TRISC3	set	1083
   584  0449                     _TRISE1	set	1097
   585  044A                     _TRISE2	set	1098
   586                           
   587                           	psect	strings
   588  0800                     __pstrings:
   589  0800                     stringtab:
   590  0800                     __stringtab:
   591  0800                     stringcode:	
   592                           ;	String table - string pointers are 1 byte each
   593                           
   594  0800                     stringdir:
   595  0800  3008               	movlw	high stringdir
   596  0801  008A               	movwf	10
   597  0802  0804               	movf	4,w
   598  0803  0A84               	incf	4,f
   599  0804  0782               	addwf	2,f
   600  0805                     __stringbase:
   601  0805  3400               	retlw	0
   602  0806                     __end_of__stringtab:
   603  0806                     STR_1:
   604  0806  3443               	retlw	67	;'C'
   605  0807  3448               	retlw	72	;'H'
   606  0808  3441               	retlw	65	;'A'
   607  0809  344E               	retlw	78	;'N'
   608  080A  3447               	retlw	71	;'G'
   609  080B  3449               	retlw	73	;'I'
   610  080C  344E               	retlw	78	;'N'
   611  080D  3447               	retlw	71	;'G'
   612  080E  3420               	retlw	32	;' '
   613  080F  3454               	retlw	84	;'T'
   614  0810  3445               	retlw	69	;'E'
   615  0811  344D               	retlw	77	;'M'
   616  0812  3450               	retlw	80	;'P'
   617  0813  3400               	retlw	0
   618  0814                     STR_2:
   619  0814  3443               	retlw	67	;'C'
   620  0815  344F               	retlw	79	;'O'
   621  0816  344F               	retlw	79	;'O'
   622  0817  344C               	retlw	76	;'L'
   623  0818  3449               	retlw	73	;'I'
   624  0819  344E               	retlw	78	;'N'
   625  081A  3447               	retlw	71	;'G'
   626  081B  3400               	retlw	0
   627  081C                     STR_3:
   628  081C  3448               	retlw	72	;'H'
   629  081D  3445               	retlw	69	;'E'
   630  081E  3441               	retlw	65	;'A'
   631  081F  3454               	retlw	84	;'T'
   632  0820  3449               	retlw	73	;'I'
   633  0821  344E               	retlw	78	;'N'
   634  0822  3447               	retlw	71	;'G'
   635  0823  3400               	retlw	0
   636                           
   637                           	psect	cinit
   638  0015                     start_initialization:	
   639                           ; #config settings
   640                           
   641  0015                     __initialization:
   642                           
   643                           ; Initialize objects allocated to BANK1
   644  0015  1383               	bcf	3,7	;select IRP bank0
   645  0016  30BF               	movlw	low (__pdataBANK1+14)
   646  0017  00FD               	movwf	btemp+-1
   647  0018  300C               	movlw	high __pidataBANK1
   648  0019  00FE               	movwf	btemp
   649  001A  308E               	movlw	low __pidataBANK1
   650  001B  00FF               	movwf	btemp+1
   651  001C  30B1               	movlw	low __pdataBANK1
   652  001D  0084               	movwf	4
   653  001E  120A  158A  24DD  120A  118A  	fcall	init_ram0
   654                           
   655                           ; Clear objects allocated to BANK1
   656  0023  1683               	bsf	3,5	;RP0=1, select bank1
   657  0024  1303               	bcf	3,6	;RP1=0, select bank1
   658  0025  01BF               	clrf	__pbssBANK1& (0+127)
   659  0026  01C0               	clrf	(__pbssBANK1+1)& (0+127)
   660  0027  01C1               	clrf	(__pbssBANK1+2)& (0+127)
   661  0028  01C2               	clrf	(__pbssBANK1+3)& (0+127)
   662                           
   663                           ; Clear objects allocated to BANK0
   664  0029  304C               	movlw	low __pbssBANK0
   665  002A  0084               	movwf	4
   666  002B  3068               	movlw	low (__pbssBANK0+28)
   667  002C  120A  158A  240F  120A  118A  	fcall	clear_ram0
   668  0031                     end_of_initialization:	
   669                           ;End of C runtime variable initialization code
   670                           
   671  0031                     __end_of__initialization:
   672  0031  0183               	clrf	3
   673  0032  120A  118A  2B96   	ljmp	_main	;jump to C main() function
   674                           
   675                           	psect	bssBANK0
   676  004C                     __pbssBANK0:
   677  004C                     _ADC_READINGS:
   678  004C                     	ds	20
   679  0060                     _LED_COUNTER:
   680  0060                     	ds	2
   681  0062                     _READINGS_INDEX:
   682  0062                     	ds	2
   683  0064                     _MODE_COUNTER:
   684  0064                     	ds	2
   685  0066                     _ADC_counter:
   686  0066                     	ds	2
   687                           
   688                           	psect	bssBANK1
   689  00BF                     __pbssBANK1:
   690  00BF                     _average:
   691  00BF                     	ds	2
   692  00C1                     _ADC_TEMP:
   693  00C1                     	ds	2
   694                           
   695                           	psect	dataBANK1
   696  00B1                     __pdataBANK1:
   697  00B1                     _numbers:
   698  00B1                     	ds	10
   699  00BB                     _MODE:
   700  00BB                     	ds	2
   701  00BD                     _DESIRED_TEMP:
   702  00BD                     	ds	2
   703                           
   704                           	psect	inittext
   705  0CD9                     init_fetch0:	
   706                           ;	Called with low address in FSR and high address in W
   707                           
   708  0CD9  087E               	movf	btemp,w
   709  0CDA  008A               	movwf	10
   710  0CDB  087F               	movf	btemp+1,w
   711  0CDC  0082               	movwf	2
   712  0CDD                     init_ram0:	
   713                           ;Called with:
   714                           ;	high address of idata address in btemp 
   715                           ;	low address of idata address in btemp+1 
   716                           ;	low address of data in FSR
   717                           ;	high address + 1 of data in btemp-1
   718                           
   719  0CDD  120A  158A  24D9  120A  158A  	fcall	init_fetch0
   720  0CE2  0080               	movwf	0
   721  0CE3  0A84               	incf	4,f
   722  0CE4  0804               	movf	4,w
   723  0CE5  067D               	xorwf	btemp+-1,w
   724  0CE6  1903               	btfsc	3,2
   725  0CE7  3400               	retlw	0
   726  0CE8  0AFF               	incf	btemp+1,f
   727  0CE9  1903               	btfsc	3,2
   728  0CEA  0AFE               	incf	btemp,f
   729  0CEB  2CDD               	goto	init_ram0
   730                           
   731                           	psect	clrtext
   732  0C0F                     clear_ram0:	
   733                           ;	Called with FSR containing the base address, and
   734                           ;	W with the last address+1
   735                           
   736  0C0F  0064               	clrwdt	;clear the watchdog before getting into this loop
   737  0C10                     clrloop0:
   738  0C10  0180               	clrf	0	;clear RAM location pointed to by FSR
   739  0C11  0A84               	incf	4,f	;increment pointer
   740  0C12  0604               	xorwf	4,w	;XOR with final address
   741  0C13  1903               	btfsc	3,2	;have we reached the end yet?
   742  0C14  3400               	retlw	0	;all done for this memory range, return
   743  0C15  0604               	xorwf	4,w	;XOR again to restore value
   744  0C16  2C10               	goto	clrloop0	;do the next byte
   745                           
   746                           	psect	cstackBANK1
   747  00A0                     __pcstackBANK1:
   748  00A0                     ??_LCD_SendCommand:
   749  00A0                     ??_LCD_SEND:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  00A0                     ??_I2C_Wait:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  00A0                     ??_I2C_INIT_MASTER:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  00A0                     ??_I2C_Start:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  00A0                     ??_I2C_Stop:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  00A0                     ??_I2C_Res:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  00A0                     ??_I2C_Nack:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  00A0                     ??_I2C_Write:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  00A0                     ??_I2C_Read_Byte:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  00A0                     ??_ADC_Init:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  00A0                     ??_SEG_Init:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  00A0                     ??_TIMER1_INIT:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  00A0                     ?___lwdiv:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  00A0                     LCD_SEND@data:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  00A0                     I2C_Write@Data:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  00A0                     ___lwdiv@divisor:	
   795                           ; 1 bytes @ 0x0
   796                           
   797                           
   798                           ; 2 bytes @ 0x0
   799  00A0                     	ds	1
   800  00A1                     ??_LCD_CMD:
   801  00A1                     ??_LCD_Write_uint8_t:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  00A1                     ??_EEPROM_Read:	
   805                           ; 1 bytes @ 0x1
   806                           
   807  00A1                     EEPROM_Read@address:	
   808                           ; 1 bytes @ 0x1
   809                           
   810                           
   811                           ; 1 bytes @ 0x1
   812  00A1                     	ds	1
   813  00A2                     LCD_SendCommand@Inst:
   814  00A2                     EEPROM_Read@data:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  00A2                     ___lwdiv@dividend:	
   818                           ; 1 bytes @ 0x2
   819                           
   820                           
   821                           ; 2 bytes @ 0x2
   822  00A2                     	ds	1
   823  00A3                     LCD_CMD@CMD:
   824  00A3                     LCD_Write_uint8_t@Data:	
   825                           ; 1 bytes @ 0x3
   826                           
   827                           
   828                           ; 1 bytes @ 0x3
   829  00A3                     	ds	1
   830  00A4                     ??_LCD_Init:
   831  00A4                     ??_LCD_Write_String:	
   832                           ; 1 bytes @ 0x4
   833                           
   834  00A4                     ??___lwdiv:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  00A4                     LCD_Write_String@i:	
   838                           ; 1 bytes @ 0x4
   839                           
   840  00A4                     ___lwdiv@quotient:	
   841                           ; 2 bytes @ 0x4
   842                           
   843                           
   844                           ; 2 bytes @ 0x4
   845  00A4                     	ds	2
   846  00A6                     LCD_Write_String@str:
   847  00A6                     ___lwdiv@counter:	
   848                           ; 1 bytes @ 0x6
   849                           
   850                           
   851                           ; 1 bytes @ 0x6
   852  00A6                     	ds	1
   853  00A7                     ?_SEG_Write:
   854  00A7                     ?___bmul:	
   855                           ; 1 bytes @ 0x7
   856                           
   857  00A7                     ?___wmul:	
   858                           ; 1 bytes @ 0x7
   859                           
   860  00A7                     ___bmul@multiplicand:	
   861                           ; 2 bytes @ 0x7
   862                           
   863  00A7                     SEG_Write@number:	
   864                           ; 1 bytes @ 0x7
   865                           
   866  00A7                     ___wmul@multiplier:	
   867                           ; 2 bytes @ 0x7
   868                           
   869                           
   870                           ; 2 bytes @ 0x7
   871  00A7                     	ds	1
   872  00A8                     ??___bmul:
   873  00A8                     ___bmul@product:	
   874                           ; 1 bytes @ 0x8
   875                           
   876                           
   877                           ; 1 bytes @ 0x8
   878  00A8                     	ds	1
   879  00A9                     ??_SEG_Write:
   880  00A9                     ___bmul@multiplier:	
   881                           ; 1 bytes @ 0x9
   882                           
   883  00A9                     ___wmul@multiplicand:	
   884                           ; 1 bytes @ 0x9
   885                           
   886                           
   887                           ; 2 bytes @ 0x9
   888  00A9                     	ds	1
   889  00AA                     ?_EEPROM_Write:
   890  00AA                     EEPROM_Write@data:	
   891                           ; 1 bytes @ 0xA
   892                           
   893                           
   894                           ; 1 bytes @ 0xA
   895  00AA                     	ds	1
   896  00AB                     ??_EEPROM_Write:
   897  00AB                     ??___wmul:	
   898                           ; 1 bytes @ 0xB
   899                           
   900  00AB                     EEPROM_Write@address:	
   901                           ; 1 bytes @ 0xB
   902                           
   903  00AB                     ___wmul@product:	
   904                           ; 1 bytes @ 0xB
   905                           
   906                           
   907                           ; 2 bytes @ 0xB
   908  00AB                     	ds	2
   909  00AD                     ?_SEG_Write1:
   910  00AD                     SEG_Write1@number:	
   911                           ; 1 bytes @ 0xD
   912                           
   913                           
   914                           ; 2 bytes @ 0xD
   915  00AD                     	ds	2
   916  00AF                     ??_SEG_Write1:
   917  00AF                     ??_main:	
   918                           ; 1 bytes @ 0xF
   919                           
   920                           
   921                           ; 1 bytes @ 0xF
   922  00AF                     	ds	2
   923                           
   924                           	psect	cstackCOMMON
   925  0070                     __pcstackCOMMON:
   926  0070                     ?_LCD_SendCommand:
   927  0070                     ?_calc_average:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_LCD_SEND:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_LCD_CMD:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_LCD_Init:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_LCD_Write_uint8_t:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_LCD_Write_String:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_I2C_Wait:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_I2C_INIT_MASTER:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_I2C_Start:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_I2C_Stop:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_I2C_Res:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_I2C_Nack:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_I2C_Write:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_I2C_Read_Byte:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_ADC_Init:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_EEPROM_Read:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_SEG_Init:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_TIMER1_INIT:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_main:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_ISR:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?i1_I2C_Wait:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ??i1_I2C_Wait:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?i1_I2C_Start:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ??i1_I2C_Start:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?i1_I2C_Stop:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ??i1_I2C_Stop:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?i1_I2C_Write:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ??i1_I2C_Write:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?__Umul8_16:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ?i1___lwdiv:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  0070                     ?___xxtofl:	
  1018                           ; 2 bytes @ 0x0
  1019                           
  1020  0070                     __Umul8_16@multiplicand:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023  0070                     i1I2C_Write@Data:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     i1___lwdiv@divisor:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ___xxtofl@val:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x0
  1034  0070                     	ds	2
  1035  0072                     ??__Umul8_16:
  1036  0072                     i1___lwdiv@dividend:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x2
  1041  0072                     	ds	2
  1042  0074                     ??___xxtofl:
  1043  0074                     ??i1___lwdiv:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  0074                     __Umul8_16@product:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0074                     i1___lwdiv@quotient:	
  1050                           ; 2 bytes @ 0x4
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x4
  1054  0074                     	ds	2
  1055  0076                     i1___lwdiv@counter:
  1056  0076                     __Umul8_16@word_mpld:	
  1057                           ; 1 bytes @ 0x6
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x6
  1061  0076                     	ds	1
  1062  0077                     ??_calc_average:
  1063  0077                     ?i1___bmul:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066  0077                     i1___bmul@multiplicand:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071  0077                     	ds	1
  1072  0078                     ??i1___bmul:
  1073  0078                     __Umul8_16@multiplier:	
  1074                           ; 1 bytes @ 0x8
  1075                           
  1076  0078                     ___xxtofl@sign:	
  1077                           ; 1 bytes @ 0x8
  1078                           
  1079  0078                     i1___bmul@product:	
  1080                           ; 1 bytes @ 0x8
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x8
  1084  0078                     	ds	1
  1085  0079                     ??___flmul:
  1086  0079                     ___xxtofl@exp:	
  1087                           ; 1 bytes @ 0x9
  1088                           
  1089  0079                     i1___bmul@multiplier:	
  1090                           ; 1 bytes @ 0x9
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x9
  1094  0079                     	ds	1
  1095  007A                     ?i1_EEPROM_Write:
  1096  007A                     i1EEPROM_Write@data:	
  1097                           ; 1 bytes @ 0xA
  1098                           
  1099  007A                     calc_average@i:	
  1100                           ; 1 bytes @ 0xA
  1101                           
  1102  007A                     ___xxtofl@arg:	
  1103                           ; 2 bytes @ 0xA
  1104                           
  1105                           
  1106                           ; 4 bytes @ 0xA
  1107  007A                     	ds	1
  1108  007B                     ??i1_EEPROM_Write:
  1109  007B                     i1EEPROM_Write@address:	
  1110                           ; 1 bytes @ 0xB
  1111                           
  1112                           
  1113                           ; 1 bytes @ 0xB
  1114  007B                     	ds	3
  1115                           
  1116                           	psect	cstackBANK0
  1117  0020                     __pcstackBANK0:
  1118  0020                     ?___flmul:
  1119  0020                     ___flmul@b:	
  1120                           ; 4 bytes @ 0x0
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0x0
  1124  0020                     	ds	4
  1125  0024                     ___flmul@a:
  1126                           
  1127                           ; 4 bytes @ 0x4
  1128  0024                     	ds	4
  1129  0028                     ___flmul@sign:
  1130                           
  1131                           ; 1 bytes @ 0x8
  1132  0028                     	ds	1
  1133  0029                     ___flmul@grs:
  1134                           
  1135                           ; 4 bytes @ 0x9
  1136  0029                     	ds	4
  1137  002D                     ___flmul@aexp:
  1138                           
  1139                           ; 1 bytes @ 0xD
  1140  002D                     	ds	1
  1141  002E                     ___flmul@bexp:
  1142                           
  1143                           ; 1 bytes @ 0xE
  1144  002E                     	ds	1
  1145  002F                     ___flmul@prod:
  1146                           
  1147                           ; 4 bytes @ 0xF
  1148  002F                     	ds	4
  1149  0033                     ___flmul@temp:
  1150                           
  1151                           ; 2 bytes @ 0x13
  1152  0033                     	ds	2
  1153  0035                     ?___fltol:
  1154  0035                     ___fltol@f1:	
  1155                           ; 4 bytes @ 0x15
  1156                           
  1157                           
  1158                           ; 4 bytes @ 0x15
  1159  0035                     	ds	4
  1160  0039                     ??___fltol:
  1161                           
  1162                           ; 1 bytes @ 0x19
  1163  0039                     	ds	4
  1164  003D                     ___fltol@sign1:
  1165                           
  1166                           ; 1 bytes @ 0x1D
  1167  003D                     	ds	1
  1168  003E                     ___fltol@exp1:
  1169                           
  1170                           ; 1 bytes @ 0x1E
  1171  003E                     	ds	1
  1172  003F                     ?_ADC_Read:
  1173                           
  1174                           ; 2 bytes @ 0x1F
  1175  003F                     	ds	2
  1176  0041                     ??_ADC_Read:
  1177                           
  1178                           ; 1 bytes @ 0x21
  1179  0041                     	ds	2
  1180  0043                     ADC_Read@reading:
  1181                           
  1182                           ; 4 bytes @ 0x23
  1183  0043                     	ds	4
  1184  0047                     ??_ISR:
  1185                           
  1186                           ; 1 bytes @ 0x27
  1187  0047                     	ds	5
  1188                           
  1189                           	psect	maintext
  1190  0396                     __pmaintext:	
  1191 ;;
  1192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1193 ;;
  1194 ;; *************** function _main *****************
  1195 ;; Defined at:
  1196 ;;		line 37 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : B00/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          0       0       2       0       0
  1213 ;;      Totals:         0       0       2       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels required when called:    7
  1216 ;; This function calls:
  1217 ;;		_ADC_Init
  1218 ;;		_EEPROM_Read
  1219 ;;		_EEPROM_Write
  1220 ;;		_I2C_INIT_MASTER
  1221 ;;		_LCD_Init
  1222 ;;		_LCD_SendCommand
  1223 ;;		_LCD_Write_String
  1224 ;;		_SEG_Init
  1225 ;;		_SEG_Write
  1226 ;;		_SEG_Write1
  1227 ;;		_TIMER1_INIT
  1228 ;;		___bmul
  1229 ;;		___lwdiv
  1230 ;;		___wmul
  1231 ;; This function is called by:
  1232 ;;		Startup code after reset
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _main
  1238  0396                     _main:
  1239  0396                     l2285:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1242                           
  1243                           
  1244                           ;main.c: 40:     TRISC2=0;
  1245  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1246  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1247  0398  1107               	bcf	7,2	;volatile
  1248                           
  1249                           ;main.c: 41:     TRISC5=0;
  1250  0399  1287               	bcf	7,5	;volatile
  1251                           
  1252                           ;main.c: 42:     TRISB2 = 1;
  1253  039A  1506               	bsf	6,2	;volatile
  1254                           
  1255                           ;main.c: 43:     RB1 = 1;
  1256  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1257  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1258  039D  1486               	bsf	6,1	;volatile
  1259                           
  1260                           ;main.c: 44:     TRISB0 = 1;
  1261  039E  1683               	bsf	3,5	;RP0=1, select bank1
  1262  039F  1303               	bcf	3,6	;RP1=0, select bank1
  1263  03A0  1406               	bsf	6,0	;volatile
  1264                           
  1265                           ;main.c: 45:     TRISB7 = 0;
  1266  03A1  1386               	bcf	6,7	;volatile
  1267                           
  1268                           ;main.c: 46:     INTEDG = 0;
  1269  03A2  1301               	bcf	1,6	;volatile
  1270                           
  1271                           ;main.c: 47:     INTE = 1;
  1272  03A3  160B               	bsf	11,4	;volatile
  1273  03A4                     l2287:
  1274                           
  1275                           ;main.c: 49:     SEG_Init();
  1276  03A4  120A  158A  2400  120A  118A  	fcall	_SEG_Init
  1277  03A9                     l2289:
  1278                           
  1279                           ;main.c: 50:     ADC_Init();
  1280  03A9  120A  158A  249C  120A  118A  	fcall	_ADC_Init
  1281  03AE                     l2291:
  1282                           
  1283                           ;main.c: 51:     LCD_Init();
  1284  03AE  120A  158A  272F  120A  118A  	fcall	_LCD_Init
  1285  03B3                     l2293:
  1286                           
  1287                           ;main.c: 52:     TIMER1_INIT ();
  1288  03B3  120A  158A  245A  120A  118A  	fcall	_TIMER1_INIT
  1289  03B8                     l2295:
  1290                           
  1291                           ;main.c: 53:     I2C_INIT_MASTER();
  1292  03B8  120A  158A  244E  120A  118A  	fcall	_I2C_INIT_MASTER
  1293  03BD                     l2297:
  1294                           
  1295                           ;main.c: 55:     LCD_SendCommand(0x0F);
  1296  03BD  300F               	movlw	15
  1297  03BE  120A  158A  2515  120A  118A  	fcall	_LCD_SendCommand
  1298  03C3                     l2299:
  1299                           
  1300                           ;main.c: 56:     DESIRED_TEMP = (EEPROM_Read(0x00))*10;
  1301  03C3  3000               	movlw	0
  1302  03C4  120A  158A  2628  120A  118A  	fcall	_EEPROM_Read
  1303  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1304  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1305  03CB  00AF               	movwf	??_main^(0+128)
  1306  03CC  01B0               	clrf	(??_main^(0+128)+1)
  1307  03CD  082F               	movf	??_main^(0+128),w
  1308  03CE  00A7               	movwf	___wmul@multiplier^(0+128)
  1309  03CF  0830               	movf	(??_main+1)^(0+128),w
  1310  03D0  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  1311  03D1  300A               	movlw	10
  1312  03D2  00A9               	movwf	___wmul@multiplicand^(0+128)
  1313  03D3  3000               	movlw	0
  1314  03D4  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  1315  03D5  120A  158A  25D8  120A  118A  	fcall	___wmul
  1316  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1317  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1318  03DC  0828               	movf	(?___wmul+1)^(0+128),w
  1319  03DD  00BE               	movwf	(_DESIRED_TEMP+1)^(0+128)
  1320  03DE  0827               	movf	?___wmul^(0+128),w
  1321  03DF  00BD               	movwf	_DESIRED_TEMP^(0+128)
  1322  03E0                     l2301:
  1323                           
  1324                           ;main.c: 57:     DESIRED_TEMP += (EEPROM_Read(0x01)) ;
  1325  03E0  3001               	movlw	1
  1326  03E1  120A  158A  2628  120A  118A  	fcall	_EEPROM_Read
  1327  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1328  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1329  03E8  00AF               	movwf	??_main^(0+128)
  1330  03E9  01B0               	clrf	(??_main^(0+128)+1)
  1331  03EA  082F               	movf	??_main^(0+128),w
  1332  03EB  07BD               	addwf	_DESIRED_TEMP^(0+128),f
  1333  03EC  1803               	skipnc
  1334  03ED  0ABE               	incf	(_DESIRED_TEMP+1)^(0+128),f
  1335  03EE  0830               	movf	(??_main+1)^(0+128),w
  1336  03EF  07BE               	addwf	(_DESIRED_TEMP+1)^(0+128),f
  1337  03F0                     l2303:
  1338                           
  1339                           ;main.c: 61:         if( (RB2 == 0 || RB1 == 0) && MODE == 1){
  1340  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1341  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1342  03F2  1D06               	btfss	6,2	;volatile
  1343  03F3  2BF5               	goto	u2261
  1344  03F4  2BF6               	goto	u2260
  1345  03F5                     u2261:
  1346  03F5  2BFA               	goto	l2307
  1347  03F6                     u2260:
  1348  03F6                     l2305:
  1349  03F6  1886               	btfsc	6,1	;volatile
  1350  03F7  2BF9               	goto	u2271
  1351  03F8  2BFA               	goto	u2270
  1352  03F9                     u2271:
  1353  03F9  2C22               	goto	l2325
  1354  03FA                     u2270:
  1355  03FA                     l2307:
  1356  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  1357  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  1358  03FC  033B               	decf	_MODE^(0+128),w
  1359  03FD  043C               	iorwf	(_MODE+1)^(0+128),w
  1360  03FE  1D03               	btfss	3,2
  1361  03FF  2C01               	goto	u2281
  1362  0400  2C02               	goto	u2280
  1363  0401                     u2281:
  1364  0401  2C22               	goto	l2325
  1365  0402                     u2280:
  1366  0402                     l284:
  1367  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0403  1D06               	btfss	6,2	;volatile
  1369  0404  2C06               	goto	u2291
  1370  0405  2C07               	goto	u2290
  1371  0406                     u2291:
  1372  0406  2C02               	goto	l284
  1373  0407                     u2290:
  1374  0407                     l2311:
  1375  0407  1C86               	btfss	6,1	;volatile
  1376  0408  2C0A               	goto	u2301
  1377  0409  2C0B               	goto	u2300
  1378  040A                     u2301:
  1379  040A  2C02               	goto	l284
  1380  040B                     u2300:
  1381  040B                     l2313:
  1382                           
  1383                           ;main.c: 63:             MODE = 0;
  1384  040B  1683               	bsf	3,5	;RP0=1, select bank1
  1385  040C  1303               	bcf	3,6	;RP1=0, select bank1
  1386  040D  01BB               	clrf	_MODE^(0+128)
  1387  040E  01BC               	clrf	(_MODE+1)^(0+128)
  1388  040F                     l2315:
  1389                           
  1390                           ;main.c: 64:             LCD_SendCommand(0x01);
  1391  040F  3001               	movlw	1
  1392  0410  120A  158A  2515  120A  118A  	fcall	_LCD_SendCommand
  1393  0415                     l2317:
  1394                           
  1395                           ;main.c: 65:             LCD_Write_String("CHANGING TEMP");
  1396  0415  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1397  0416  120A  158A  25FF  120A  118A  	fcall	_LCD_Write_String
  1398  041B                     l2319:
  1399                           
  1400                           ;main.c: 66:             RC5 = 0;
  1401  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1402  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1403  041D  1287               	bcf	7,5	;volatile
  1404  041E                     l2321:
  1405                           
  1406                           ;main.c: 67:             RC2 = 0;
  1407  041E  1107               	bcf	7,2	;volatile
  1408  041F                     l2323:
  1409                           
  1410                           ;main.c: 68:             MODE_COUNTER = 0;
  1411  041F  01E4               	clrf	_MODE_COUNTER
  1412  0420  01E5               	clrf	_MODE_COUNTER+1
  1413                           
  1414                           ;main.c: 69:             continue;
  1415  0421  2BF0               	goto	l2303
  1416  0422                     l2325:
  1417                           
  1418                           ;main.c: 71:         if (MODE == 0 && RB1 == 0 && DESIRED_TEMP != 35){
  1419  0422  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0423  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0424  083B               	movf	_MODE^(0+128),w
  1422  0425  043C               	iorwf	(_MODE+1)^(0+128),w
  1423  0426  1D03               	btfss	3,2
  1424  0427  2C29               	goto	u2311
  1425  0428  2C2A               	goto	u2310
  1426  0429                     u2311:
  1427  0429  2C8F               	goto	l2341
  1428  042A                     u2310:
  1429  042A                     l2327:
  1430  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1431  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1432  042C  1886               	btfsc	6,1	;volatile
  1433  042D  2C2F               	goto	u2321
  1434  042E  2C30               	goto	u2320
  1435  042F                     u2321:
  1436  042F  2C8F               	goto	l2341
  1437  0430                     u2320:
  1438  0430                     l2329:
  1439  0430  3023               	movlw	35
  1440  0431  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0432  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0433  063D               	xorwf	_DESIRED_TEMP^(0+128),w
  1443  0434  043E               	iorwf	(_DESIRED_TEMP+1)^(0+128),w
  1444  0435  1903               	btfsc	3,2
  1445  0436  2C38               	goto	u2331
  1446  0437  2C39               	goto	u2330
  1447  0438                     u2331:
  1448  0438  2C8F               	goto	l2341
  1449  0439                     u2330:
  1450  0439                     l289:
  1451  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1452  043A  1C86               	btfss	6,1	;volatile
  1453  043B  2C3D               	goto	u2341
  1454  043C  2C3E               	goto	u2340
  1455  043D                     u2341:
  1456  043D  2C39               	goto	l289
  1457  043E                     u2340:
  1458  043E                     l2333:
  1459                           
  1460                           ;main.c: 73:             DESIRED_TEMP = DESIRED_TEMP - 5;
  1461  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1462  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1463  0440  083D               	movf	_DESIRED_TEMP^(0+128),w
  1464  0441  3EFB               	addlw	251
  1465  0442  00BD               	movwf	_DESIRED_TEMP^(0+128)
  1466  0443  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1467  0444  1803               	skipnc
  1468  0445  3E01               	addlw	1
  1469  0446  3EFF               	addlw	255
  1470  0447  00BE               	movwf	(_DESIRED_TEMP+1)^(0+128)
  1471  0448                     l2335:
  1472                           
  1473                           ;main.c: 74:             MODE_COUNTER = 0;
  1474  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1476  044A  01E4               	clrf	_MODE_COUNTER
  1477  044B  01E5               	clrf	_MODE_COUNTER+1
  1478  044C                     l2337:
  1479                           
  1480                           ;main.c: 75:             EEPROM_Write(0X00 ,DESIRED_TEMP/10);
  1481  044C  300A               	movlw	10
  1482  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1483  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1484  044F  00A0               	movwf	___lwdiv@divisor^(0+128)
  1485  0450  3000               	movlw	0
  1486  0451  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1487  0452  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1488  0453  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1489  0454  083D               	movf	_DESIRED_TEMP^(0+128),w
  1490  0455  00A2               	movwf	___lwdiv@dividend^(0+128)
  1491  0456  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1492  045B  1683               	bsf	3,5	;RP0=1, select bank1
  1493  045C  1303               	bcf	3,6	;RP1=0, select bank1
  1494  045D  0820               	movf	?___lwdiv^(0+128),w
  1495  045E  00FF               	movwf	btemp+1
  1496  045F  087F               	movf	btemp+1,w
  1497  0460  00AA               	movwf	EEPROM_Write@data^(0+128)
  1498  0461  3000               	movlw	0
  1499  0462  120A  158A  258D  120A  118A  	fcall	_EEPROM_Write
  1500  0467                     l2339:
  1501                           
  1502                           ;main.c: 76:             EEPROM_Write(0X01,DESIRED_TEMP - (DESIRED_TEMP/10)*10);
  1503  0467  30F6               	movlw	246
  1504  0468  00FF               	movwf	btemp+1
  1505  0469  087F               	movf	btemp+1,w
  1506  046A  1683               	bsf	3,5	;RP0=1, select bank1
  1507  046B  1303               	bcf	3,6	;RP1=0, select bank1
  1508  046C  00A7               	movwf	___bmul@multiplicand^(0+128)
  1509  046D  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1510  046E  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1511  046F  083D               	movf	_DESIRED_TEMP^(0+128),w
  1512  0470  00A2               	movwf	___lwdiv@dividend^(0+128)
  1513  0471  300A               	movlw	10
  1514  0472  00A0               	movwf	___lwdiv@divisor^(0+128)
  1515  0473  3000               	movlw	0
  1516  0474  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1517  0475  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1518  047A  1683               	bsf	3,5	;RP0=1, select bank1
  1519  047B  1303               	bcf	3,6	;RP1=0, select bank1
  1520  047C  0820               	movf	?___lwdiv^(0+128),w
  1521  047D  120A  118A  27E7  120A  118A  	fcall	___bmul
  1522  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0484  073D               	addwf	_DESIRED_TEMP^(0+128),w
  1525  0485  00FF               	movwf	btemp+1
  1526  0486  087F               	movf	btemp+1,w
  1527  0487  00AA               	movwf	EEPROM_Write@data^(0+128)
  1528  0488  3001               	movlw	1
  1529  0489  120A  158A  258D  120A  118A  	fcall	_EEPROM_Write
  1530                           
  1531                           ;main.c: 77:             continue;
  1532  048E  2BF0               	goto	l2303
  1533  048F                     l2341:
  1534                           
  1535                           ;main.c: 79:         if (MODE == 0 && RB2 == 0 && DESIRED_TEMP != 75 ){
  1536  048F  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0490  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0491  083B               	movf	_MODE^(0+128),w
  1539  0492  043C               	iorwf	(_MODE+1)^(0+128),w
  1540  0493  1D03               	btfss	3,2
  1541  0494  2C96               	goto	u2351
  1542  0495  2C97               	goto	u2350
  1543  0496                     u2351:
  1544  0496  2CFC               	goto	l2357
  1545  0497                     u2350:
  1546  0497                     l2343:
  1547  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0499  1906               	btfsc	6,2	;volatile
  1550  049A  2C9C               	goto	u2361
  1551  049B  2C9D               	goto	u2360
  1552  049C                     u2361:
  1553  049C  2CFC               	goto	l2357
  1554  049D                     u2360:
  1555  049D                     l2345:
  1556  049D  304B               	movlw	75
  1557  049E  1683               	bsf	3,5	;RP0=1, select bank1
  1558  049F  1303               	bcf	3,6	;RP1=0, select bank1
  1559  04A0  063D               	xorwf	_DESIRED_TEMP^(0+128),w
  1560  04A1  043E               	iorwf	(_DESIRED_TEMP+1)^(0+128),w
  1561  04A2  1903               	btfsc	3,2
  1562  04A3  2CA5               	goto	u2371
  1563  04A4  2CA6               	goto	u2370
  1564  04A5                     u2371:
  1565  04A5  2CFC               	goto	l2357
  1566  04A6                     u2370:
  1567  04A6                     l293:
  1568  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1569  04A7  1D06               	btfss	6,2	;volatile
  1570  04A8  2CAA               	goto	u2381
  1571  04A9  2CAB               	goto	u2380
  1572  04AA                     u2381:
  1573  04AA  2CA6               	goto	l293
  1574  04AB                     u2380:
  1575  04AB                     l2349:
  1576                           
  1577                           ;main.c: 81:             DESIRED_TEMP = DESIRED_TEMP + 5;
  1578  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  1579  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  1580  04AD  083D               	movf	_DESIRED_TEMP^(0+128),w
  1581  04AE  3E05               	addlw	5
  1582  04AF  00BD               	movwf	_DESIRED_TEMP^(0+128)
  1583  04B0  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1584  04B1  1803               	skipnc
  1585  04B2  3E01               	addlw	1
  1586  04B3  3E00               	addlw	0
  1587  04B4  00BE               	movwf	(_DESIRED_TEMP+1)^(0+128)
  1588  04B5                     l2351:
  1589                           
  1590                           ;main.c: 82:             MODE_COUNTER = 0;
  1591  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1592  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1593  04B7  01E4               	clrf	_MODE_COUNTER
  1594  04B8  01E5               	clrf	_MODE_COUNTER+1
  1595  04B9                     l2353:
  1596                           
  1597                           ;main.c: 83:             EEPROM_Write(0x00,DESIRED_TEMP/10);
  1598  04B9  300A               	movlw	10
  1599  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  1600  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  1601  04BC  00A0               	movwf	___lwdiv@divisor^(0+128)
  1602  04BD  3000               	movlw	0
  1603  04BE  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1604  04BF  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1605  04C0  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1606  04C1  083D               	movf	_DESIRED_TEMP^(0+128),w
  1607  04C2  00A2               	movwf	___lwdiv@dividend^(0+128)
  1608  04C3  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1609  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  1610  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  1611  04CA  0820               	movf	?___lwdiv^(0+128),w
  1612  04CB  00FF               	movwf	btemp+1
  1613  04CC  087F               	movf	btemp+1,w
  1614  04CD  00AA               	movwf	EEPROM_Write@data^(0+128)
  1615  04CE  3000               	movlw	0
  1616  04CF  120A  158A  258D  120A  118A  	fcall	_EEPROM_Write
  1617  04D4                     l2355:
  1618                           
  1619                           ;main.c: 84:             EEPROM_Write(0x01,DESIRED_TEMP - (DESIRED_TEMP/10)*10);
  1620  04D4  30F6               	movlw	246
  1621  04D5  00FF               	movwf	btemp+1
  1622  04D6  087F               	movf	btemp+1,w
  1623  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1624  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1625  04D9  00A7               	movwf	___bmul@multiplicand^(0+128)
  1626  04DA  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1627  04DB  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1628  04DC  083D               	movf	_DESIRED_TEMP^(0+128),w
  1629  04DD  00A2               	movwf	___lwdiv@dividend^(0+128)
  1630  04DE  300A               	movlw	10
  1631  04DF  00A0               	movwf	___lwdiv@divisor^(0+128)
  1632  04E0  3000               	movlw	0
  1633  04E1  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1634  04E2  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1635  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1636  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1637  04E9  0820               	movf	?___lwdiv^(0+128),w
  1638  04EA  120A  118A  27E7  120A  118A  	fcall	___bmul
  1639  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  1640  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  1641  04F1  073D               	addwf	_DESIRED_TEMP^(0+128),w
  1642  04F2  00FF               	movwf	btemp+1
  1643  04F3  087F               	movf	btemp+1,w
  1644  04F4  00AA               	movwf	EEPROM_Write@data^(0+128)
  1645  04F5  3001               	movlw	1
  1646  04F6  120A  158A  258D  120A  118A  	fcall	_EEPROM_Write
  1647                           
  1648                           ;main.c: 85:             continue;
  1649  04FB  2BF0               	goto	l2303
  1650  04FC                     l2357:
  1651                           
  1652                           ;main.c: 87:         if ( MODE == 1 ){
  1653  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  1654  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  1655  04FE  033B               	decf	_MODE^(0+128),w
  1656  04FF  043C               	iorwf	(_MODE+1)^(0+128),w
  1657  0500  1D03               	btfss	3,2
  1658  0501  2D03               	goto	u2391
  1659  0502  2D04               	goto	u2390
  1660  0503                     u2391:
  1661  0503  2D58               	goto	l2387
  1662  0504                     u2390:
  1663  0504                     l2359:
  1664                           
  1665                           ;main.c: 88:              if( average > (DESIRED_TEMP+5) && RC2 == 0){
  1666  0504  083D               	movf	_DESIRED_TEMP^(0+128),w
  1667  0505  3E05               	addlw	5
  1668  0506  00AF               	movwf	??_main^(0+128)
  1669  0507  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1670  0508  1803               	skipnc
  1671  0509  3E01               	addlw	1
  1672  050A  3E00               	addlw	0
  1673  050B  00B0               	movwf	(??_main+1)^(0+128)
  1674  050C  0840               	movf	(_average+1)^(0+128),w
  1675  050D  0230               	subwf	(??_main+1)^(0+128),w
  1676  050E  1D03               	skipz
  1677  050F  2D12               	goto	u2405
  1678  0510  083F               	movf	_average^(0+128),w
  1679  0511  022F               	subwf	??_main^(0+128),w
  1680  0512                     u2405:
  1681  0512  1803               	skipnc
  1682  0513  2D15               	goto	u2401
  1683  0514  2D16               	goto	u2400
  1684  0515                     u2401:
  1685  0515  2D2E               	goto	l2375
  1686  0516                     u2400:
  1687  0516                     l2361:
  1688  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0518  1907               	btfsc	7,2	;volatile
  1691  0519  2D1B               	goto	u2411
  1692  051A  2D1C               	goto	u2410
  1693  051B                     u2411:
  1694  051B  2D2E               	goto	l2375
  1695  051C                     u2410:
  1696  051C                     l2363:
  1697                           
  1698                           ;main.c: 89:                 LCD_SendCommand(0x01);
  1699  051C  3001               	movlw	1
  1700  051D  120A  158A  2515  120A  118A  	fcall	_LCD_SendCommand
  1701  0522                     l2365:
  1702                           
  1703                           ;main.c: 90:                 LCD_Write_String("COOLING");
  1704  0522  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1705  0523  120A  158A  25FF  120A  118A  	fcall	_LCD_Write_String
  1706  0528                     l2367:
  1707                           
  1708                           ;main.c: 91:                 RB7 = 0;
  1709  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1711  052A  1386               	bcf	6,7	;volatile
  1712  052B                     l2369:
  1713                           
  1714                           ;main.c: 92:                 RC5=0;
  1715  052B  1287               	bcf	7,5	;volatile
  1716  052C                     l2371:
  1717                           
  1718                           ;main.c: 93:                 RC2=1;
  1719  052C  1507               	bsf	7,2	;volatile
  1720                           
  1721                           ;main.c: 94:                 continue;
  1722  052D  2BF0               	goto	l2303
  1723  052E                     l2375:
  1724  052E  1683               	bsf	3,5	;RP0=1, select bank1
  1725  052F  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0530  083D               	movf	_DESIRED_TEMP^(0+128),w
  1727  0531  3EFB               	addlw	251
  1728  0532  00AF               	movwf	??_main^(0+128)
  1729  0533  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1730  0534  1803               	skipnc
  1731  0535  3E01               	addlw	1
  1732  0536  3EFF               	addlw	255
  1733  0537  00B0               	movwf	(??_main+1)^(0+128)
  1734  0538  0830               	movf	(??_main+1)^(0+128),w
  1735  0539  0240               	subwf	(_average+1)^(0+128),w
  1736  053A  1D03               	skipz
  1737  053B  2D3E               	goto	u2425
  1738  053C  082F               	movf	??_main^(0+128),w
  1739  053D  023F               	subwf	_average^(0+128),w
  1740  053E                     u2425:
  1741  053E  1803               	skipnc
  1742  053F  2D41               	goto	u2421
  1743  0540  2D42               	goto	u2420
  1744  0541                     u2421:
  1745  0541  2D58               	goto	l2387
  1746  0542                     u2420:
  1747  0542                     l2377:
  1748  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0544  1A87               	btfsc	7,5	;volatile
  1751  0545  2D47               	goto	u2431
  1752  0546  2D48               	goto	u2430
  1753  0547                     u2431:
  1754  0547  2D58               	goto	l2387
  1755  0548                     u2430:
  1756  0548                     l2379:
  1757                           
  1758                           ;main.c: 97:                 LCD_SendCommand(0x01);
  1759  0548  3001               	movlw	1
  1760  0549  120A  158A  2515  120A  118A  	fcall	_LCD_SendCommand
  1761  054E                     l2381:
  1762                           
  1763                           ;main.c: 98:                 LCD_Write_String("HEATING");
  1764  054E  3017               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1765  054F  120A  158A  25FF  120A  118A  	fcall	_LCD_Write_String
  1766  0554                     l2383:
  1767                           
  1768                           ;main.c: 99:                 RC2=0;
  1769  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0556  1107               	bcf	7,2	;volatile
  1772  0557                     l2385:
  1773                           
  1774                           ;main.c: 100:                 RC5=1;
  1775  0557  1687               	bsf	7,5	;volatile
  1776  0558                     l2387:
  1777                           
  1778                           ;main.c: 104:         if (MODE == 1){
  1779  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1780  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1781  055A  033B               	decf	_MODE^(0+128),w
  1782  055B  043C               	iorwf	(_MODE+1)^(0+128),w
  1783  055C  1D03               	btfss	3,2
  1784  055D  2D5F               	goto	u2441
  1785  055E  2D60               	goto	u2440
  1786  055F                     u2441:
  1787  055F  2DAD               	goto	l2395
  1788  0560                     u2440:
  1789  0560                     l2389:
  1790                           
  1791                           ;main.c: 105:          SEG_Write(ADC_TEMP/10);
  1792  0560  300A               	movlw	10
  1793  0561  00A0               	movwf	___lwdiv@divisor^(0+128)
  1794  0562  3000               	movlw	0
  1795  0563  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1796  0564  0842               	movf	(_ADC_TEMP+1)^(0+128),w
  1797  0565  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1798  0566  0841               	movf	_ADC_TEMP^(0+128),w
  1799  0567  00A2               	movwf	___lwdiv@dividend^(0+128)
  1800  0568  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1801  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1802  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1803  056F  0821               	movf	(?___lwdiv+1)^(0+128),w
  1804  0570  00A8               	movwf	(SEG_Write@number+1)^(0+128)
  1805  0571  0820               	movf	?___lwdiv^(0+128),w
  1806  0572  00A7               	movwf	SEG_Write@number^(0+128)
  1807  0573  120A  158A  24AB  120A  118A  	fcall	_SEG_Write
  1808  0578                     l2391:
  1809                           
  1810                           ;main.c: 106:          _delay((unsigned long)((80)*(8000000/4000000.0)));
  1811  0578  3034               	movlw	52
  1812  0579  1683               	bsf	3,5	;RP0=1, select bank1
  1813  057A  1303               	bcf	3,6	;RP1=0, select bank1
  1814  057B  00AF               	movwf	??_main^(0+128)
  1815  057C                     u2547:
  1816  057C  0BAF               	decfsz	??_main^(0+128),f
  1817  057D  2D7C               	goto	u2547
  1818  057E  0000               	nop
  1819  057F                     l2393:
  1820                           
  1821                           ;main.c: 107:          SEG_Write1(ADC_TEMP - (ADC_TEMP/10)*10);
  1822  057F  300A               	movlw	10
  1823  0580  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0581  1303               	bcf	3,6	;RP1=0, select bank1
  1825  0582  00A0               	movwf	___lwdiv@divisor^(0+128)
  1826  0583  3000               	movlw	0
  1827  0584  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1828  0585  0842               	movf	(_ADC_TEMP+1)^(0+128),w
  1829  0586  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1830  0587  0841               	movf	_ADC_TEMP^(0+128),w
  1831  0588  00A2               	movwf	___lwdiv@dividend^(0+128)
  1832  0589  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1833  058E  1683               	bsf	3,5	;RP0=1, select bank1
  1834  058F  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0590  0821               	movf	(?___lwdiv+1)^(0+128),w
  1836  0591  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  1837  0592  0820               	movf	?___lwdiv^(0+128),w
  1838  0593  00A7               	movwf	___wmul@multiplier^(0+128)
  1839  0594  30F6               	movlw	246
  1840  0595  00A9               	movwf	___wmul@multiplicand^(0+128)
  1841  0596  30FF               	movlw	255
  1842  0597  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  1843  0598  120A  158A  25D8  120A  118A  	fcall	___wmul
  1844  059D  1683               	bsf	3,5	;RP0=1, select bank1
  1845  059E  1303               	bcf	3,6	;RP1=0, select bank1
  1846  059F  0841               	movf	_ADC_TEMP^(0+128),w
  1847  05A0  0727               	addwf	?___wmul^(0+128),w
  1848  05A1  00AD               	movwf	SEG_Write1@number^(0+128)
  1849  05A2  0842               	movf	(_ADC_TEMP+1)^(0+128),w
  1850  05A3  1803               	skipnc
  1851  05A4  0A42               	incf	(_ADC_TEMP+1)^(0+128),w
  1852  05A5  0728               	addwf	(?___wmul+1)^(0+128),w
  1853  05A6  00AE               	movwf	(SEG_Write1@number+1)^(0+128)
  1854  05A7  120A  158A  24BA  120A  118A  	fcall	_SEG_Write1
  1855                           
  1856                           ;main.c: 108:         }
  1857  05AC  2BF0               	goto	l2303
  1858  05AD                     l2395:
  1859  05AD  083B               	movf	_MODE^(0+128),w
  1860  05AE  043C               	iorwf	(_MODE+1)^(0+128),w
  1861  05AF  1D03               	btfss	3,2
  1862  05B0  2DB2               	goto	u2451
  1863  05B1  2DB3               	goto	u2450
  1864  05B2                     u2451:
  1865  05B2  2BF0               	goto	l2303
  1866  05B3                     u2450:
  1867  05B3                     l2397:
  1868                           
  1869                           ;main.c: 110:             SEG_Write(DESIRED_TEMP/10);
  1870  05B3  300A               	movlw	10
  1871  05B4  00A0               	movwf	___lwdiv@divisor^(0+128)
  1872  05B5  3000               	movlw	0
  1873  05B6  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1874  05B7  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1875  05B8  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1876  05B9  083D               	movf	_DESIRED_TEMP^(0+128),w
  1877  05BA  00A2               	movwf	___lwdiv@dividend^(0+128)
  1878  05BB  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1879  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  1880  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  1881  05C2  0821               	movf	(?___lwdiv+1)^(0+128),w
  1882  05C3  00A8               	movwf	(SEG_Write@number+1)^(0+128)
  1883  05C4  0820               	movf	?___lwdiv^(0+128),w
  1884  05C5  00A7               	movwf	SEG_Write@number^(0+128)
  1885  05C6  120A  158A  24AB  120A  118A  	fcall	_SEG_Write
  1886                           
  1887                           ;main.c: 111:             SEG_Write1(DESIRED_TEMP - (DESIRED_TEMP/10)*10 );
  1888  05CB  300A               	movlw	10
  1889  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1890  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1891  05CE  00A0               	movwf	___lwdiv@divisor^(0+128)
  1892  05CF  3000               	movlw	0
  1893  05D0  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  1894  05D1  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1895  05D2  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  1896  05D3  083D               	movf	_DESIRED_TEMP^(0+128),w
  1897  05D4  00A2               	movwf	___lwdiv@dividend^(0+128)
  1898  05D5  120A  158A  26E9  120A  118A  	fcall	___lwdiv
  1899  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1900  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1901  05DC  0821               	movf	(?___lwdiv+1)^(0+128),w
  1902  05DD  00A8               	movwf	(___wmul@multiplier+1)^(0+128)
  1903  05DE  0820               	movf	?___lwdiv^(0+128),w
  1904  05DF  00A7               	movwf	___wmul@multiplier^(0+128)
  1905  05E0  30F6               	movlw	246
  1906  05E1  00A9               	movwf	___wmul@multiplicand^(0+128)
  1907  05E2  30FF               	movlw	255
  1908  05E3  00AA               	movwf	(___wmul@multiplicand^(0+128)+1)
  1909  05E4  120A  158A  25D8  120A  118A  	fcall	___wmul
  1910  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1911  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1912  05EB  083D               	movf	_DESIRED_TEMP^(0+128),w
  1913  05EC  0727               	addwf	?___wmul^(0+128),w
  1914  05ED  00AD               	movwf	SEG_Write1@number^(0+128)
  1915  05EE  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  1916  05EF  1803               	skipnc
  1917  05F0  0A3E               	incf	(_DESIRED_TEMP+1)^(0+128),w
  1918  05F1  0728               	addwf	(?___wmul+1)^(0+128),w
  1919  05F2  00AE               	movwf	(SEG_Write1@number+1)^(0+128)
  1920  05F3  120A  158A  24BA  120A  118A  	fcall	_SEG_Write1
  1921  05F8  2BF0               	goto	l2303
  1922  05F9  120A  118A  2812   	ljmp	start
  1923  05FC                     __end_of_main:
  1924                           
  1925                           	psect	text1
  1926  0DD8                     __ptext1:	
  1927 ;; *************** function ___wmul *****************
  1928 ;; Defined at:
  1929 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  multiplier      2    7[BANK1 ] unsigned int 
  1932 ;;  multiplicand    2    9[BANK1 ] unsigned int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  product         2   11[BANK1 ] unsigned int 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2    7[BANK1 ] unsigned int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       4       0       0
  1945 ;;      Locals:         0       0       2       0       0
  1946 ;;      Temps:          0       0       0       0       0
  1947 ;;      Totals:         0       0       6       0       0
  1948 ;;Total ram usage:        6 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    4
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;;		_LCD_WriteNum
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function ___wmul
  1961  0DD8                     ___wmul:
  1962  0DD8                     l2153:	
  1963                           ;incstack = 0
  1964                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1965                           
  1966  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0DDA  01AB               	clrf	___wmul@product^(0+128)
  1969  0DDB  01AC               	clrf	(___wmul@product+1)^(0+128)
  1970  0DDC                     l2155:
  1971  0DDC  1C27               	btfss	___wmul@multiplier^(0+128),0
  1972  0DDD  2DDF               	goto	u2071
  1973  0DDE  2DE0               	goto	u2070
  1974  0DDF                     u2071:
  1975  0DDF  2DE6               	goto	l409
  1976  0DE0                     u2070:
  1977  0DE0                     l2157:
  1978  0DE0  0829               	movf	___wmul@multiplicand^(0+128),w
  1979  0DE1  07AB               	addwf	___wmul@product^(0+128),f
  1980  0DE2  1803               	skipnc
  1981  0DE3  0AAC               	incf	(___wmul@product+1)^(0+128),f
  1982  0DE4  082A               	movf	(___wmul@multiplicand+1)^(0+128),w
  1983  0DE5  07AC               	addwf	(___wmul@product+1)^(0+128),f
  1984  0DE6                     l409:
  1985  0DE6  3001               	movlw	1
  1986  0DE7                     u2085:
  1987  0DE7  1003               	clrc
  1988  0DE8  0DA9               	rlf	___wmul@multiplicand^(0+128),f
  1989  0DE9  0DAA               	rlf	(___wmul@multiplicand+1)^(0+128),f
  1990  0DEA  3EFF               	addlw	-1
  1991  0DEB  1D03               	skipz
  1992  0DEC  2DE7               	goto	u2085
  1993  0DED                     l2159:
  1994  0DED  3001               	movlw	1
  1995  0DEE                     u2095:
  1996  0DEE  1003               	clrc
  1997  0DEF  0CA8               	rrf	(___wmul@multiplier+1)^(0+128),f
  1998  0DF0  0CA7               	rrf	___wmul@multiplier^(0+128),f
  1999  0DF1  3EFF               	addlw	-1
  2000  0DF2  1D03               	skipz
  2001  0DF3  2DEE               	goto	u2095
  2002  0DF4                     l2161:
  2003  0DF4  0827               	movf	___wmul@multiplier^(0+128),w
  2004  0DF5  0428               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2005  0DF6  1D03               	btfss	3,2
  2006  0DF7  2DF9               	goto	u2101
  2007  0DF8  2DFA               	goto	u2100
  2008  0DF9                     u2101:
  2009  0DF9  2DDC               	goto	l2155
  2010  0DFA                     u2100:
  2011  0DFA                     l2163:
  2012  0DFA  082C               	movf	(___wmul@product+1)^(0+128),w
  2013  0DFB  00A8               	movwf	(?___wmul+1)^(0+128)
  2014  0DFC  082B               	movf	___wmul@product^(0+128),w
  2015  0DFD  00A7               	movwf	?___wmul^(0+128)
  2016  0DFE                     l411:
  2017  0DFE  0008               	return
  2018  0DFF                     __end_of___wmul:
  2019                           
  2020                           	psect	text2
  2021  0EE9                     __ptext2:	
  2022 ;; *************** function ___lwdiv *****************
  2023 ;; Defined at:
  2024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  divisor         2    0[BANK1 ] unsigned int 
  2027 ;;  dividend        2    2[BANK1 ] unsigned int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  quotient        2    4[BANK1 ] unsigned int 
  2030 ;;  counter         1    6[BANK1 ] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    0[BANK1 ] unsigned int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, btemp+1
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       0       4       0       0
  2041 ;;      Locals:         0       0       3       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         0       0       7       0       0
  2044 ;;Total ram usage:        7 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    4
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;;		_LCD_WriteNum
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function ___lwdiv
  2057  0EE9                     ___lwdiv:
  2058  0EE9                     l2183:	
  2059                           ;incstack = 0
  2060                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2061                           
  2062  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0EEA  1303               	bcf	3,6	;RP1=0, select bank1
  2064  0EEB  01A4               	clrf	___lwdiv@quotient^(0+128)
  2065  0EEC  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  2066  0EED                     l2185:
  2067  0EED  0820               	movf	___lwdiv@divisor^(0+128),w
  2068  0EEE  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  2069  0EEF  1903               	btfsc	3,2
  2070  0EF0  2EF2               	goto	u2131
  2071  0EF1  2EF3               	goto	u2130
  2072  0EF2                     u2131:
  2073  0EF2  2F2A               	goto	l2205
  2074  0EF3                     u2130:
  2075  0EF3                     l2187:
  2076  0EF3  01A6               	clrf	___lwdiv@counter^(0+128)
  2077  0EF4  0AA6               	incf	___lwdiv@counter^(0+128),f
  2078  0EF5  2F01               	goto	l2193
  2079  0EF6                     l2189:
  2080  0EF6  3001               	movlw	1
  2081  0EF7                     u2145:
  2082  0EF7  1003               	clrc
  2083  0EF8  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  2084  0EF9  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2085  0EFA  3EFF               	addlw	-1
  2086  0EFB  1D03               	skipz
  2087  0EFC  2EF7               	goto	u2145
  2088  0EFD                     l2191:
  2089  0EFD  3001               	movlw	1
  2090  0EFE  00FF               	movwf	btemp+1
  2091  0EFF  087F               	movf	btemp+1,w
  2092  0F00  07A6               	addwf	___lwdiv@counter^(0+128),f
  2093  0F01                     l2193:
  2094  0F01  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  2095  0F02  2F04               	goto	u2151
  2096  0F03  2F05               	goto	u2150
  2097  0F04                     u2151:
  2098  0F04  2EF6               	goto	l2189
  2099  0F05                     u2150:
  2100  0F05                     l2195:
  2101  0F05  3001               	movlw	1
  2102  0F06                     u2165:
  2103  0F06  1003               	clrc
  2104  0F07  0DA4               	rlf	___lwdiv@quotient^(0+128),f
  2105  0F08  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2106  0F09  3EFF               	addlw	-1
  2107  0F0A  1D03               	skipz
  2108  0F0B  2F06               	goto	u2165
  2109  0F0C  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2110  0F0D  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2111  0F0E  1D03               	skipz
  2112  0F0F  2F12               	goto	u2175
  2113  0F10  0820               	movf	___lwdiv@divisor^(0+128),w
  2114  0F11  0222               	subwf	___lwdiv@dividend^(0+128),w
  2115  0F12                     u2175:
  2116  0F12  1C03               	skipc
  2117  0F13  2F15               	goto	u2171
  2118  0F14  2F16               	goto	u2170
  2119  0F15                     u2171:
  2120  0F15  2F1D               	goto	l2201
  2121  0F16                     u2170:
  2122  0F16                     l2197:
  2123  0F16  0820               	movf	___lwdiv@divisor^(0+128),w
  2124  0F17  02A2               	subwf	___lwdiv@dividend^(0+128),f
  2125  0F18  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2126  0F19  1C03               	skipc
  2127  0F1A  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  2128  0F1B  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2129  0F1C                     l2199:
  2130  0F1C  1424               	bsf	___lwdiv@quotient^(0+128),0
  2131  0F1D                     l2201:
  2132  0F1D  3001               	movlw	1
  2133  0F1E                     u2185:
  2134  0F1E  1003               	clrc
  2135  0F1F  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2136  0F20  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  2137  0F21  3EFF               	addlw	-1
  2138  0F22  1D03               	skipz
  2139  0F23  2F1E               	goto	u2185
  2140  0F24                     l2203:
  2141  0F24  3001               	movlw	1
  2142  0F25  02A6               	subwf	___lwdiv@counter^(0+128),f
  2143  0F26  1D03               	btfss	3,2
  2144  0F27  2F29               	goto	u2191
  2145  0F28  2F2A               	goto	u2190
  2146  0F29                     u2191:
  2147  0F29  2F05               	goto	l2195
  2148  0F2A                     u2190:
  2149  0F2A                     l2205:
  2150  0F2A  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  2151  0F2B  00A1               	movwf	(?___lwdiv+1)^(0+128)
  2152  0F2C  0824               	movf	___lwdiv@quotient^(0+128),w
  2153  0F2D  00A0               	movwf	?___lwdiv^(0+128)
  2154  0F2E                     l681:
  2155  0F2E  0008               	return
  2156  0F2F                     __end_of___lwdiv:
  2157                           
  2158                           	psect	text3
  2159  07E7                     __ptext3:	
  2160 ;; *************** function ___bmul *****************
  2161 ;; Defined at:
  2162 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  multiplier      1    wreg     unsigned char 
  2165 ;;  multiplicand    1    7[BANK1 ] unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  multiplier      1    9[BANK1 ] unsigned char 
  2168 ;;  product         1    8[BANK1 ] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      unsigned char 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, btemp+1
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         0       0       1       0       0
  2179 ;;      Locals:         0       0       2       0       0
  2180 ;;      Temps:          0       0       0       0       0
  2181 ;;      Totals:         0       0       3       0       0
  2182 ;;Total ram usage:        3 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    4
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function ___bmul
  2194  07E7                     ___bmul:
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2198                           ;___bmul@multiplier stored from wreg
  2199  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  2200  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  2201  07E9  00A9               	movwf	___bmul@multiplier^(0+128)
  2202  07EA                     l2167:
  2203  07EA  01A8               	clrf	___bmul@product^(0+128)
  2204  07EB                     l2169:
  2205  07EB  1C29               	btfss	___bmul@multiplier^(0+128),0
  2206  07EC  2FEE               	goto	u2111
  2207  07ED  2FEF               	goto	u2110
  2208  07EE                     u2111:
  2209  07EE  2FF3               	goto	l2173
  2210  07EF                     u2110:
  2211  07EF                     l2171:
  2212  07EF  0827               	movf	___bmul@multiplicand^(0+128),w
  2213  07F0  00FF               	movwf	btemp+1
  2214  07F1  087F               	movf	btemp+1,w
  2215  07F2  07A8               	addwf	___bmul@product^(0+128),f
  2216  07F3                     l2173:
  2217  07F3  1003               	clrc
  2218  07F4  0DA7               	rlf	___bmul@multiplicand^(0+128),f
  2219  07F5                     l2175:
  2220  07F5  1003               	clrc
  2221  07F6  0CA9               	rrf	___bmul@multiplier^(0+128),f
  2222  07F7                     l2177:
  2223  07F7  0829               	movf	___bmul@multiplier^(0+128),w
  2224  07F8  1D03               	btfss	3,2
  2225  07F9  2FFB               	goto	u2121
  2226  07FA  2FFC               	goto	u2120
  2227  07FB                     u2121:
  2228  07FB  2FEB               	goto	l2169
  2229  07FC                     u2120:
  2230  07FC                     l2179:
  2231  07FC  0828               	movf	___bmul@product^(0+128),w
  2232  07FD                     l435:
  2233  07FD  0008               	return
  2234  07FE                     __end_of___bmul:
  2235                           
  2236                           	psect	text4
  2237  0C5A                     __ptext4:	
  2238 ;; *************** function _TIMER1_INIT *****************
  2239 ;; Defined at:
  2240 ;;		line 3 in file "TIMER.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    4
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _TIMER1_INIT
  2270  0C5A                     _TIMER1_INIT:
  2271  0C5A                     l2133:	
  2272                           ;incstack = 0
  2273                           ; Regs used in _TIMER1_INIT: [wreg+status,2]
  2274                           
  2275                           
  2276                           ;TIMER.c: 5:     TMR1IE = 1;
  2277  0C5A  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0C5B  1303               	bcf	3,6	;RP1=0, select bank1
  2279  0C5C  140C               	bsf	12,0	;volatile
  2280                           
  2281                           ;TIMER.c: 6:     PEIE = 1;
  2282  0C5D  170B               	bsf	11,6	;volatile
  2283                           
  2284                           ;TIMER.c: 7:     GIE = 1;
  2285  0C5E  178B               	bsf	11,7	;volatile
  2286  0C5F                     l2135:
  2287                           
  2288                           ;TIMER.c: 8:     T1CON = 0b00000001;
  2289  0C5F  3001               	movlw	1
  2290  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0C62  0090               	movwf	16	;volatile
  2293  0C63                     l2137:
  2294                           
  2295                           ;TIMER.c: 9:     TMR1 = 0;
  2296  0C63  018E               	clrf	14	;volatile
  2297  0C64  018F               	clrf	15	;volatile
  2298  0C65                     l201:
  2299  0C65  0008               	return
  2300  0C66                     __end_of_TIMER1_INIT:
  2301                           
  2302                           	psect	text5
  2303  0CBA                     __ptext5:	
  2304 ;; *************** function _SEG_Write1 *****************
  2305 ;; Defined at:
  2306 ;;		line 32 in file "SEV_SEG.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  number          2   13[BANK1 ] unsigned int 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       2       0       0
  2321 ;;      Locals:         0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0       0       2       0       0
  2324 ;;Total ram usage:        2 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    4
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _SEG_Write1
  2336  0CBA                     _SEG_Write1:
  2337  0CBA                     l2129:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _SEG_Write1: [wreg-fsr0h+status,2+status,0]
  2340                           
  2341                           
  2342                           ;SEV_SEG.c: 35:         RA3 = 0;
  2343  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0CBC  1185               	bcf	5,3	;volatile
  2346                           
  2347                           ;SEV_SEG.c: 36:         RA4 = 1;
  2348  0CBD  1605               	bsf	5,4	;volatile
  2349  0CBE                     l2131:
  2350                           
  2351                           ;SEV_SEG.c: 37:         PORTD = (numbers[number] );
  2352  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0CC0  082D               	movf	SEG_Write1@number^(0+128),w
  2355  0CC1  3EB1               	addlw	(low (_numbers| 0))& (0+255)
  2356  0CC2  0084               	movwf	4
  2357  0CC3  1383               	bcf	3,7	;select IRP bank1
  2358  0CC4  0800               	movf	0,w
  2359  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0CC7  0088               	movwf	8	;volatile
  2362  0CC8                     l188:
  2363  0CC8  0008               	return
  2364  0CC9                     __end_of_SEG_Write1:
  2365                           
  2366                           	psect	text6
  2367  0CAB                     __ptext6:	
  2368 ;; *************** function _SEG_Write *****************
  2369 ;; Defined at:
  2370 ;;		line 18 in file "SEV_SEG.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  number          2    7[BANK1 ] unsigned int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       2       0       0
  2385 ;;      Locals:         0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0
  2387 ;;      Totals:         0       0       2       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    4
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _SEG_Write
  2400  0CAB                     _SEG_Write:
  2401  0CAB                     l2125:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _SEG_Write: [wreg-fsr0h+status,2+status,0]
  2404                           
  2405                           
  2406                           ;SEV_SEG.c: 21:         RA3 = 1;
  2407  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0CAD  1585               	bsf	5,3	;volatile
  2410                           
  2411                           ;SEV_SEG.c: 22:         RA4 = 0;
  2412  0CAE  1205               	bcf	5,4	;volatile
  2413  0CAF                     l2127:
  2414                           
  2415                           ;SEV_SEG.c: 23:         PORTD = (numbers[number]);
  2416  0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0CB1  0827               	movf	SEG_Write@number^(0+128),w
  2419  0CB2  3EB1               	addlw	(low (_numbers| 0))& (0+255)
  2420  0CB3  0084               	movwf	4
  2421  0CB4  1383               	bcf	3,7	;select IRP bank1
  2422  0CB5  0800               	movf	0,w
  2423  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0CB8  0088               	movwf	8	;volatile
  2426  0CB9                     l185:
  2427  0CB9  0008               	return
  2428  0CBA                     __end_of_SEG_Write:
  2429                           
  2430                           	psect	text7
  2431  0C00                     __ptext7:	
  2432 ;; *************** function _SEG_Init *****************
  2433 ;; Defined at:
  2434 ;;		line 10 in file "SEV_SEG.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    4
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _SEG_Init
  2464  0C00                     _SEG_Init:
  2465  0C00                     l2117:	
  2466                           ;incstack = 0
  2467                           ; Regs used in _SEG_Init: [status,2]
  2468                           
  2469                           
  2470                           ;SEV_SEG.c: 11:     TRISD = 0x00;
  2471  0C00  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0C01  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0C02  0188               	clrf	8	;volatile
  2474  0C03                     l2119:
  2475                           
  2476                           ;SEV_SEG.c: 12:     TRISA3 = 0;
  2477  0C03  1185               	bcf	5,3	;volatile
  2478  0C04                     l2121:
  2479                           
  2480                           ;SEV_SEG.c: 13:     TRISA4 = 0;
  2481  0C04  1205               	bcf	5,4	;volatile
  2482  0C05                     l2123:
  2483                           
  2484                           ;SEV_SEG.c: 14:     TRISA5 = 0;
  2485  0C05  1285               	bcf	5,5	;volatile
  2486  0C06                     l182:
  2487  0C06  0008               	return
  2488  0C07                     __end_of_SEG_Init:
  2489                           
  2490                           	psect	text8
  2491  0DFF                     __ptext8:	
  2492 ;; *************** function _LCD_Write_String *****************
  2493 ;; Defined at:
  2494 ;;		line 141 in file "LCD_prog.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  str             1    wreg     PTR unsigned char 
  2497 ;;		 -> STR_3(8), STR_2(8), STR_1(14), 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  str             1    6[BANK1 ] PTR unsigned char 
  2500 ;;		 -> STR_3(8), STR_2(8), STR_1(14), 
  2501 ;;  i               2    4[BANK1 ] int 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       0       0       0       0
  2512 ;;      Locals:         0       0       3       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         0       0       3       0       0
  2515 ;;Total ram usage:        3 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    6
  2518 ;; This function calls:
  2519 ;;		_LCD_Write_uint8_t
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _LCD_Write_String
  2527  0DFF                     _LCD_Write_String:
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2531                           ;LCD_Write_String@str stored from wreg
  2532  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0E01  00A6               	movwf	LCD_Write_String@str^(0+128)
  2535  0E02                     l2077:
  2536                           
  2537                           ;LCD_prog.c: 141: void LCD_Write_String(uint8_t *str);LCD_prog.c: 142: {;LCD_prog.c: 143
      +                          :   int i;;LCD_prog.c: 144:   for(i=0;str[i]!='\0';i++)
  2538  0E02  01A4               	clrf	LCD_Write_String@i^(0+128)
  2539  0E03  01A5               	clrf	(LCD_Write_String@i+1)^(0+128)
  2540  0E04  2E1A               	goto	l2083
  2541  0E05                     l2079:
  2542                           
  2543                           ;LCD_prog.c: 145:     LCD_Write_uint8_t(str[i]);
  2544  0E05  0824               	movf	LCD_Write_String@i^(0+128),w
  2545  0E06  0726               	addwf	LCD_Write_String@str^(0+128),w
  2546  0E07  0084               	movwf	4
  2547  0E08  120A  158A  2000  120A  158A  	fcall	stringdir
  2548  0E0D  120A  158A  256E  120A  158A  	fcall	_LCD_Write_uint8_t
  2549  0E12                     l2081:
  2550  0E12  3001               	movlw	1
  2551  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0E15  07A4               	addwf	LCD_Write_String@i^(0+128),f
  2554  0E16  1803               	skipnc
  2555  0E17  0AA5               	incf	(LCD_Write_String@i+1)^(0+128),f
  2556  0E18  3000               	movlw	0
  2557  0E19  07A5               	addwf	(LCD_Write_String@i+1)^(0+128),f
  2558  0E1A                     l2083:
  2559  0E1A  0824               	movf	LCD_Write_String@i^(0+128),w
  2560  0E1B  0726               	addwf	LCD_Write_String@str^(0+128),w
  2561  0E1C  0084               	movwf	4
  2562  0E1D  120A  158A  2000  120A  158A  	fcall	stringdir
  2563  0E22  3A00               	xorlw	0
  2564  0E23  1D03               	skipz
  2565  0E24  2E26               	goto	u2041
  2566  0E25  2E27               	goto	u2040
  2567  0E26                     u2041:
  2568  0E26  2E05               	goto	l2079
  2569  0E27                     u2040:
  2570  0E27                     l52:
  2571  0E27  0008               	return
  2572  0E28                     __end_of_LCD_Write_String:
  2573                           
  2574                           	psect	text9
  2575  0D6E                     __ptext9:	
  2576 ;; *************** function _LCD_Write_uint8_t *****************
  2577 ;; Defined at:
  2578 ;;		line 131 in file "LCD_prog.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  Data            1    wreg     unsigned char 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  Data            1    3[BANK1 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       1       0       0
  2594 ;;      Temps:          0       0       2       0       0
  2595 ;;      Totals:         0       0       3       0       0
  2596 ;;Total ram usage:        3 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    5
  2599 ;; This function calls:
  2600 ;;		_LCD_SEND
  2601 ;; This function is called by:
  2602 ;;		_LCD_Write_String
  2603 ;;		_LCD_WriteNum
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           
  2608                           ;psect for function _LCD_Write_uint8_t
  2609  0D6E                     _LCD_Write_uint8_t:
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _LCD_Write_uint8_t: [wreg+status,2+status,0+pclath+cstack]
  2613                           ;LCD_Write_uint8_t@Data stored from wreg
  2614  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2616  0D70  00A3               	movwf	LCD_Write_uint8_t@Data^(0+128)
  2617  0D71                     l1725:
  2618                           
  2619                           ;LCD_prog.c: 131: void LCD_Write_uint8_t(uint8_t Data);LCD_prog.c: 132: {;LCD_prog.c: 13
      +                          3:   RE2 = 1;
  2620  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0D73  1509               	bsf	9,2	;volatile
  2623  0D74                     l1727:
  2624                           
  2625                           ;LCD_prog.c: 134:   LCD_SEND(Data);
  2626  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  2628  0D76  0823               	movf	LCD_Write_uint8_t@Data^(0+128),w
  2629  0D77  120A  158A  2407  120A  158A  	fcall	_LCD_SEND
  2630  0D7C                     l1729:
  2631                           
  2632                           ;LCD_prog.c: 135:    RE1 = 1;
  2633  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0D7E  1489               	bsf	9,1	;volatile
  2636  0D7F                     l1731:
  2637                           
  2638                           ;LCD_prog.c: 136:   _delay((unsigned long)((1000)*(8000000/4000000.0)));
  2639  0D7F  3003               	movlw	3
  2640  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0D82  00A2               	movwf	(??_LCD_Write_uint8_t^(0+128)+1)
  2643  0D83  3097               	movlw	151
  2644  0D84  00A1               	movwf	??_LCD_Write_uint8_t^(0+128)
  2645  0D85                     u2557:
  2646  0D85  0BA1               	decfsz	??_LCD_Write_uint8_t^(0+128),f
  2647  0D86  2D85               	goto	u2557
  2648  0D87  0BA2               	decfsz	(??_LCD_Write_uint8_t^(0+128)+1),f
  2649  0D88  2D85               	goto	u2557
  2650  0D89                     l1733:
  2651                           
  2652                           ;LCD_prog.c: 137:   RE1 = 0;
  2653  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0D8B  1089               	bcf	9,1	;volatile
  2656  0D8C                     l46:
  2657  0D8C  0008               	return
  2658  0D8D                     __end_of_LCD_Write_uint8_t:
  2659                           
  2660                           	psect	text10
  2661  0D15                     __ptext10:	
  2662 ;; *************** function _LCD_SendCommand *****************
  2663 ;; Defined at:
  2664 ;;		line 50 in file "LCD_prog.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  Inst            1    wreg     unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  Inst            1    2[BANK1 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         0       0       0       0       0
  2679 ;;      Locals:         0       0       1       0       0
  2680 ;;      Temps:          0       0       2       0       0
  2681 ;;      Totals:         0       0       3       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    4
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;;		_LCD_Init_8BIT
  2690 ;;		_LCD_GoToXY
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _LCD_SendCommand
  2696  0D15                     _LCD_SendCommand:
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _LCD_SendCommand: [wreg]
  2700                           ;LCD_SendCommand@Inst stored from wreg
  2701  0D15  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0D16  1303               	bcf	3,6	;RP1=0, select bank1
  2703  0D17  00A2               	movwf	LCD_SendCommand@Inst^(0+128)
  2704  0D18                     l2041:
  2705                           
  2706                           ;LCD_prog.c: 50: void LCD_SendCommand(uint8_t Inst);LCD_prog.c: 51: {;LCD_prog.c: 53:   
      +                            RE2 = 0;
  2707  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0D1A  1109               	bcf	9,2	;volatile
  2710                           
  2711                           ;LCD_prog.c: 58:     RE1 = 1;
  2712  0D1B  1489               	bsf	9,1	;volatile
  2713  0D1C                     l2043:
  2714                           
  2715                           ;LCD_prog.c: 61:     PORTD = Inst;
  2716  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  2717  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  2718  0D1E  0822               	movf	LCD_SendCommand@Inst^(0+128),w
  2719  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  2721  0D21  0088               	movwf	8	;volatile
  2722  0D22                     l2045:
  2723                           
  2724                           ;LCD_prog.c: 64:     RE1 = 0;
  2725  0D22  1089               	bcf	9,1	;volatile
  2726                           
  2727                           ;LCD_prog.c: 66:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2728  0D23  300D               	movlw	13
  2729  0D24  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0D25  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0D26  00A1               	movwf	(??_LCD_SendCommand^(0+128)+1)
  2732  0D27  30FB               	movlw	251
  2733  0D28  00A0               	movwf	??_LCD_SendCommand^(0+128)
  2734  0D29                     u2567:
  2735  0D29  0BA0               	decfsz	??_LCD_SendCommand^(0+128),f
  2736  0D2A  2D29               	goto	u2567
  2737  0D2B  0BA1               	decfsz	(??_LCD_SendCommand^(0+128)+1),f
  2738  0D2C  2D29               	goto	u2567
  2739  0D2D                     l2047:
  2740                           
  2741                           ;LCD_prog.c: 68:     RE1 = 1;
  2742  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0D2F  1489               	bsf	9,1	;volatile
  2745  0D30                     l25:
  2746  0D30  0008               	return
  2747  0D31                     __end_of_LCD_SendCommand:
  2748                           
  2749                           	psect	text11
  2750  0F2F                     __ptext11:	
  2751 ;; *************** function _LCD_Init *****************
  2752 ;; Defined at:
  2753 ;;		line 107 in file "LCD_prog.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0
  2769 ;;      Temps:          0       0       2       0       0
  2770 ;;      Totals:         0       0       2       0       0
  2771 ;;Total ram usage:        2 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    6
  2774 ;; This function calls:
  2775 ;;		_LCD_CMD
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _LCD_Init
  2783  0F2F                     _LCD_Init:
  2784  0F2F                     l2049:	
  2785                           ;incstack = 0
  2786                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2787                           
  2788                           
  2789                           ;LCD_prog.c: 110:   TRISD = 0x00;
  2790  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0F31  0188               	clrf	8	;volatile
  2793  0F32                     l2051:
  2794                           
  2795                           ;LCD_prog.c: 111:   TRISE2 = 0;
  2796  0F32  1109               	bcf	9,2	;volatile
  2797  0F33                     l2053:
  2798                           
  2799                           ;LCD_prog.c: 112:   TRISE1 = 0;
  2800  0F33  1089               	bcf	9,1	;volatile
  2801  0F34                     l2055:
  2802                           
  2803                           ;LCD_prog.c: 115:   _delay((unsigned long)((30)*(8000000/4000.0)));
  2804  0F34  304E               	movlw	78
  2805  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0F37  00A5               	movwf	(??_LCD_Init^(0+128)+1)
  2808  0F38  30EA               	movlw	234
  2809  0F39  00A4               	movwf	??_LCD_Init^(0+128)
  2810  0F3A                     u2577:
  2811  0F3A  0BA4               	decfsz	??_LCD_Init^(0+128),f
  2812  0F3B  2F3A               	goto	u2577
  2813  0F3C  0BA5               	decfsz	(??_LCD_Init^(0+128)+1),f
  2814  0F3D  2F3A               	goto	u2577
  2815  0F3E  0000               	nop
  2816  0F3F                     l2057:
  2817                           
  2818                           ;LCD_prog.c: 116:   _delay((unsigned long)((1000)*(8000000/4000000.0)));
  2819  0F3F  3003               	movlw	3
  2820  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  2822  0F42  00A5               	movwf	(??_LCD_Init^(0+128)+1)
  2823  0F43  3097               	movlw	151
  2824  0F44  00A4               	movwf	??_LCD_Init^(0+128)
  2825  0F45                     u2587:
  2826  0F45  0BA4               	decfsz	??_LCD_Init^(0+128),f
  2827  0F46  2F45               	goto	u2587
  2828  0F47  0BA5               	decfsz	(??_LCD_Init^(0+128)+1),f
  2829  0F48  2F45               	goto	u2587
  2830  0F49                     l2059:
  2831                           
  2832                           ;LCD_prog.c: 117:   LCD_CMD(0x30);
  2833  0F49  3030               	movlw	48
  2834  0F4A  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2835  0F4F                     l2061:
  2836                           
  2837                           ;LCD_prog.c: 118:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2838  0F4F  300D               	movlw	13
  2839  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  2840  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  2841  0F52  00A5               	movwf	(??_LCD_Init^(0+128)+1)
  2842  0F53  30FB               	movlw	251
  2843  0F54  00A4               	movwf	??_LCD_Init^(0+128)
  2844  0F55                     u2597:
  2845  0F55  0BA4               	decfsz	??_LCD_Init^(0+128),f
  2846  0F56  2F55               	goto	u2597
  2847  0F57  0BA5               	decfsz	(??_LCD_Init^(0+128)+1),f
  2848  0F58  2F55               	goto	u2597
  2849  0F59                     l2063:
  2850                           
  2851                           ;LCD_prog.c: 119:   LCD_CMD(0x30);
  2852  0F59  3030               	movlw	48
  2853  0F5A  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2854  0F5F                     l2065:
  2855                           
  2856                           ;LCD_prog.c: 120:   _delay((unsigned long)((150)*(8000000/4000000.0)));
  2857  0F5F  3063               	movlw	99
  2858  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  2859  0F61  1303               	bcf	3,6	;RP1=0, select bank1
  2860  0F62  00A4               	movwf	??_LCD_Init^(0+128)
  2861  0F63                     u2607:
  2862  0F63  0BA4               	decfsz	??_LCD_Init^(0+128),f
  2863  0F64  2F63               	goto	u2607
  2864  0F65                     l2067:
  2865                           
  2866                           ;LCD_prog.c: 121:   LCD_CMD(0x30);
  2867  0F65  3030               	movlw	48
  2868  0F66  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2869  0F6B                     l2069:
  2870                           
  2871                           ;LCD_prog.c: 124:   LCD_CMD(0x30);
  2872  0F6B  3030               	movlw	48
  2873  0F6C  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2874  0F71                     l2071:
  2875                           
  2876                           ;LCD_prog.c: 125:   LCD_CMD(0x80);
  2877  0F71  3080               	movlw	128
  2878  0F72  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2879  0F77                     l2073:
  2880                           
  2881                           ;LCD_prog.c: 126:   LCD_CMD(0x01);
  2882  0F77  3001               	movlw	1
  2883  0F78  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2884  0F7D                     l2075:
  2885                           
  2886                           ;LCD_prog.c: 127:   LCD_CMD(0x06);
  2887  0F7D  3006               	movlw	6
  2888  0F7E  120A  158A  254F  120A  158A  	fcall	_LCD_CMD
  2889  0F83                     l43:
  2890  0F83  0008               	return
  2891  0F84                     __end_of_LCD_Init:
  2892                           
  2893                           	psect	text12
  2894  0D4F                     __ptext12:	
  2895 ;; *************** function _LCD_CMD *****************
  2896 ;; Defined at:
  2897 ;;		line 94 in file "LCD_prog.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  CMD             1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  CMD             1    3[BANK1 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       0       1       0       0
  2913 ;;      Temps:          0       0       2       0       0
  2914 ;;      Totals:         0       0       3       0       0
  2915 ;;Total ram usage:        3 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    5
  2918 ;; This function calls:
  2919 ;;		_LCD_SEND
  2920 ;; This function is called by:
  2921 ;;		_LCD_Init
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _LCD_CMD
  2927  0D4F                     _LCD_CMD:
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2931                           ;LCD_CMD@CMD stored from wreg
  2932  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0D50  1303               	bcf	3,6	;RP1=0, select bank1
  2934  0D51  00A3               	movwf	LCD_CMD@CMD^(0+128)
  2935  0D52                     l1715:
  2936                           
  2937                           ;LCD_prog.c: 94: void LCD_CMD( uint8_t CMD);LCD_prog.c: 95: {;LCD_prog.c: 97:   RE2 = 0;
  2938  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0D54  1109               	bcf	9,2	;volatile
  2941  0D55                     l1717:
  2942                           
  2943                           ;LCD_prog.c: 99:   LCD_SEND(CMD);
  2944  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0D56  1303               	bcf	3,6	;RP1=0, select bank1
  2946  0D57  0823               	movf	LCD_CMD@CMD^(0+128),w
  2947  0D58  120A  158A  2407  120A  158A  	fcall	_LCD_SEND
  2948  0D5D                     l1719:
  2949                           
  2950                           ;LCD_prog.c: 101:   RE1 = 1;
  2951  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0D5F  1489               	bsf	9,1	;volatile
  2954  0D60                     l1721:
  2955                           
  2956                           ;LCD_prog.c: 102:   _delay((unsigned long)((1000)*(8000000/4000000.0)));
  2957  0D60  3003               	movlw	3
  2958  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0D62  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0D63  00A2               	movwf	(??_LCD_CMD^(0+128)+1)
  2961  0D64  3097               	movlw	151
  2962  0D65  00A1               	movwf	??_LCD_CMD^(0+128)
  2963  0D66                     u2617:
  2964  0D66  0BA1               	decfsz	??_LCD_CMD^(0+128),f
  2965  0D67  2D66               	goto	u2617
  2966  0D68  0BA2               	decfsz	(??_LCD_CMD^(0+128)+1),f
  2967  0D69  2D66               	goto	u2617
  2968  0D6A                     l1723:
  2969                           
  2970                           ;LCD_prog.c: 103:   RE1 = 0;
  2971  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0D6C  1089               	bcf	9,1	;volatile
  2974  0D6D                     l40:
  2975  0D6D  0008               	return
  2976  0D6E                     __end_of_LCD_CMD:
  2977                           
  2978                           	psect	text13
  2979  0C07                     __ptext13:	
  2980 ;; *************** function _LCD_SEND *****************
  2981 ;; Defined at:
  2982 ;;		line 89 in file "LCD_prog.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  data            1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  data            1    0[BANK1 ] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       0       0       0       0
  2997 ;;      Locals:         0       0       1       0       0
  2998 ;;      Temps:          0       0       0       0       0
  2999 ;;      Totals:         0       0       1       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    4
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_LCD_CMD
  3007 ;;		_LCD_Write_uint8_t
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _LCD_SEND
  3013  0C07                     _LCD_SEND:
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _LCD_SEND: [wreg]
  3017                           ;LCD_SEND@data stored from wreg
  3018  0C07  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0C08  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0C09  00A0               	movwf	LCD_SEND@data^(0+128)
  3021  0C0A                     l1691:
  3022                           
  3023                           ;LCD_prog.c: 90:     PORTD = data;
  3024  0C0A  0820               	movf	LCD_SEND@data^(0+128),w
  3025  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0C0D  0088               	movwf	8	;volatile
  3028  0C0E                     l37:
  3029  0C0E  0008               	return
  3030  0C0F                     __end_of_LCD_SEND:
  3031                           
  3032                           	psect	text14
  3033  0C4E                     __ptext14:	
  3034 ;; *************** function _I2C_INIT_MASTER *****************
  3035 ;; Defined at:
  3036 ;;		line 15 in file "I2C.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    4
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _I2C_INIT_MASTER
  3066  0C4E                     _I2C_INIT_MASTER:
  3067  0C4E                     l2085:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _I2C_INIT_MASTER: [wreg+status,2]
  3070                           
  3071                           
  3072                           ;I2C.c: 16:     SSPCON = 0x28;
  3073  0C4E  3028               	movlw	40
  3074  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0C51  0094               	movwf	20	;volatile
  3077  0C52                     l2087:
  3078                           
  3079                           ;I2C.c: 17:     SSPCON2 = 0x00;
  3080  0C52  1683               	bsf	3,5	;RP0=1, select bank1
  3081  0C53  1303               	bcf	3,6	;RP1=0, select bank1
  3082  0C54  0191               	clrf	17	;volatile
  3083  0C55                     l2089:
  3084                           
  3085                           ;I2C.c: 19:     SSPADD = ((8000000/4)/100000) ;
  3086  0C55  3014               	movlw	20
  3087  0C56  0093               	movwf	19	;volatile
  3088  0C57                     l2091:
  3089                           
  3090                           ;I2C.c: 20:     TRISC3 = 1;
  3091  0C57  1587               	bsf	7,3	;volatile
  3092  0C58                     l2093:
  3093                           
  3094                           ;I2C.c: 21:     TRISC4 = 1;
  3095  0C58  1607               	bsf	7,4	;volatile
  3096  0C59                     l98:
  3097  0C59  0008               	return
  3098  0C5A                     __end_of_I2C_INIT_MASTER:
  3099                           
  3100                           	psect	text15
  3101  0D8D                     __ptext15:	
  3102 ;; *************** function _EEPROM_Write *****************
  3103 ;; Defined at:
  3104 ;;		line 19 in file "EEPROM.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  address         1    wreg     unsigned char 
  3107 ;;  data            1   10[BANK1 ] unsigned char 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  address         1   11[BANK1 ] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3119 ;;      Params:         0       0       1       0       0
  3120 ;;      Locals:         0       0       1       0       0
  3121 ;;      Temps:          0       0       0       0       0
  3122 ;;      Totals:         0       0       2       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    6
  3126 ;; This function calls:
  3127 ;;		_I2C_Start
  3128 ;;		_I2C_Stop
  3129 ;;		_I2C_Write
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _EEPROM_Write
  3137  0D8D                     _EEPROM_Write:
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3141                           ;EEPROM_Write@address stored from wreg
  3142  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  3143  0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  3144  0D8F  00AB               	movwf	EEPROM_Write@address^(0+128)
  3145  0D90                     l2115:
  3146                           
  3147                           ;EEPROM.c: 21:     I2C_Start();
  3148  0D90  120A  158A  2432  120A  158A  	fcall	_I2C_Start
  3149                           
  3150                           ;EEPROM.c: 22:     I2C_Write(0b10100000);
  3151  0D95  30A0               	movlw	160
  3152  0D96  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  3153                           
  3154                           ;EEPROM.c: 23:     I2C_Write(address);
  3155  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0D9D  082B               	movf	EEPROM_Write@address^(0+128),w
  3158  0D9E  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  3159                           
  3160                           ;EEPROM.c: 24:     I2C_Write(data);
  3161  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0DA4  1303               	bcf	3,6	;RP1=0, select bank1
  3163  0DA5  082A               	movf	EEPROM_Write@data^(0+128),w
  3164  0DA6  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  3165                           
  3166                           ;EEPROM.c: 25:     I2C_Stop();
  3167  0DAB  120A  158A  243B  120A  158A  	fcall	_I2C_Stop
  3168  0DB0                     l163:
  3169  0DB0  0008               	return
  3170  0DB1                     __end_of_EEPROM_Write:
  3171                           
  3172                           	psect	text16
  3173  0E28                     __ptext16:	
  3174 ;; *************** function _EEPROM_Read *****************
  3175 ;; Defined at:
  3176 ;;		line 5 in file "EEPROM.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  address         1    wreg     unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  address         1    1[BANK1 ] unsigned char 
  3181 ;;  data            1    2[BANK1 ] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      unsigned char 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       0       2       0       0
  3193 ;;      Temps:          0       0       0       0       0
  3194 ;;      Totals:         0       0       2       0       0
  3195 ;;Total ram usage:        2 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    6
  3198 ;; This function calls:
  3199 ;;		_I2C_Nack
  3200 ;;		_I2C_Read_Byte
  3201 ;;		_I2C_Res
  3202 ;;		_I2C_Start
  3203 ;;		_I2C_Stop
  3204 ;;		_I2C_Write
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _EEPROM_Read
  3212  0E28                     _EEPROM_Read:
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3216                           ;EEPROM_Read@address stored from wreg
  3217  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  3219  0E2A  00A1               	movwf	EEPROM_Read@address^(0+128)
  3220  0E2B                     l2103:
  3221                           
  3222                           ;EEPROM.c: 6:     uint8_t data;;EEPROM.c: 7:     I2C_Start();
  3223  0E2B  120A  158A  2432  120A  158A  	fcall	_I2C_Start
  3224                           
  3225                           ;EEPROM.c: 8:     I2C_Write(0b10100000);
  3226  0E30  30A0               	movlw	160
  3227  0E31  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  3228                           
  3229                           ;EEPROM.c: 9:     I2C_Write(address);
  3230  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  3232  0E38  0821               	movf	EEPROM_Read@address^(0+128),w
  3233  0E39  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  3234                           
  3235                           ;EEPROM.c: 10:     I2C_Res();
  3236  0E3E  120A  158A  2429  120A  158A  	fcall	_I2C_Res
  3237                           
  3238                           ;EEPROM.c: 11:     I2C_Write(0b10100001);
  3239  0E43  30A1               	movlw	161
  3240  0E44  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  3241  0E49                     l2105:
  3242                           
  3243                           ;EEPROM.c: 13:     data = I2C_Read_Byte();
  3244  0E49  120A  158A  2480  120A  158A  	fcall	_I2C_Read_Byte
  3245  0E4E  00FF               	movwf	btemp+1
  3246  0E4F  087F               	movf	btemp+1,w
  3247  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  3249  0E52  00A2               	movwf	EEPROM_Read@data^(0+128)
  3250  0E53                     l2107:
  3251                           
  3252                           ;EEPROM.c: 14:     I2C_Nack();
  3253  0E53  120A  158A  2444  120A  158A  	fcall	_I2C_Nack
  3254  0E58                     l2109:
  3255                           
  3256                           ;EEPROM.c: 15:     I2C_Stop();
  3257  0E58  120A  158A  243B  120A  158A  	fcall	_I2C_Stop
  3258  0E5D                     l2111:
  3259                           
  3260                           ;EEPROM.c: 16:     return data;
  3261  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  3263  0E5F  0822               	movf	EEPROM_Read@data^(0+128),w
  3264  0E60                     l160:
  3265  0E60  0008               	return
  3266  0E61                     __end_of_EEPROM_Read:
  3267                           
  3268                           	psect	text17
  3269  0CEC                     __ptext17:	
  3270 ;; *************** function _I2C_Write *****************
  3271 ;; Defined at:
  3272 ;;		line 64 in file "I2C.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  Data            1    wreg     unsigned char 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  Data            1    0[BANK1 ] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      unsigned char 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0, pclath, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         0       0       0       0       0
  3287 ;;      Locals:         0       0       1       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         0       0       1       0       0
  3290 ;;Total ram usage:        1 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    5
  3293 ;; This function calls:
  3294 ;;		_I2C_Wait
  3295 ;; This function is called by:
  3296 ;;		_EEPROM_Read
  3297 ;;		_EEPROM_Write
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _I2C_Write
  3303  0CEC                     _I2C_Write:
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3307                           ;I2C_Write@Data stored from wreg
  3308  0CEC  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0CED  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0CEE  00A0               	movwf	I2C_Write@Data^(0+128)
  3311  0CEF                     l1753:
  3312                           
  3313                           ;I2C.c: 64: uint8_t I2C_Write(uint8_t Data);I2C.c: 65: {;I2C.c: 67:   I2C_Wait();
  3314  0CEF  120A  158A  2473  120A  158A  	fcall	_I2C_Wait
  3315  0CF4                     l1755:
  3316                           
  3317                           ;I2C.c: 68:   SSPBUF = Data;
  3318  0CF4  1683               	bsf	3,5	;RP0=1, select bank1
  3319  0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  3320  0CF6  0820               	movf	I2C_Write@Data^(0+128),w
  3321  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0CF9  0093               	movwf	19	;volatile
  3324  0CFA                     l1757:
  3325                           
  3326                           ;I2C.c: 69:   I2C_Wait();
  3327  0CFA  120A  158A  2473  120A  158A  	fcall	_I2C_Wait
  3328  0CFF                     l1759:
  3329  0CFF                     l116:	
  3330                           ;I2C.c: 70:   return ACKSTAT;;	Return value of _I2C_Write is never used
  3331                           
  3332  0CFF  0008               	return
  3333  0D00                     __end_of_I2C_Write:
  3334                           
  3335                           	psect	text18
  3336  0C3B                     __ptext18:	
  3337 ;; *************** function _I2C_Stop *****************
  3338 ;; Defined at:
  3339 ;;		line 32 in file "I2C.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    5
  3360 ;; This function calls:
  3361 ;;		_I2C_Wait
  3362 ;; This function is called by:
  3363 ;;		_EEPROM_Read
  3364 ;;		_EEPROM_Write
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _I2C_Stop
  3370  0C3B                     _I2C_Stop:
  3371  0C3B                     l1739:	
  3372                           ;incstack = 0
  3373                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3374                           
  3375                           
  3376                           ;I2C.c: 35:   I2C_Wait();
  3377  0C3B  120A  158A  2473  120A  158A  	fcall	_I2C_Wait
  3378  0C40                     l1741:
  3379                           
  3380                           ;I2C.c: 36:   PEN = 1;
  3381  0C40  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0C41  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0C42  1511               	bsf	17,2	;volatile
  3384  0C43                     l104:
  3385  0C43  0008               	return
  3386  0C44                     __end_of_I2C_Stop:
  3387                           
  3388                           	psect	text19
  3389  0C32                     __ptext19:	
  3390 ;; *************** function _I2C_Start *****************
  3391 ;; Defined at:
  3392 ;;		line 24 in file "I2C.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0
  3409 ;;      Totals:         0       0       0       0       0
  3410 ;;Total ram usage:        0 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    5
  3413 ;; This function calls:
  3414 ;;		_I2C_Wait
  3415 ;; This function is called by:
  3416 ;;		_EEPROM_Read
  3417 ;;		_EEPROM_Write
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function _I2C_Start
  3423  0C32                     _I2C_Start:
  3424  0C32                     l1735:	
  3425                           ;incstack = 0
  3426                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3427                           
  3428                           
  3429                           ;I2C.c: 26:   I2C_Wait();
  3430  0C32  120A  158A  2473  120A  158A  	fcall	_I2C_Wait
  3431  0C37                     l1737:
  3432                           
  3433                           ;I2C.c: 27:   SEN = 1;
  3434  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  3435  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  3436  0C39  1411               	bsf	17,0	;volatile
  3437  0C3A                     l101:
  3438  0C3A  0008               	return
  3439  0C3B                     __end_of_I2C_Start:
  3440                           
  3441                           	psect	text20
  3442  0C29                     __ptext20:	
  3443 ;; *************** function _I2C_Res *****************
  3444 ;; Defined at:
  3445 ;;		line 39 in file "I2C.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    5
  3466 ;; This function calls:
  3467 ;;		_I2C_Wait
  3468 ;; This function is called by:
  3469 ;;		_EEPROM_Read
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _I2C_Res
  3475  0C29                     _I2C_Res:
  3476  0C29                     l1743:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _I2C_Res: [wreg+status,2+status,0+pclath+cstack]
  3479                           
  3480                           
  3481                           ;I2C.c: 42:   I2C_Wait();
  3482  0C29  120A  158A  2473  120A  158A  	fcall	_I2C_Wait
  3483  0C2E                     l1745:
  3484                           
  3485                           ;I2C.c: 43:   RSEN = 1;
  3486  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  3488  0C30  1491               	bsf	17,1	;volatile
  3489  0C31                     l107:
  3490  0C31  0008               	return
  3491  0C32                     __end_of_I2C_Res:
  3492                           
  3493                           	psect	text21
  3494  0C80                     __ptext21:	
  3495 ;; *************** function _I2C_Read_Byte *****************
  3496 ;; Defined at:
  3497 ;;		line 74 in file "I2C.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      unsigned char 
  3504 ;; Registers used:
  3505 ;;		wreg
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0
  3514 ;;      Totals:         0       0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    4
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_EEPROM_Read
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _I2C_Read_Byte
  3527  0C80                     _I2C_Read_Byte:
  3528  0C80                     l1763:	
  3529                           ;incstack = 0
  3530                           ; Regs used in _I2C_Read_Byte: [wreg]
  3531                           
  3532                           
  3533                           ;I2C.c: 77:   SSPIF = 0;
  3534  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0C82  118C               	bcf	12,3	;volatile
  3537                           
  3538                           ;I2C.c: 79:   RCEN = 1;
  3539  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  3541  0C85  1591               	bsf	17,3	;volatile
  3542  0C86                     l119:	
  3543                           ;I2C.c: 80:   while(!SSPIF);
  3544                           
  3545  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0C87  1D8C               	btfss	12,3	;volatile
  3547  0C88  2C8A               	goto	u1351
  3548  0C89  2C8B               	goto	u1350
  3549  0C8A                     u1351:
  3550  0C8A  2C86               	goto	l119
  3551  0C8B                     u1350:
  3552  0C8B                     l121:
  3553                           
  3554                           ;I2C.c: 81:   SSPIF = 0;
  3555  0C8B  118C               	bcf	12,3	;volatile
  3556  0C8C                     l1765:
  3557                           
  3558                           ;I2C.c: 82:   return SSPBUF;
  3559  0C8C  0813               	movf	19,w	;volatile
  3560  0C8D                     l122:
  3561  0C8D  0008               	return
  3562  0C8E                     __end_of_I2C_Read_Byte:
  3563                           
  3564                           	psect	text22
  3565  0C44                     __ptext22:	
  3566 ;; *************** function _I2C_Nack *****************
  3567 ;; Defined at:
  3568 ;;		line 56 in file "I2C.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         0       0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    5
  3589 ;; This function calls:
  3590 ;;		_I2C_Wait
  3591 ;; This function is called by:
  3592 ;;		_EEPROM_Read
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _I2C_Nack
  3598  0C44                     _I2C_Nack:
  3599  0C44                     l1747:	
  3600                           ;incstack = 0
  3601                           ; Regs used in _I2C_Nack: [wreg+status,2+status,0+pclath+cstack]
  3602                           
  3603                           
  3604                           ;I2C.c: 59:   I2C_Wait();
  3605  0C44  120A  158A  2473  120A  158A  	fcall	_I2C_Wait
  3606  0C49                     l1749:
  3607                           
  3608                           ;I2C.c: 60:   ACKDT = 1;
  3609  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0C4A  1303               	bcf	3,6	;RP1=0, select bank1
  3611  0C4B  1691               	bsf	17,5	;volatile
  3612  0C4C                     l1751:
  3613                           
  3614                           ;I2C.c: 61:   ACKEN = 1;
  3615  0C4C  1611               	bsf	17,4	;volatile
  3616  0C4D                     l113:
  3617  0C4D  0008               	return
  3618  0C4E                     __end_of_I2C_Nack:
  3619                           
  3620                           	psect	text23
  3621  0C73                     __ptext23:	
  3622 ;; *************** function _I2C_Wait *****************
  3623 ;; Defined at:
  3624 ;;		line 10 in file "I2C.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    4
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_I2C_Start
  3649 ;;		_I2C_Stop
  3650 ;;		_I2C_Res
  3651 ;;		_I2C_Nack
  3652 ;;		_I2C_Write
  3653 ;;		_I2C_Ack
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _I2C_Wait
  3659  0C73                     _I2C_Wait:
  3660  0C73                     l1693:	
  3661                           ;incstack = 0
  3662                           ; Regs used in _I2C_Wait: [wreg+status,2]
  3663                           
  3664  0C73                     l92:	
  3665                           ;I2C.c: 12:     {};
  3666                           
  3667                           
  3668                           ;I2C.c: 11:     while (SSPSTATbits.R_nW ||(SSPCON2 & 0x1F) )
  3669  0C73  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0C74  1303               	bcf	3,6	;RP1=0, select bank1
  3671  0C75  1914               	btfsc	20,2	;volatile
  3672  0C76  2C78               	goto	u1281
  3673  0C77  2C79               	goto	u1280
  3674  0C78                     u1281:
  3675  0C78  2C73               	goto	l92
  3676  0C79                     u1280:
  3677  0C79                     l1695:
  3678  0C79  0811               	movf	17,w	;volatile
  3679  0C7A  391F               	andlw	31
  3680  0C7B  1D03               	btfss	3,2
  3681  0C7C  2C7E               	goto	u1291
  3682  0C7D  2C7F               	goto	u1290
  3683  0C7E                     u1291:
  3684  0C7E  2C73               	goto	l92
  3685  0C7F                     u1290:
  3686  0C7F                     l95:
  3687  0C7F  0008               	return
  3688  0C80                     __end_of_I2C_Wait:
  3689                           
  3690                           	psect	text24
  3691  0C9C                     __ptext24:	
  3692 ;; *************** function _ADC_Init *****************
  3693 ;; Defined at:
  3694 ;;		line 8 in file "ADC.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          0       0       1       0       0
  3711 ;;      Totals:         0       0       1       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    4
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _ADC_Init
  3724  0C9C                     _ADC_Init:
  3725  0C9C                     l2095:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _ADC_Init: [wreg]
  3728                           
  3729                           
  3730                           ;ADC.c: 9:     ADCON0 = 0b01010001;
  3731  0C9C  3051               	movlw	81
  3732  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0C9F  009F               	movwf	31	;volatile
  3735                           
  3736                           ;ADC.c: 10:     ADCON1 = 0b11001001;
  3737  0CA0  30C9               	movlw	201
  3738  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  3739  0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  3740  0CA3  009F               	movwf	31	;volatile
  3741                           
  3742                           ;ADC.c: 11:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  3743  0CA4  3013               	movlw	19
  3744  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  3745  0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  3746  0CA7  00A0               	movwf	??_ADC_Init^(0+128)
  3747  0CA8                     u2627:
  3748  0CA8  0BA0               	decfsz	??_ADC_Init^(0+128),f
  3749  0CA9  2CA8               	goto	u2627
  3750  0CAA                     l139:
  3751  0CAA  0008               	return
  3752  0CAB                     __end_of_ADC_Init:
  3753                           
  3754                           	psect	text25
  3755  05FC                     __ptext25:	
  3756 ;; *************** function _ISR *****************
  3757 ;; Defined at:
  3758 ;;		line 118 in file "main.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       5       0       0       0
  3775 ;;      Totals:         0       5       0       0       0
  3776 ;;Total ram usage:        5 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		_ADC_Read
  3781 ;;		_calc_average
  3782 ;;		i1_EEPROM_Write
  3783 ;;		i1___bmul
  3784 ;;		i1___lwdiv
  3785 ;; This function is called by:
  3786 ;;		Interrupt level 1
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _ISR
  3792  05FC                     _ISR:
  3793  05FC                     i1l2399:
  3794                           
  3795                           ;main.c: 119:     if (TMR1IF){
  3796  05FC  1C0C               	btfss	12,0	;volatile
  3797  05FD  2DFF               	goto	u246_21
  3798  05FE  2E00               	goto	u246_20
  3799  05FF                     u246_21:
  3800  05FF  2E80               	goto	i1l2441
  3801  0600                     u246_20:
  3802  0600                     i1l2401:
  3803                           
  3804                           ;main.c: 120:         if(MODE == 0){
  3805  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3806  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3807  0602  083B               	movf	_MODE^(0+128),w
  3808  0603  043C               	iorwf	(_MODE+1)^(0+128),w
  3809  0604  1D03               	btfss	3,2
  3810  0605  2E07               	goto	u247_21
  3811  0606  2E08               	goto	u247_20
  3812  0607                     u247_21:
  3813  0607  2E20               	goto	i1l2411
  3814  0608                     u247_20:
  3815  0608                     i1l2403:
  3816                           
  3817                           ;main.c: 121:             MODE_COUNTER++;
  3818  0608  3001               	movlw	1
  3819  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3820  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3821  060B  07E4               	addwf	_MODE_COUNTER,f
  3822  060C  1803               	skipnc
  3823  060D  0AE5               	incf	_MODE_COUNTER+1,f
  3824  060E  3000               	movlw	0
  3825  060F  07E5               	addwf	_MODE_COUNTER+1,f
  3826  0610                     i1l2405:
  3827                           
  3828                           ;main.c: 122:             if(MODE_COUNTER==156){
  3829  0610  309C               	movlw	156
  3830  0611  0664               	xorwf	_MODE_COUNTER,w
  3831  0612  0465               	iorwf	_MODE_COUNTER+1,w
  3832  0613  1D03               	btfss	3,2
  3833  0614  2E16               	goto	u248_21
  3834  0615  2E17               	goto	u248_20
  3835  0616                     u248_21:
  3836  0616  2E7E               	goto	i1l2439
  3837  0617                     u248_20:
  3838  0617                     i1l2407:
  3839                           
  3840                           ;main.c: 123:                 MODE_COUNTER=0;
  3841  0617  01E4               	clrf	_MODE_COUNTER
  3842  0618  01E5               	clrf	_MODE_COUNTER+1
  3843  0619                     i1l2409:
  3844                           
  3845                           ;main.c: 124:                 MODE = 1;
  3846  0619  3001               	movlw	1
  3847  061A  1683               	bsf	3,5	;RP0=1, select bank1
  3848  061B  1303               	bcf	3,6	;RP1=0, select bank1
  3849  061C  00BB               	movwf	_MODE^(0+128)
  3850  061D  3000               	movlw	0
  3851  061E  00BC               	movwf	(_MODE^(0+128)+1)
  3852  061F  2E7E               	goto	i1l2439
  3853  0620                     i1l2411:
  3854                           
  3855                           ;main.c: 129:             ADC_counter++;
  3856  0620  3001               	movlw	1
  3857  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0623  07E6               	addwf	_ADC_counter,f
  3860  0624  1803               	skipnc
  3861  0625  0AE7               	incf	_ADC_counter+1,f
  3862  0626  3000               	movlw	0
  3863  0627  07E7               	addwf	_ADC_counter+1,f
  3864  0628                     i1l2413:
  3865                           
  3866                           ;main.c: 130:             if(ADC_counter == 5){
  3867  0628  3005               	movlw	5
  3868  0629  0666               	xorwf	_ADC_counter,w
  3869  062A  0467               	iorwf	_ADC_counter+1,w
  3870  062B  1D03               	btfss	3,2
  3871  062C  2E2E               	goto	u249_21
  3872  062D  2E2F               	goto	u249_20
  3873  062E                     u249_21:
  3874  062E  2E69               	goto	i1l2429
  3875  062F                     u249_20:
  3876  062F                     i1l2415:
  3877                           
  3878                           ;main.c: 131:                 ADC_counter=0;
  3879  062F  01E6               	clrf	_ADC_counter
  3880  0630  01E7               	clrf	_ADC_counter+1
  3881  0631                     i1l2417:
  3882                           
  3883                           ;main.c: 132:                 ADC_TEMP= ADC_Read();
  3884  0631  120A  118A  278E  120A  118A  	fcall	_ADC_Read
  3885  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0638  0840               	movf	?_ADC_Read+1,w
  3888  0639  1683               	bsf	3,5	;RP0=1, select bank1
  3889  063A  1303               	bcf	3,6	;RP1=0, select bank1
  3890  063B  00C2               	movwf	(_ADC_TEMP+1)^(0+128)
  3891  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3892  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3893  063E  083F               	movf	?_ADC_Read,w
  3894  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0641  00C1               	movwf	_ADC_TEMP^(0+128)
  3897  0642                     i1l2419:
  3898                           
  3899                           ;main.c: 133:                 ADC_READINGS[READINGS_INDEX] = ADC_TEMP;
  3900  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3902  0644  0862               	movf	_READINGS_INDEX,w
  3903  0645  00C7               	movwf	??_ISR
  3904  0646  0747               	addwf	??_ISR,w
  3905  0647  3E4C               	addlw	(low (_ADC_READINGS| 0))& (0+255)
  3906  0648  0084               	movwf	4
  3907  0649  1683               	bsf	3,5	;RP0=1, select bank1
  3908  064A  1303               	bcf	3,6	;RP1=0, select bank1
  3909  064B  0841               	movf	_ADC_TEMP^(0+128),w
  3910  064C  1383               	bcf	3,7	;select IRP bank0
  3911  064D  0080               	movwf	0
  3912  064E  0A84               	incf	4,f
  3913  064F  0842               	movf	(_ADC_TEMP+1)^(0+128),w
  3914  0650  0080               	movwf	0
  3915  0651                     i1l2421:
  3916                           
  3917                           ;main.c: 134:                 READINGS_INDEX++;
  3918  0651  3001               	movlw	1
  3919  0652  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0653  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0654  07E2               	addwf	_READINGS_INDEX,f
  3922  0655  1803               	skipnc
  3923  0656  0AE3               	incf	_READINGS_INDEX+1,f
  3924  0657  3000               	movlw	0
  3925  0658  07E3               	addwf	_READINGS_INDEX+1,f
  3926  0659                     i1l2423:
  3927                           
  3928                           ;main.c: 135:                 calc_average();
  3929  0659  120A  158A  26A5  120A  118A  	fcall	_calc_average
  3930  065E                     i1l2425:
  3931                           
  3932                           ;main.c: 137:                 if (READINGS_INDEX == 10){
  3933  065E  300A               	movlw	10
  3934  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0661  0662               	xorwf	_READINGS_INDEX,w
  3937  0662  0463               	iorwf	_READINGS_INDEX+1,w
  3938  0663  1D03               	btfss	3,2
  3939  0664  2E66               	goto	u250_21
  3940  0665  2E67               	goto	u250_20
  3941  0666                     u250_21:
  3942  0666  2E69               	goto	i1l2429
  3943  0667                     u250_20:
  3944  0667                     i1l2427:
  3945                           
  3946                           ;main.c: 138:                     READINGS_INDEX=0;
  3947  0667  01E2               	clrf	_READINGS_INDEX
  3948  0668  01E3               	clrf	_READINGS_INDEX+1
  3949  0669                     i1l2429:
  3950                           
  3951                           ;main.c: 141:             if (RC5 == 1){
  3952  0669  1E87               	btfss	7,5	;volatile
  3953  066A  2E6C               	goto	u251_21
  3954  066B  2E6D               	goto	u251_20
  3955  066C                     u251_21:
  3956  066C  2E7E               	goto	i1l2439
  3957  066D                     u251_20:
  3958  066D                     i1l2431:
  3959                           
  3960                           ;main.c: 142:                 LED_COUNTER++;
  3961  066D  3001               	movlw	1
  3962  066E  07E0               	addwf	_LED_COUNTER,f
  3963  066F  1803               	skipnc
  3964  0670  0AE1               	incf	_LED_COUNTER+1,f
  3965  0671  3000               	movlw	0
  3966  0672  07E1               	addwf	_LED_COUNTER+1,f
  3967  0673                     i1l2433:
  3968                           
  3969                           ;main.c: 143:                 if (LED_COUNTER == 45){
  3970  0673  302D               	movlw	45
  3971  0674  0660               	xorwf	_LED_COUNTER,w
  3972  0675  0461               	iorwf	_LED_COUNTER+1,w
  3973  0676  1D03               	btfss	3,2
  3974  0677  2E79               	goto	u252_21
  3975  0678  2E7A               	goto	u252_20
  3976  0679                     u252_21:
  3977  0679  2E7E               	goto	i1l2439
  3978  067A                     u252_20:
  3979  067A                     i1l2435:
  3980                           
  3981                           ;main.c: 144:                     RB7 = ~RB7;
  3982  067A  3080               	movlw	128
  3983  067B  0686               	xorwf	6,f
  3984  067C                     i1l2437:
  3985                           
  3986                           ;main.c: 145:                     LED_COUNTER =0;
  3987  067C  01E0               	clrf	_LED_COUNTER
  3988  067D  01E1               	clrf	_LED_COUNTER+1
  3989  067E                     i1l2439:
  3990                           
  3991                           ;main.c: 150:         TMR1IF = 0;
  3992  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3993  067F  100C               	bcf	12,0	;volatile
  3994  0680                     i1l2441:
  3995                           
  3996                           ;main.c: 152:     if (INTF){
  3997  0680  1C8B               	btfss	11,1	;volatile
  3998  0681  2E83               	goto	u253_21
  3999  0682  2E84               	goto	u253_20
  4000  0683                     u253_21:
  4001  0683  2EC7               	goto	i1l318
  4002  0684                     u253_20:
  4003  0684                     i1l2443:
  4004                           
  4005                           ;main.c: 153:         DESIRED_TEMP = 60;
  4006  0684  303C               	movlw	60
  4007  0685  1683               	bsf	3,5	;RP0=1, select bank1
  4008  0686  1303               	bcf	3,6	;RP1=0, select bank1
  4009  0687  00BD               	movwf	_DESIRED_TEMP^(0+128)
  4010  0688  3000               	movlw	0
  4011  0689  00BE               	movwf	(_DESIRED_TEMP^(0+128)+1)
  4012  068A                     i1l2445:
  4013                           
  4014                           ;main.c: 154:         EEPROM_Write(0X00 ,DESIRED_TEMP/10);
  4015  068A  300A               	movlw	10
  4016  068B  00F0               	movwf	i1___lwdiv@divisor
  4017  068C  3000               	movlw	0
  4018  068D  00F1               	movwf	i1___lwdiv@divisor+1
  4019  068E  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  4020  068F  00F3               	movwf	i1___lwdiv@dividend+1
  4021  0690  083D               	movf	_DESIRED_TEMP^(0+128),w
  4022  0691  00F2               	movwf	i1___lwdiv@dividend
  4023  0692  120A  158A  2661  120A  118A  	fcall	i1___lwdiv
  4024  0697  0870               	movf	?i1___lwdiv,w
  4025  0698  00FF               	movwf	btemp+1
  4026  0699  087F               	movf	btemp+1,w
  4027  069A  00FA               	movwf	i1EEPROM_Write@data
  4028  069B  3000               	movlw	0
  4029  069C  120A  158A  2531  120A  118A  	fcall	i1_EEPROM_Write
  4030  06A1                     i1l2447:
  4031                           
  4032                           ;main.c: 155:         EEPROM_Write(0X01,DESIRED_TEMP - (DESIRED_TEMP/10)*10);
  4033  06A1  30F6               	movlw	246
  4034  06A2  00FF               	movwf	btemp+1
  4035  06A3  087F               	movf	btemp+1,w
  4036  06A4  00F7               	movwf	i1___bmul@multiplicand
  4037  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  4038  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  4039  06A7  083E               	movf	(_DESIRED_TEMP+1)^(0+128),w
  4040  06A8  00F3               	movwf	i1___lwdiv@dividend+1
  4041  06A9  083D               	movf	_DESIRED_TEMP^(0+128),w
  4042  06AA  00F2               	movwf	i1___lwdiv@dividend
  4043  06AB  300A               	movlw	10
  4044  06AC  00F0               	movwf	i1___lwdiv@divisor
  4045  06AD  3000               	movlw	0
  4046  06AE  00F1               	movwf	i1___lwdiv@divisor+1
  4047  06AF  120A  158A  2661  120A  118A  	fcall	i1___lwdiv
  4048  06B4  0870               	movf	?i1___lwdiv,w
  4049  06B5  120A  158A  2500  120A  118A  	fcall	i1___bmul
  4050  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  4051  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  4052  06BC  073D               	addwf	_DESIRED_TEMP^(0+128),w
  4053  06BD  00FF               	movwf	btemp+1
  4054  06BE  087F               	movf	btemp+1,w
  4055  06BF  00FA               	movwf	i1EEPROM_Write@data
  4056  06C0  3001               	movlw	1
  4057  06C1  120A  158A  2531  120A  118A  	fcall	i1_EEPROM_Write
  4058  06C6                     i1l2449:
  4059                           
  4060                           ;main.c: 156:         INTF = 0;
  4061  06C6  108B               	bcf	11,1	;volatile
  4062  06C7                     i1l318:
  4063  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4064  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4065  06C9  084B               	movf	??_ISR+4,w
  4066  06CA  00FF               	movwf	btemp+1
  4067  06CB  084A               	movf	??_ISR+3,w
  4068  06CC  008A               	movwf	10
  4069  06CD  0849               	movf	??_ISR+2,w
  4070  06CE  0084               	movwf	4
  4071  06CF  0E48               	swapf	(??_ISR+1)^0,w
  4072  06D0  0083               	movwf	3
  4073  06D1  0EFE               	swapf	btemp,f
  4074  06D2  0E7E               	swapf	btemp,w
  4075  06D3  0009               	retfie
  4076  06D4                     __end_of_ISR:
  4077                           
  4078                           	psect	intentry
  4079  0004                     __pintentry:	
  4080                           ;incstack = 0
  4081                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4082                           
  4083  0004                     interrupt_function:
  4084  007E                     saved_w	set	btemp
  4085  0004  00FE               	movwf	btemp
  4086  0005  0E03               	swapf	3,w
  4087  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4089  0008  00C8               	movwf	??_ISR+1
  4090  0009  0804               	movf	4,w
  4091  000A  00C9               	movwf	??_ISR+2
  4092  000B  080A               	movf	10,w
  4093  000C  00CA               	movwf	??_ISR+3
  4094  000D  087F               	movf	btemp+1,w
  4095  000E  00CB               	movwf	??_ISR+4
  4096  000F  120A  118A  2DFC   	ljmp	_ISR
  4097                           
  4098                           	psect	text26
  4099  0D00                     __ptext26:	
  4100 ;; *************** function i1___bmul *****************
  4101 ;; Defined at:
  4102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  multiplier      1    wreg     unsigned char 
  4105 ;;  multiplicand    1    7[COMMON] unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  multiplier      1    9[COMMON] unsigned char 
  4108 ;;  product         1    8[COMMON] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, btemp+1
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         1       0       0       0       0
  4119 ;;      Locals:         2       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0
  4121 ;;      Totals:         3       0       0       0       0
  4122 ;;Total ram usage:        3 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_ISR
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function i1___bmul
  4133  0D00                     i1___bmul:
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
  4137                           ;i1___bmul@multiplier stored from wreg
  4138  0D00  00F9               	movwf	i1___bmul@multiplier
  4139  0D01                     i1l2211:
  4140  0D01  01F8               	clrf	i1___bmul@product
  4141  0D02                     i1l2213:
  4142  0D02  1C79               	btfss	i1___bmul@multiplier,0
  4143  0D03  2D05               	goto	u220_21
  4144  0D04  2D06               	goto	u220_20
  4145  0D05                     u220_21:
  4146  0D05  2D0A               	goto	i1l2217
  4147  0D06                     u220_20:
  4148  0D06                     i1l2215:
  4149  0D06  0877               	movf	i1___bmul@multiplicand,w
  4150  0D07  00FF               	movwf	btemp+1
  4151  0D08  087F               	movf	btemp+1,w
  4152  0D09  07F8               	addwf	i1___bmul@product,f
  4153  0D0A                     i1l2217:
  4154  0D0A  1003               	clrc
  4155  0D0B  0DF7               	rlf	i1___bmul@multiplicand,f
  4156  0D0C                     i1l2219:
  4157  0D0C  1003               	clrc
  4158  0D0D  0CF9               	rrf	i1___bmul@multiplier,f
  4159  0D0E                     i1l2221:
  4160  0D0E  0879               	movf	i1___bmul@multiplier,w
  4161  0D0F  1D03               	btfss	3,2
  4162  0D10  2D12               	goto	u221_21
  4163  0D11  2D13               	goto	u221_20
  4164  0D12                     u221_21:
  4165  0D12  2D02               	goto	i1l2213
  4166  0D13                     u221_20:
  4167  0D13                     i1l2223:
  4168  0D13  0878               	movf	i1___bmul@product,w
  4169  0D14                     i1l435:
  4170  0D14  0008               	return
  4171  0D15                     __end_ofi1___bmul:
  4172                           
  4173                           	psect	text27
  4174  0D31                     __ptext27:	
  4175 ;; *************** function i1_EEPROM_Write *****************
  4176 ;; Defined at:
  4177 ;;		line 19 in file "EEPROM.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  address         1    wreg     unsigned char 
  4180 ;;  data            1   10[COMMON] unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  address         1   11[COMMON] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         1       0       0       0       0
  4193 ;;      Locals:         1       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0
  4195 ;;      Totals:         2       0       0       0       0
  4196 ;;Total ram usage:        2 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    2
  4199 ;; This function calls:
  4200 ;;		i1_I2C_Start
  4201 ;;		i1_I2C_Stop
  4202 ;;		i1_I2C_Write
  4203 ;; This function is called by:
  4204 ;;		_ISR
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function i1_EEPROM_Write
  4210  0D31                     i1_EEPROM_Write:
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in i1_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  4214                           ;i1EEPROM_Write@address stored from wreg
  4215  0D31  00FB               	movwf	i1EEPROM_Write@address
  4216  0D32                     i1l2209:
  4217                           
  4218                           ;EEPROM.c: 21:     I2C_Start();
  4219  0D32  120A  158A  2417  120A  158A  	fcall	i1_I2C_Start
  4220                           
  4221                           ;EEPROM.c: 22:     I2C_Write(0b10100000);
  4222  0D37  30A0               	movlw	160
  4223  0D38  120A  158A  24C9  120A  158A  	fcall	i1_I2C_Write
  4224                           
  4225                           ;EEPROM.c: 23:     I2C_Write(address);
  4226  0D3D  087B               	movf	i1EEPROM_Write@address,w
  4227  0D3E  120A  158A  24C9  120A  158A  	fcall	i1_I2C_Write
  4228                           
  4229                           ;EEPROM.c: 24:     I2C_Write(data);
  4230  0D43  087A               	movf	i1EEPROM_Write@data,w
  4231  0D44  120A  158A  24C9  120A  158A  	fcall	i1_I2C_Write
  4232                           
  4233                           ;EEPROM.c: 25:     I2C_Stop();
  4234  0D49  120A  158A  2420  120A  158A  	fcall	i1_I2C_Stop
  4235  0D4E                     i1l163:
  4236  0D4E  0008               	return
  4237  0D4F                     __end_ofi1_EEPROM_Write:
  4238                           
  4239                           	psect	text28
  4240  0CC9                     __ptext28:	
  4241 ;; *************** function i1_I2C_Write *****************
  4242 ;; Defined at:
  4243 ;;		line 64 in file "I2C.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  Data            1    wreg     unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  Data            1    0[COMMON] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      unsigned char 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0
  4260 ;;      Totals:         1       0       0       0       0
  4261 ;;Total ram usage:        1 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    1
  4264 ;; This function calls:
  4265 ;;		i1_I2C_Wait
  4266 ;; This function is called by:
  4267 ;;		i1_EEPROM_Write
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function i1_I2C_Write
  4273  0CC9                     i1_I2C_Write:
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in i1_I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4277                           ;i1I2C_Write@Data stored from wreg
  4278  0CC9  00F0               	movwf	i1I2C_Write@Data
  4279  0CCA                     i1l2005:
  4280                           
  4281                           ;I2C.c: 64: uint8_t I2C_Write(uint8_t Data);I2C.c: 65: {;I2C.c: 67:   I2C_Wait();
  4282  0CCA  120A  158A  2466  120A  158A  	fcall	i1_I2C_Wait
  4283  0CCF                     i1l2007:
  4284                           
  4285                           ;I2C.c: 68:   SSPBUF = Data;
  4286  0CCF  0870               	movf	i1I2C_Write@Data,w
  4287  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0CD2  0093               	movwf	19	;volatile
  4290  0CD3                     i1l2009:
  4291                           
  4292                           ;I2C.c: 69:   I2C_Wait();
  4293  0CD3  120A  158A  2466  120A  158A  	fcall	i1_I2C_Wait
  4294  0CD8                     i1l2011:
  4295  0CD8                     i1l116:	
  4296                           ;I2C.c: 70:   return ACKSTAT;;	Return value of i1_I2C_Write is never used
  4297                           
  4298  0CD8  0008               	return
  4299  0CD9                     __end_ofi1_I2C_Write:
  4300                           
  4301                           	psect	text29
  4302  0C20                     __ptext29:	
  4303 ;; *************** function i1_I2C_Stop *****************
  4304 ;; Defined at:
  4305 ;;		line 32 in file "I2C.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, pclath, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0
  4322 ;;      Totals:         0       0       0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    1
  4326 ;; This function calls:
  4327 ;;		i1_I2C_Wait
  4328 ;; This function is called by:
  4329 ;;		i1_EEPROM_Write
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function i1_I2C_Stop
  4335  0C20                     i1_I2C_Stop:
  4336  0C20                     i1l2001:	
  4337                           ;incstack = 0
  4338                           ; Regs used in i1_I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  4339                           
  4340                           
  4341                           ;I2C.c: 35:   I2C_Wait();
  4342  0C20  120A  158A  2466  120A  158A  	fcall	i1_I2C_Wait
  4343  0C25                     i1l2003:
  4344                           
  4345                           ;I2C.c: 36:   PEN = 1;
  4346  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  4347  0C26  1303               	bcf	3,6	;RP1=0, select bank1
  4348  0C27  1511               	bsf	17,2	;volatile
  4349  0C28                     i1l104:
  4350  0C28  0008               	return
  4351  0C29                     __end_ofi1_I2C_Stop:
  4352                           
  4353                           	psect	text30
  4354  0C17                     __ptext30:	
  4355 ;; *************** function i1_I2C_Start *****************
  4356 ;; Defined at:
  4357 ;;		line 24 in file "I2C.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0
  4374 ;;      Totals:         0       0       0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    1
  4378 ;; This function calls:
  4379 ;;		i1_I2C_Wait
  4380 ;; This function is called by:
  4381 ;;		i1_EEPROM_Write
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function i1_I2C_Start
  4387  0C17                     i1_I2C_Start:
  4388  0C17                     i1l1997:	
  4389                           ;incstack = 0
  4390                           ; Regs used in i1_I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  4391                           
  4392                           
  4393                           ;I2C.c: 26:   I2C_Wait();
  4394  0C17  120A  158A  2466  120A  158A  	fcall	i1_I2C_Wait
  4395  0C1C                     i1l1999:
  4396                           
  4397                           ;I2C.c: 27:   SEN = 1;
  4398  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  4399  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  4400  0C1E  1411               	bsf	17,0	;volatile
  4401  0C1F                     i1l101:
  4402  0C1F  0008               	return
  4403  0C20                     __end_ofi1_I2C_Start:
  4404                           
  4405                           	psect	text31
  4406  0C66                     __ptext31:	
  4407 ;; *************** function i1_I2C_Wait *****************
  4408 ;; Defined at:
  4409 ;;		line 10 in file "I2C.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		i1_I2C_Start
  4433 ;;		i1_I2C_Stop
  4434 ;;		i1_I2C_Write
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function i1_I2C_Wait
  4440  0C66                     i1_I2C_Wait:
  4441  0C66                     i1l1711:	
  4442                           ;incstack = 0
  4443                           ; Regs used in i1_I2C_Wait: [wreg+status,2]
  4444                           
  4445  0C66                     i1l92:	
  4446                           ;I2C.c: 12:     {};
  4447                           
  4448                           
  4449                           ;I2C.c: 11:     while (SSPSTATbits.R_nW ||(SSPCON2 & 0x1F) )
  4450  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  4451  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  4452  0C68  1914               	btfsc	20,2	;volatile
  4453  0C69  2C6B               	goto	u133_21
  4454  0C6A  2C6C               	goto	u133_20
  4455  0C6B                     u133_21:
  4456  0C6B  2C66               	goto	i1l92
  4457  0C6C                     u133_20:
  4458  0C6C                     i1l1713:
  4459  0C6C  0811               	movf	17,w	;volatile
  4460  0C6D  391F               	andlw	31
  4461  0C6E  1D03               	btfss	3,2
  4462  0C6F  2C71               	goto	u134_21
  4463  0C70  2C72               	goto	u134_20
  4464  0C71                     u134_21:
  4465  0C71  2C66               	goto	i1l92
  4466  0C72                     u134_20:
  4467  0C72                     i1l95:
  4468  0C72  0008               	return
  4469  0C73                     __end_ofi1_I2C_Wait:
  4470                           
  4471                           	psect	text32
  4472  0EA5                     __ptext32:	
  4473 ;; *************** function _calc_average *****************
  4474 ;; Defined at:
  4475 ;;		line 160 in file "main.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  i               2   10[COMMON] int 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       0       0       0       0
  4490 ;;      Locals:         2       0       0       0       0
  4491 ;;      Temps:          3       0       0       0       0
  4492 ;;      Totals:         5       0       0       0       0
  4493 ;;Total ram usage:        5 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    1
  4496 ;; This function calls:
  4497 ;;		i1___lwdiv
  4498 ;; This function is called by:
  4499 ;;		_ISR
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _calc_average
  4505  0EA5                     _calc_average:
  4506  0EA5                     i1l2139:	
  4507                           ;incstack = 0
  4508                           ; Regs used in _calc_average: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4509                           
  4510                           
  4511                           ;main.c: 161:     average = 0;
  4512  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  4513  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  4514  0EA7  01BF               	clrf	_average^(0+128)
  4515  0EA8  01C0               	clrf	(_average+1)^(0+128)
  4516                           
  4517                           ;main.c: 162:     for (int i = 0 ; i < 10 ; i++){
  4518  0EA9  01FA               	clrf	calc_average@i
  4519  0EAA  01FB               	clrf	calc_average@i+1
  4520  0EAB                     i1l2145:
  4521                           
  4522                           ;main.c: 163:        average = average + ADC_READINGS[i];
  4523  0EAB  087A               	movf	calc_average@i,w
  4524  0EAC  00F7               	movwf	??_calc_average
  4525  0EAD  0777               	addwf	??_calc_average,w
  4526  0EAE  3E4C               	addlw	(low (_ADC_READINGS| 0))& (0+255)
  4527  0EAF  0084               	movwf	4
  4528  0EB0  1383               	bcf	3,7	;select IRP bank0
  4529  0EB1  0800               	movf	0,w
  4530  0EB2  00F8               	movwf	??_calc_average+1
  4531  0EB3  0A84               	incf	4,f
  4532  0EB4  0800               	movf	0,w
  4533  0EB5  00F9               	movwf	??_calc_average+2
  4534  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  4535  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  4536  0EB8  083F               	movf	_average^(0+128),w
  4537  0EB9  0778               	addwf	??_calc_average+1,w
  4538  0EBA  00BF               	movwf	_average^(0+128)
  4539  0EBB  0840               	movf	(_average+1)^(0+128),w
  4540  0EBC  1803               	skipnc
  4541  0EBD  0A40               	incf	(_average+1)^(0+128),w
  4542  0EBE  0779               	addwf	??_calc_average+2,w
  4543  0EBF  00C0               	movwf	(_average+1)^(0+128)
  4544  0EC0                     i1l2147:
  4545                           
  4546                           ;main.c: 164:     }
  4547  0EC0  3001               	movlw	1
  4548  0EC1  07FA               	addwf	calc_average@i,f
  4549  0EC2  1803               	skipnc
  4550  0EC3  0AFB               	incf	calc_average@i+1,f
  4551  0EC4  3000               	movlw	0
  4552  0EC5  07FB               	addwf	calc_average@i+1,f
  4553  0EC6                     i1l2149:
  4554  0EC6  087B               	movf	calc_average@i+1,w
  4555  0EC7  3A80               	xorlw	128
  4556  0EC8  00FF               	movwf	btemp+1
  4557  0EC9  3080               	movlw	128
  4558  0ECA  027F               	subwf	btemp+1,w
  4559  0ECB  1D03               	skipz
  4560  0ECC  2ECF               	goto	u206_25
  4561  0ECD  300A               	movlw	10
  4562  0ECE  027A               	subwf	calc_average@i,w
  4563  0ECF                     u206_25:
  4564  0ECF  1C03               	skipc
  4565  0ED0  2ED2               	goto	u206_21
  4566  0ED1  2ED3               	goto	u206_20
  4567  0ED2                     u206_21:
  4568  0ED2  2EAB               	goto	i1l2145
  4569  0ED3                     u206_20:
  4570  0ED3                     i1l2151:
  4571                           
  4572                           ;main.c: 166:     average = average/10;
  4573  0ED3  300A               	movlw	10
  4574  0ED4  00F0               	movwf	i1___lwdiv@divisor
  4575  0ED5  3000               	movlw	0
  4576  0ED6  00F1               	movwf	i1___lwdiv@divisor+1
  4577  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  4578  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  4579  0ED9  0840               	movf	(_average+1)^(0+128),w
  4580  0EDA  00F3               	movwf	i1___lwdiv@dividend+1
  4581  0EDB  083F               	movf	_average^(0+128),w
  4582  0EDC  00F2               	movwf	i1___lwdiv@dividend
  4583  0EDD  120A  158A  2661  120A  158A  	fcall	i1___lwdiv
  4584  0EE2  0871               	movf	?i1___lwdiv+1,w
  4585  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  4586  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  4587  0EE5  00C0               	movwf	(_average+1)^(0+128)
  4588  0EE6  0870               	movf	?i1___lwdiv,w
  4589  0EE7  00BF               	movwf	_average^(0+128)
  4590  0EE8                     i1l323:
  4591  0EE8  0008               	return
  4592  0EE9                     __end_of_calc_average:
  4593                           
  4594                           	psect	text33
  4595  0E61                     __ptext33:	
  4596 ;; *************** function i1___lwdiv *****************
  4597 ;; Defined at:
  4598 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  divisor         2    0[COMMON] unsigned int 
  4601 ;;  dividend        2    2[COMMON] unsigned int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  quotient        2    4[COMMON] unsigned int 
  4604 ;;  counter         1    6[COMMON] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    0[COMMON] unsigned int 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, btemp+1
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4614 ;;      Params:         4       0       0       0       0
  4615 ;;      Locals:         3       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0
  4617 ;;      Totals:         7       0       0       0       0
  4618 ;;Total ram usage:        7 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_ISR
  4624 ;;		_calc_average
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function i1___lwdiv
  4630  0E61                     i1___lwdiv:
  4631  0E61                     i1l2015:	
  4632                           ;incstack = 0
  4633                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0+btemp+1]
  4634                           
  4635  0E61  01F4               	clrf	i1___lwdiv@quotient
  4636  0E62  01F5               	clrf	i1___lwdiv@quotient+1
  4637  0E63                     i1l2017:
  4638  0E63  0870               	movf	i1___lwdiv@divisor,w
  4639  0E64  0471               	iorwf	i1___lwdiv@divisor+1,w
  4640  0E65  1903               	btfsc	3,2
  4641  0E66  2E68               	goto	u197_21
  4642  0E67  2E69               	goto	u197_20
  4643  0E68                     u197_21:
  4644  0E68  2EA0               	goto	i1l2037
  4645  0E69                     u197_20:
  4646  0E69                     i1l2019:
  4647  0E69  01F6               	clrf	i1___lwdiv@counter
  4648  0E6A  0AF6               	incf	i1___lwdiv@counter,f
  4649  0E6B  2E77               	goto	i1l2025
  4650  0E6C                     i1l2021:
  4651  0E6C  3001               	movlw	1
  4652  0E6D                     u198_25:
  4653  0E6D  1003               	clrc
  4654  0E6E  0DF0               	rlf	i1___lwdiv@divisor,f
  4655  0E6F  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4656  0E70  3EFF               	addlw	-1
  4657  0E71  1D03               	skipz
  4658  0E72  2E6D               	goto	u198_25
  4659  0E73                     i1l2023:
  4660  0E73  3001               	movlw	1
  4661  0E74  00FF               	movwf	btemp+1
  4662  0E75  087F               	movf	btemp+1,w
  4663  0E76  07F6               	addwf	i1___lwdiv@counter,f
  4664  0E77                     i1l2025:
  4665  0E77  1FF1               	btfss	i1___lwdiv@divisor+1,7
  4666  0E78  2E7A               	goto	u199_21
  4667  0E79  2E7B               	goto	u199_20
  4668  0E7A                     u199_21:
  4669  0E7A  2E6C               	goto	i1l2021
  4670  0E7B                     u199_20:
  4671  0E7B                     i1l2027:
  4672  0E7B  3001               	movlw	1
  4673  0E7C                     u200_25:
  4674  0E7C  1003               	clrc
  4675  0E7D  0DF4               	rlf	i1___lwdiv@quotient,f
  4676  0E7E  0DF5               	rlf	i1___lwdiv@quotient+1,f
  4677  0E7F  3EFF               	addlw	-1
  4678  0E80  1D03               	skipz
  4679  0E81  2E7C               	goto	u200_25
  4680  0E82  0871               	movf	i1___lwdiv@divisor+1,w
  4681  0E83  0273               	subwf	i1___lwdiv@dividend+1,w
  4682  0E84  1D03               	skipz
  4683  0E85  2E88               	goto	u201_25
  4684  0E86  0870               	movf	i1___lwdiv@divisor,w
  4685  0E87  0272               	subwf	i1___lwdiv@dividend,w
  4686  0E88                     u201_25:
  4687  0E88  1C03               	skipc
  4688  0E89  2E8B               	goto	u201_21
  4689  0E8A  2E8C               	goto	u201_20
  4690  0E8B                     u201_21:
  4691  0E8B  2E93               	goto	i1l2033
  4692  0E8C                     u201_20:
  4693  0E8C                     i1l2029:
  4694  0E8C  0870               	movf	i1___lwdiv@divisor,w
  4695  0E8D  02F2               	subwf	i1___lwdiv@dividend,f
  4696  0E8E  0871               	movf	i1___lwdiv@divisor+1,w
  4697  0E8F  1C03               	skipc
  4698  0E90  03F3               	decf	i1___lwdiv@dividend+1,f
  4699  0E91  02F3               	subwf	i1___lwdiv@dividend+1,f
  4700  0E92                     i1l2031:
  4701  0E92  1474               	bsf	i1___lwdiv@quotient,0
  4702  0E93                     i1l2033:
  4703  0E93  3001               	movlw	1
  4704  0E94                     u202_25:
  4705  0E94  1003               	clrc
  4706  0E95  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4707  0E96  0CF0               	rrf	i1___lwdiv@divisor,f
  4708  0E97  3EFF               	addlw	-1
  4709  0E98  1D03               	skipz
  4710  0E99  2E94               	goto	u202_25
  4711  0E9A                     i1l2035:
  4712  0E9A  3001               	movlw	1
  4713  0E9B  02F6               	subwf	i1___lwdiv@counter,f
  4714  0E9C  1D03               	btfss	3,2
  4715  0E9D  2E9F               	goto	u203_21
  4716  0E9E  2EA0               	goto	u203_20
  4717  0E9F                     u203_21:
  4718  0E9F  2E7B               	goto	i1l2027
  4719  0EA0                     u203_20:
  4720  0EA0                     i1l2037:
  4721  0EA0  0875               	movf	i1___lwdiv@quotient+1,w
  4722  0EA1  00F1               	movwf	?i1___lwdiv+1
  4723  0EA2  0874               	movf	i1___lwdiv@quotient,w
  4724  0EA3  00F0               	movwf	?i1___lwdiv
  4725  0EA4                     i1l681:
  4726  0EA4  0008               	return
  4727  0EA5                     __end_ofi1___lwdiv:
  4728                           
  4729                           	psect	text34
  4730  078E                     __ptext34:	
  4731 ;; *************** function _ADC_Read *****************
  4732 ;; Defined at:
  4733 ;;		line 13 in file "ADC.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  reading         4   35[BANK0 ] float 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  2   31[BANK0 ] unsigned int 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4747 ;;      Params:         0       2       0       0       0
  4748 ;;      Locals:         0       4       0       0       0
  4749 ;;      Temps:          0       2       0       0       0
  4750 ;;      Totals:         0       8       0       0       0
  4751 ;;Total ram usage:        8 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    2
  4754 ;; This function calls:
  4755 ;;		___flmul
  4756 ;;		___fltol
  4757 ;;		___xxtofl
  4758 ;; This function is called by:
  4759 ;;		_ISR
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _ADC_Read
  4765  078E                     _ADC_Read:
  4766  078E                     i1l2097:	
  4767                           ;incstack = 0
  4768                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4769                           
  4770                           
  4771                           ;ADC.c: 14:     float reading ;;ADC.c: 15:     GO_DONE = 1;
  4772  078E  1283               	bcf	3,5	;RP0=0, select bank0
  4773  078F  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0790  151F               	bsf	31,2	;volatile
  4775  0791                     i1l142:	
  4776                           ;ADC.c: 16:     while(ADCON0bits.GO_DONE);
  4777                           
  4778  0791  191F               	btfsc	31,2	;volatile
  4779  0792  2F94               	goto	u205_21
  4780  0793  2F95               	goto	u205_20
  4781  0794                     u205_21:
  4782  0794  2F91               	goto	i1l142
  4783  0795                     u205_20:
  4784  0795                     i1l2099:
  4785                           
  4786                           ;ADC.c: 17:     reading = (ADRESH << 8) + ADRESL;
  4787  0795  081E               	movf	30,w	;volatile
  4788  0796  00C1               	movwf	??_ADC_Read
  4789  0797  01C2               	clrf	??_ADC_Read+1
  4790  0798  0841               	movf	??_ADC_Read,w
  4791  0799  00C2               	movwf	??_ADC_Read+1
  4792  079A  01C1               	clrf	??_ADC_Read
  4793  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4794  079C  1303               	bcf	3,6	;RP1=0, select bank1
  4795  079D  081E               	movf	30,w	;volatile
  4796  079E  1283               	bcf	3,5	;RP0=0, select bank0
  4797  079F  1303               	bcf	3,6	;RP1=0, select bank0
  4798  07A0  0741               	addwf	??_ADC_Read,w
  4799  07A1  00F0               	movwf	___xxtofl@val
  4800  07A2  3000               	movlw	0
  4801  07A3  1803               	skipnc
  4802  07A4  3001               	movlw	1
  4803  07A5  0742               	addwf	??_ADC_Read+1,w
  4804  07A6  00F1               	movwf	___xxtofl@val+1
  4805  07A7  01F2               	clrf	___xxtofl@val+2
  4806  07A8  1BF1               	btfsc	___xxtofl@val+1,7
  4807  07A9  03F2               	decf	___xxtofl@val+2,f
  4808  07AA  0872               	movf	___xxtofl@val+2,w
  4809  07AB  00F3               	movwf	___xxtofl@val+3
  4810  07AC  3001               	movlw	1
  4811  07AD  120A  118A  26D4  120A  118A  	fcall	___xxtofl
  4812  07B2  0873               	movf	?___xxtofl+3,w
  4813  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  4814  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  4815  07B5  00C6               	movwf	ADC_Read@reading+3
  4816  07B6  0872               	movf	?___xxtofl+2,w
  4817  07B7  00C5               	movwf	ADC_Read@reading+2
  4818  07B8  0871               	movf	?___xxtofl+1,w
  4819  07B9  00C4               	movwf	ADC_Read@reading+1
  4820  07BA  0870               	movf	?___xxtofl,w
  4821  07BB  00C3               	movwf	ADC_Read@reading
  4822                           
  4823                           ;ADC.c: 19:     return reading*0.4888;
  4824  07BC  0846               	movf	ADC_Read@reading+3,w
  4825  07BD  00A7               	movwf	___flmul@a+3
  4826  07BE  0845               	movf	ADC_Read@reading+2,w
  4827  07BF  00A6               	movwf	___flmul@a+2
  4828  07C0  0844               	movf	ADC_Read@reading+1,w
  4829  07C1  00A5               	movwf	___flmul@a+1
  4830  07C2  0843               	movf	ADC_Read@reading,w
  4831  07C3  00A4               	movwf	___flmul@a
  4832  07C4  303E               	movlw	62
  4833  07C5  00A3               	movwf	___flmul@b+3
  4834  07C6  30FA               	movlw	250
  4835  07C7  00A2               	movwf	___flmul@b+2
  4836  07C8  3043               	movlw	67
  4837  07C9  00A1               	movwf	___flmul@b+1
  4838  07CA  30FE               	movlw	254
  4839  07CB  00A0               	movwf	___flmul@b
  4840  07CC  120A  118A  2035  120A  118A  	fcall	___flmul
  4841  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  4842  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  4843  07D3  0823               	movf	?___flmul+3,w
  4844  07D4  00B8               	movwf	___fltol@f1+3
  4845  07D5  0822               	movf	?___flmul+2,w
  4846  07D6  00B7               	movwf	___fltol@f1+2
  4847  07D7  0821               	movf	?___flmul+1,w
  4848  07D8  00B6               	movwf	___fltol@f1+1
  4849  07D9  0820               	movf	?___flmul,w
  4850  07DA  00B5               	movwf	___fltol@f1
  4851  07DB  120A  158A  2784  120A  118A  	fcall	___fltol
  4852  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  4853  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  4854  07E2  0836               	movf	?___fltol+1,w
  4855  07E3  00C0               	movwf	?_ADC_Read+1
  4856  07E4  0835               	movf	?___fltol,w
  4857  07E5  00BF               	movwf	?_ADC_Read
  4858  07E6                     i1l145:
  4859  07E6  0008               	return
  4860  07E7                     __end_of_ADC_Read:
  4861                           
  4862                           	psect	text35
  4863  06D4                     __ptext35:	
  4864 ;; *************** function ___xxtofl *****************
  4865 ;; Defined at:
  4866 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  sign            1    wreg     unsigned char 
  4869 ;;  val             4    0[COMMON] long 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  sign            1    8[COMMON] unsigned char 
  4872 ;;  arg             4   10[COMMON] unsigned long 
  4873 ;;  exp             1    9[COMMON] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  4    0[COMMON] unsigned char 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0, btemp+1
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4883 ;;      Params:         4       0       0       0       0
  4884 ;;      Locals:         6       0       0       0       0
  4885 ;;      Temps:          4       0       0       0       0
  4886 ;;      Totals:        14       0       0       0       0
  4887 ;;Total ram usage:       14 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_ADC_Read
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function ___xxtofl
  4898  06D4                     ___xxtofl:
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  4902                           ;___xxtofl@sign stored from wreg
  4903  06D4  00F8               	movwf	___xxtofl@sign
  4904  06D5                     i1l1949:
  4905  06D5  0878               	movf	___xxtofl@sign,w
  4906  06D6  1903               	btfsc	3,2
  4907  06D7  2ED9               	goto	u183_21
  4908  06D8  2EDA               	goto	u183_20
  4909  06D9                     u183_21:
  4910  06D9  2EEE               	goto	i1l1955
  4911  06DA                     u183_20:
  4912  06DA                     i1l1951:
  4913  06DA  1FF3               	btfss	___xxtofl@val+3,7
  4914  06DB  2EDD               	goto	u184_21
  4915  06DC  2EDE               	goto	u184_20
  4916  06DD                     u184_21:
  4917  06DD  2EEE               	goto	i1l1955
  4918  06DE                     u184_20:
  4919  06DE                     i1l1953:
  4920  06DE  0970               	comf	___xxtofl@val,w
  4921  06DF  00FA               	movwf	___xxtofl@arg
  4922  06E0  0971               	comf	___xxtofl@val+1,w
  4923  06E1  00FB               	movwf	___xxtofl@arg+1
  4924  06E2  0972               	comf	___xxtofl@val+2,w
  4925  06E3  00FC               	movwf	___xxtofl@arg+2
  4926  06E4  0973               	comf	___xxtofl@val+3,w
  4927  06E5  00FD               	movwf	___xxtofl@arg+3
  4928  06E6  0AFA               	incf	___xxtofl@arg,f
  4929  06E7  1903               	skipnz
  4930  06E8  0AFB               	incf	___xxtofl@arg+1,f
  4931  06E9  1903               	skipnz
  4932  06EA  0AFC               	incf	___xxtofl@arg+2,f
  4933  06EB  1903               	skipnz
  4934  06EC  0AFD               	incf	___xxtofl@arg+3,f
  4935  06ED  2EF6               	goto	i1l842
  4936  06EE                     i1l1955:
  4937  06EE  0873               	movf	___xxtofl@val+3,w
  4938  06EF  00FD               	movwf	___xxtofl@arg+3
  4939  06F0  0872               	movf	___xxtofl@val+2,w
  4940  06F1  00FC               	movwf	___xxtofl@arg+2
  4941  06F2  0871               	movf	___xxtofl@val+1,w
  4942  06F3  00FB               	movwf	___xxtofl@arg+1
  4943  06F4  0870               	movf	___xxtofl@val,w
  4944  06F5  00FA               	movwf	___xxtofl@arg
  4945  06F6                     i1l842:
  4946  06F6  0873               	movf	___xxtofl@val+3,w
  4947  06F7  0472               	iorwf	___xxtofl@val+2,w
  4948  06F8  0471               	iorwf	___xxtofl@val+1,w
  4949  06F9  0470               	iorwf	___xxtofl@val,w
  4950  06FA  1D03               	skipz
  4951  06FB  2EFD               	goto	u185_21
  4952  06FC  2EFE               	goto	u185_20
  4953  06FD                     u185_21:
  4954  06FD  2F07               	goto	i1l1961
  4955  06FE                     u185_20:
  4956  06FE                     i1l1957:
  4957  06FE  3000               	movlw	0
  4958  06FF  00F3               	movwf	?___xxtofl+3
  4959  0700  3000               	movlw	0
  4960  0701  00F2               	movwf	?___xxtofl+2
  4961  0702  3000               	movlw	0
  4962  0703  00F1               	movwf	?___xxtofl+1
  4963  0704  3000               	movlw	0
  4964  0705  00F0               	movwf	?___xxtofl
  4965  0706  2F8D               	goto	i1l844
  4966  0707                     i1l1961:
  4967  0707  3096               	movlw	150
  4968  0708  00FF               	movwf	btemp+1
  4969  0709  087F               	movf	btemp+1,w
  4970  070A  00F9               	movwf	___xxtofl@exp
  4971  070B  2F19               	goto	i1l1967
  4972  070C                     i1l1963:
  4973  070C  3001               	movlw	1
  4974  070D  00FF               	movwf	btemp+1
  4975  070E  087F               	movf	btemp+1,w
  4976  070F  07F9               	addwf	___xxtofl@exp,f
  4977  0710                     i1l1965:
  4978  0710  3001               	movlw	1
  4979  0711                     u186_25:
  4980  0711  1003               	clrc
  4981  0712  0CFD               	rrf	___xxtofl@arg+3,f
  4982  0713  0CFC               	rrf	___xxtofl@arg+2,f
  4983  0714  0CFB               	rrf	___xxtofl@arg+1,f
  4984  0715  0CFA               	rrf	___xxtofl@arg,f
  4985  0716  3EFF               	addlw	-1
  4986  0717  1D03               	skipz
  4987  0718  2F11               	goto	u186_25
  4988  0719                     i1l1967:
  4989  0719  30FE               	movlw	254
  4990  071A  057D               	andwf	___xxtofl@arg+3,w
  4991  071B  1D03               	btfss	3,2
  4992  071C  2F1E               	goto	u187_21
  4993  071D  2F1F               	goto	u187_20
  4994  071E                     u187_21:
  4995  071E  2F0C               	goto	i1l1963
  4996  071F                     u187_20:
  4997  071F  2F3B               	goto	i1l1975
  4998  0720                     i1l1969:
  4999  0720  3001               	movlw	1
  5000  0721  00FF               	movwf	btemp+1
  5001  0722  087F               	movf	btemp+1,w
  5002  0723  07F9               	addwf	___xxtofl@exp,f
  5003  0724                     i1l1971:
  5004  0724  3001               	movlw	1
  5005  0725  07FA               	addwf	___xxtofl@arg,f
  5006  0726  3000               	movlw	0
  5007  0727  1803               	skipnc
  5008  0728  3001               	movlw	1
  5009  0729  07FB               	addwf	___xxtofl@arg+1,f
  5010  072A  3000               	movlw	0
  5011  072B  1803               	skipnc
  5012  072C  3001               	movlw	1
  5013  072D  07FC               	addwf	___xxtofl@arg+2,f
  5014  072E  3000               	movlw	0
  5015  072F  1803               	skipnc
  5016  0730  3001               	movlw	1
  5017  0731  07FD               	addwf	___xxtofl@arg+3,f
  5018  0732                     i1l1973:
  5019  0732  3001               	movlw	1
  5020  0733                     u188_25:
  5021  0733  1003               	clrc
  5022  0734  0CFD               	rrf	___xxtofl@arg+3,f
  5023  0735  0CFC               	rrf	___xxtofl@arg+2,f
  5024  0736  0CFB               	rrf	___xxtofl@arg+1,f
  5025  0737  0CFA               	rrf	___xxtofl@arg,f
  5026  0738  3EFF               	addlw	-1
  5027  0739  1D03               	skipz
  5028  073A  2F33               	goto	u188_25
  5029  073B                     i1l1975:
  5030  073B  30FF               	movlw	255
  5031  073C  057D               	andwf	___xxtofl@arg+3,w
  5032  073D  1D03               	btfss	3,2
  5033  073E  2F40               	goto	u189_21
  5034  073F  2F41               	goto	u189_20
  5035  0740                     u189_21:
  5036  0740  2F20               	goto	i1l1969
  5037  0741                     u189_20:
  5038  0741  2F4D               	goto	i1l1979
  5039  0742                     i1l1977:
  5040  0742  3001               	movlw	1
  5041  0743  02F9               	subwf	___xxtofl@exp,f
  5042  0744  3001               	movlw	1
  5043  0745  00F4               	movwf	??___xxtofl
  5044  0746                     u190_25:
  5045  0746  1003               	clrc
  5046  0747  0DFA               	rlf	___xxtofl@arg,f
  5047  0748  0DFB               	rlf	___xxtofl@arg+1,f
  5048  0749  0DFC               	rlf	___xxtofl@arg+2,f
  5049  074A  0DFD               	rlf	___xxtofl@arg+3,f
  5050  074B  0BF4               	decfsz	??___xxtofl,f
  5051  074C  2F46               	goto	u190_25
  5052  074D                     i1l1979:
  5053  074D  1BFC               	btfsc	___xxtofl@arg+2,7
  5054  074E  2F50               	goto	u191_21
  5055  074F  2F51               	goto	u191_20
  5056  0750                     u191_21:
  5057  0750  2F57               	goto	i1l855
  5058  0751                     u191_20:
  5059  0751                     i1l1981:
  5060  0751  3002               	movlw	2
  5061  0752  0279               	subwf	___xxtofl@exp,w
  5062  0753  1803               	skipnc
  5063  0754  2F56               	goto	u192_21
  5064  0755  2F57               	goto	u192_20
  5065  0756                     u192_21:
  5066  0756  2F42               	goto	i1l1977
  5067  0757                     u192_20:
  5068  0757                     i1l855:
  5069  0757  1879               	btfsc	___xxtofl@exp,0
  5070  0758  2F5A               	goto	u193_21
  5071  0759  2F5B               	goto	u193_20
  5072  075A                     u193_21:
  5073  075A  2F63               	goto	i1l856
  5074  075B                     u193_20:
  5075  075B                     i1l1983:
  5076  075B  30FF               	movlw	255
  5077  075C  05FA               	andwf	___xxtofl@arg,f
  5078  075D  30FF               	movlw	255
  5079  075E  05FB               	andwf	___xxtofl@arg+1,f
  5080  075F  307F               	movlw	127
  5081  0760  05FC               	andwf	___xxtofl@arg+2,f
  5082  0761  30FF               	movlw	255
  5083  0762  05FD               	andwf	___xxtofl@arg+3,f
  5084  0763                     i1l856:
  5085  0763  1003               	clrc
  5086  0764  0CF9               	rrf	___xxtofl@exp,f
  5087  0765                     i1l1985:
  5088  0765  0879               	movf	___xxtofl@exp,w
  5089  0766  00F4               	movwf	??___xxtofl
  5090  0767  01F5               	clrf	??___xxtofl+1
  5091  0768  01F6               	clrf	??___xxtofl+2
  5092  0769  01F7               	clrf	??___xxtofl+3
  5093  076A  3018               	movlw	24
  5094  076B                     u194_25:
  5095  076B  1003               	clrc
  5096  076C  0DF4               	rlf	??___xxtofl,f
  5097  076D  0DF5               	rlf	??___xxtofl+1,f
  5098  076E  0DF6               	rlf	??___xxtofl+2,f
  5099  076F  0DF7               	rlf	??___xxtofl+3,f
  5100  0770                     u194_20:
  5101  0770  3EFF               	addlw	-1
  5102  0771  1D03               	skipz
  5103  0772  2F6B               	goto	u194_25
  5104  0773  0874               	movf	??___xxtofl,w
  5105  0774  04FA               	iorwf	___xxtofl@arg,f
  5106  0775  0875               	movf	??___xxtofl+1,w
  5107  0776  04FB               	iorwf	___xxtofl@arg+1,f
  5108  0777  0876               	movf	??___xxtofl+2,w
  5109  0778  04FC               	iorwf	___xxtofl@arg+2,f
  5110  0779  0877               	movf	??___xxtofl+3,w
  5111  077A  04FD               	iorwf	___xxtofl@arg+3,f
  5112  077B                     i1l1987:
  5113  077B  0878               	movf	___xxtofl@sign,w
  5114  077C  1903               	btfsc	3,2
  5115  077D  2F7F               	goto	u195_21
  5116  077E  2F80               	goto	u195_20
  5117  077F                     u195_21:
  5118  077F  2F85               	goto	i1l1993
  5119  0780                     u195_20:
  5120  0780                     i1l1989:
  5121  0780  1FF3               	btfss	___xxtofl@val+3,7
  5122  0781  2F83               	goto	u196_21
  5123  0782  2F84               	goto	u196_20
  5124  0783                     u196_21:
  5125  0783  2F85               	goto	i1l1993
  5126  0784                     u196_20:
  5127  0784                     i1l1991:
  5128  0784  17FD               	bsf	___xxtofl@arg+3,7
  5129  0785                     i1l1993:
  5130  0785  087D               	movf	___xxtofl@arg+3,w
  5131  0786  00F3               	movwf	?___xxtofl+3
  5132  0787  087C               	movf	___xxtofl@arg+2,w
  5133  0788  00F2               	movwf	?___xxtofl+2
  5134  0789  087B               	movf	___xxtofl@arg+1,w
  5135  078A  00F1               	movwf	?___xxtofl+1
  5136  078B  087A               	movf	___xxtofl@arg,w
  5137  078C  00F0               	movwf	?___xxtofl
  5138  078D                     i1l844:
  5139  078D  0008               	return
  5140  078E                     __end_of___xxtofl:
  5141                           
  5142                           	psect	text36
  5143  0F84                     __ptext36:	
  5144 ;; *************** function ___fltol *****************
  5145 ;; Defined at:
  5146 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  f1              4   21[BANK0 ] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  exp1            1   30[BANK0 ] unsigned char 
  5151 ;;  sign1           1   29[BANK0 ] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4   21[BANK0 ] long 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0, btemp+1
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       4       0       0       0
  5162 ;;      Locals:         0       2       0       0       0
  5163 ;;      Temps:          0       4       0       0       0
  5164 ;;      Totals:         0      10       0       0       0
  5165 ;;Total ram usage:       10 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_ADC_Read
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function ___fltol
  5176  0F84                     ___fltol:
  5177  0F84                     i1l1769:	
  5178                           ;incstack = 0
  5179                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5180                           
  5181  0F84  1003               	clrc
  5182  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5183  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  5184  0F87  0D37               	rlf	___fltol@f1+2,w
  5185  0F88  0D38               	rlf	___fltol@f1+3,w
  5186  0F89  00FF               	movwf	btemp+1
  5187  0F8A  087F               	movf	btemp+1,w
  5188  0F8B  00BE               	movwf	___fltol@exp1
  5189  0F8C  083E               	movf	___fltol@exp1,w
  5190  0F8D  1D03               	btfss	3,2
  5191  0F8E  2F90               	goto	u136_21
  5192  0F8F  2F91               	goto	u136_20
  5193  0F90                     u136_21:
  5194  0F90  2F9A               	goto	i1l1775
  5195  0F91                     u136_20:
  5196  0F91                     i1l1771:
  5197  0F91  3000               	movlw	0
  5198  0F92  00B8               	movwf	?___fltol+3
  5199  0F93  3000               	movlw	0
  5200  0F94  00B7               	movwf	?___fltol+2
  5201  0F95  3000               	movlw	0
  5202  0F96  00B6               	movwf	?___fltol+1
  5203  0F97  3000               	movlw	0
  5204  0F98  00B5               	movwf	?___fltol
  5205  0F99  2FFF               	goto	i1l595
  5206  0F9A                     i1l1775:
  5207  0F9A  0835               	movf	___fltol@f1,w
  5208  0F9B  00B9               	movwf	??___fltol
  5209  0F9C  0836               	movf	___fltol@f1+1,w
  5210  0F9D  00BA               	movwf	??___fltol+1
  5211  0F9E  0837               	movf	___fltol@f1+2,w
  5212  0F9F  00BB               	movwf	??___fltol+2
  5213  0FA0  0838               	movf	___fltol@f1+3,w
  5214  0FA1  00BC               	movwf	??___fltol+3
  5215  0FA2  301F               	movlw	31
  5216  0FA3                     u137_25:
  5217  0FA3  1003               	clrc
  5218  0FA4  0CBC               	rrf	??___fltol+3,f
  5219  0FA5  0CBB               	rrf	??___fltol+2,f
  5220  0FA6  0CBA               	rrf	??___fltol+1,f
  5221  0FA7  0CB9               	rrf	??___fltol,f
  5222  0FA8                     u137_20:
  5223  0FA8  3EFF               	addlw	-1
  5224  0FA9  1D03               	skipz
  5225  0FAA  2FA3               	goto	u137_25
  5226  0FAB  0839               	movf	??___fltol,w
  5227  0FAC  00FF               	movwf	btemp+1
  5228  0FAD  087F               	movf	btemp+1,w
  5229  0FAE  00BD               	movwf	___fltol@sign1
  5230  0FAF                     i1l1777:
  5231  0FAF  17B7               	bsf	___fltol@f1+2,7
  5232  0FB0                     i1l1779:
  5233  0FB0  30FF               	movlw	255
  5234  0FB1  05B5               	andwf	___fltol@f1,f
  5235  0FB2  30FF               	movlw	255
  5236  0FB3  05B6               	andwf	___fltol@f1+1,f
  5237  0FB4  30FF               	movlw	255
  5238  0FB5  05B7               	andwf	___fltol@f1+2,f
  5239  0FB6  3000               	movlw	0
  5240  0FB7  05B8               	andwf	___fltol@f1+3,f
  5241  0FB8                     i1l1781:
  5242  0FB8  3096               	movlw	150
  5243  0FB9  02BE               	subwf	___fltol@exp1,f
  5244  0FBA                     i1l1783:
  5245  0FBA  1FBE               	btfss	___fltol@exp1,7
  5246  0FBB  2FBD               	goto	u138_21
  5247  0FBC  2FBE               	goto	u138_20
  5248  0FBD                     u138_21:
  5249  0FBD  2FD8               	goto	i1l1795
  5250  0FBE                     u138_20:
  5251  0FBE                     i1l1785:
  5252  0FBE  083E               	movf	___fltol@exp1,w
  5253  0FBF  3A80               	xorlw	128
  5254  0FC0  3E97               	addlw	151
  5255  0FC1  1803               	skipnc
  5256  0FC2  2FC4               	goto	u139_21
  5257  0FC3  2FC5               	goto	u139_20
  5258  0FC4                     u139_21:
  5259  0FC4  2FC6               	goto	i1l1791
  5260  0FC5                     u139_20:
  5261  0FC5  2F91               	goto	i1l1771
  5262  0FC6                     i1l1791:
  5263  0FC6  3001               	movlw	1
  5264  0FC7                     u140_25:
  5265  0FC7  1003               	clrc
  5266  0FC8  0CB8               	rrf	___fltol@f1+3,f
  5267  0FC9  0CB7               	rrf	___fltol@f1+2,f
  5268  0FCA  0CB6               	rrf	___fltol@f1+1,f
  5269  0FCB  0CB5               	rrf	___fltol@f1,f
  5270  0FCC  3EFF               	addlw	-1
  5271  0FCD  1D03               	skipz
  5272  0FCE  2FC7               	goto	u140_25
  5273  0FCF                     i1l1793:
  5274  0FCF  3001               	movlw	1
  5275  0FD0  00FF               	movwf	btemp+1
  5276  0FD1  087F               	movf	btemp+1,w
  5277  0FD2  07BE               	addwf	___fltol@exp1,f
  5278  0FD3  1D03               	btfss	3,2
  5279  0FD4  2FD6               	goto	u141_21
  5280  0FD5  2FD7               	goto	u141_20
  5281  0FD6                     u141_21:
  5282  0FD6  2FC6               	goto	i1l1791
  5283  0FD7                     u141_20:
  5284  0FD7  2FEF               	goto	i1l1803
  5285  0FD8                     i1l1795:
  5286  0FD8  3020               	movlw	32
  5287  0FD9  023E               	subwf	___fltol@exp1,w
  5288  0FDA  1C03               	skipc
  5289  0FDB  2FDD               	goto	u142_21
  5290  0FDC  2FDE               	goto	u142_20
  5291  0FDD                     u142_21:
  5292  0FDD  2FEA               	goto	i1l602
  5293  0FDE                     u142_20:
  5294  0FDE  2F91               	goto	i1l1771
  5295  0FDF                     i1l1801:
  5296  0FDF  3001               	movlw	1
  5297  0FE0  00B9               	movwf	??___fltol
  5298  0FE1                     u143_25:
  5299  0FE1  1003               	clrc
  5300  0FE2  0DB5               	rlf	___fltol@f1,f
  5301  0FE3  0DB6               	rlf	___fltol@f1+1,f
  5302  0FE4  0DB7               	rlf	___fltol@f1+2,f
  5303  0FE5  0DB8               	rlf	___fltol@f1+3,f
  5304  0FE6  0BB9               	decfsz	??___fltol,f
  5305  0FE7  2FE1               	goto	u143_25
  5306  0FE8  3001               	movlw	1
  5307  0FE9  02BE               	subwf	___fltol@exp1,f
  5308  0FEA                     i1l602:
  5309  0FEA  083E               	movf	___fltol@exp1,w
  5310  0FEB  1D03               	btfss	3,2
  5311  0FEC  2FEE               	goto	u144_21
  5312  0FED  2FEF               	goto	u144_20
  5313  0FEE                     u144_21:
  5314  0FEE  2FDF               	goto	i1l1801
  5315  0FEF                     u144_20:
  5316  0FEF                     i1l1803:
  5317  0FEF  083D               	movf	___fltol@sign1,w
  5318  0FF0  1903               	btfsc	3,2
  5319  0FF1  2FF3               	goto	u145_21
  5320  0FF2  2FF4               	goto	u145_20
  5321  0FF3                     u145_21:
  5322  0FF3  2FFF               	goto	i1l605
  5323  0FF4                     u145_20:
  5324  0FF4                     i1l1805:
  5325  0FF4  09B5               	comf	___fltol@f1,f
  5326  0FF5  09B6               	comf	___fltol@f1+1,f
  5327  0FF6  09B7               	comf	___fltol@f1+2,f
  5328  0FF7  09B8               	comf	___fltol@f1+3,f
  5329  0FF8  0AB5               	incf	___fltol@f1,f
  5330  0FF9  1903               	skipnz
  5331  0FFA  0AB6               	incf	___fltol@f1+1,f
  5332  0FFB  1903               	skipnz
  5333  0FFC  0AB7               	incf	___fltol@f1+2,f
  5334  0FFD  1903               	skipnz
  5335  0FFE  0AB8               	incf	___fltol@f1+3,f
  5336  0FFF                     i1l605:
  5337  0FFF                     i1l595:
  5338  0FFF  0008               	return
  5339  1000                     __end_of___fltol:
  5340                           
  5341                           	psect	text37
  5342  0035                     __ptext37:	
  5343 ;; *************** function ___flmul *****************
  5344 ;; Defined at:
  5345 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  b               4    0[BANK0 ] long 
  5348 ;;  a               4    4[BANK0 ] long 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  prod            4   15[BANK0 ] struct .
  5351 ;;  grs             4    9[BANK0 ] unsigned long 
  5352 ;;  temp            2   19[BANK0 ] struct .
  5353 ;;  bexp            1   14[BANK0 ] unsigned char 
  5354 ;;  aexp            1   13[BANK0 ] unsigned char 
  5355 ;;  sign            1    8[BANK0 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  4    0[BANK0 ] unsigned char 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         0       8       0       0       0
  5366 ;;      Locals:         0      13       0       0       0
  5367 ;;      Temps:          5       0       0       0       0
  5368 ;;      Totals:         5      21       0       0       0
  5369 ;;Total ram usage:       26 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    1
  5372 ;; This function calls:
  5373 ;;		__Umul8_16
  5374 ;; This function is called by:
  5375 ;;		_ADC_Read
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function ___flmul
  5381  0035                     ___flmul:
  5382  0035                     i1l1807:	
  5383                           ;incstack = 0
  5384                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5385                           
  5386  0035  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0036  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0037  0823               	movf	___flmul@b+3,w
  5389  0038  3980               	andlw	128
  5390  0039  00FF               	movwf	btemp+1
  5391  003A  087F               	movf	btemp+1,w
  5392  003B  00A8               	movwf	___flmul@sign
  5393  003C                     i1l1809:
  5394  003C  0823               	movf	___flmul@b+3,w
  5395  003D  00F9               	movwf	??___flmul
  5396  003E  0779               	addwf	??___flmul,w
  5397  003F  00FF               	movwf	btemp+1
  5398  0040  087F               	movf	btemp+1,w
  5399  0041  00AE               	movwf	___flmul@bexp
  5400  0042                     i1l1811:
  5401  0042  1FA2               	btfss	___flmul@b+2,7
  5402  0043  2845               	goto	u146_21
  5403  0044  2846               	goto	u146_20
  5404  0045                     u146_21:
  5405  0045  2847               	goto	i1l1815
  5406  0046                     u146_20:
  5407  0046                     i1l1813:
  5408  0046  142E               	bsf	___flmul@bexp,0
  5409  0047                     i1l1815:
  5410  0047  082E               	movf	___flmul@bexp,w
  5411  0048  1903               	btfsc	3,2
  5412  0049  284B               	goto	u147_21
  5413  004A  284C               	goto	u147_20
  5414  004B                     u147_21:
  5415  004B  285B               	goto	i1l1823
  5416  004C                     u147_20:
  5417  004C                     i1l1817:
  5418  004C  0A2E               	incf	___flmul@bexp,w
  5419  004D  1D03               	btfss	3,2
  5420  004E  2850               	goto	u148_21
  5421  004F  2851               	goto	u148_20
  5422  0050                     u148_21:
  5423  0050  2859               	goto	i1l1821
  5424  0051                     u148_20:
  5425  0051                     i1l1819:
  5426  0051  3000               	movlw	0
  5427  0052  00A3               	movwf	___flmul@b+3
  5428  0053  3000               	movlw	0
  5429  0054  00A2               	movwf	___flmul@b+2
  5430  0055  3000               	movlw	0
  5431  0056  00A1               	movwf	___flmul@b+1
  5432  0057  3000               	movlw	0
  5433  0058  00A0               	movwf	___flmul@b
  5434  0059                     i1l1821:
  5435  0059  17A2               	bsf	___flmul@b+2,7
  5436  005A  2863               	goto	i1l1825
  5437  005B                     i1l1823:
  5438  005B  3000               	movlw	0
  5439  005C  00A3               	movwf	___flmul@b+3
  5440  005D  3000               	movlw	0
  5441  005E  00A2               	movwf	___flmul@b+2
  5442  005F  3000               	movlw	0
  5443  0060  00A1               	movwf	___flmul@b+1
  5444  0061  3000               	movlw	0
  5445  0062  00A0               	movwf	___flmul@b
  5446  0063                     i1l1825:
  5447  0063  0827               	movf	___flmul@a+3,w
  5448  0064  3980               	andlw	128
  5449  0065  00FF               	movwf	btemp+1
  5450  0066  087F               	movf	btemp+1,w
  5451  0067  06A8               	xorwf	___flmul@sign,f
  5452  0068                     i1l1827:
  5453  0068  0827               	movf	___flmul@a+3,w
  5454  0069  00F9               	movwf	??___flmul
  5455  006A  0779               	addwf	??___flmul,w
  5456  006B  00FF               	movwf	btemp+1
  5457  006C  087F               	movf	btemp+1,w
  5458  006D  00AD               	movwf	___flmul@aexp
  5459  006E                     i1l1829:
  5460  006E  1FA6               	btfss	___flmul@a+2,7
  5461  006F  2871               	goto	u149_21
  5462  0070  2872               	goto	u149_20
  5463  0071                     u149_21:
  5464  0071  2873               	goto	i1l1833
  5465  0072                     u149_20:
  5466  0072                     i1l1831:
  5467  0072  142D               	bsf	___flmul@aexp,0
  5468  0073                     i1l1833:
  5469  0073  082D               	movf	___flmul@aexp,w
  5470  0074  1903               	btfsc	3,2
  5471  0075  2877               	goto	u150_21
  5472  0076  2878               	goto	u150_20
  5473  0077                     u150_21:
  5474  0077  2887               	goto	i1l1841
  5475  0078                     u150_20:
  5476  0078                     i1l1835:
  5477  0078  0A2D               	incf	___flmul@aexp,w
  5478  0079  1D03               	btfss	3,2
  5479  007A  287C               	goto	u151_21
  5480  007B  287D               	goto	u151_20
  5481  007C                     u151_21:
  5482  007C  2885               	goto	i1l1839
  5483  007D                     u151_20:
  5484  007D                     i1l1837:
  5485  007D  3000               	movlw	0
  5486  007E  00A7               	movwf	___flmul@a+3
  5487  007F  3000               	movlw	0
  5488  0080  00A6               	movwf	___flmul@a+2
  5489  0081  3000               	movlw	0
  5490  0082  00A5               	movwf	___flmul@a+1
  5491  0083  3000               	movlw	0
  5492  0084  00A4               	movwf	___flmul@a
  5493  0085                     i1l1839:
  5494  0085  17A6               	bsf	___flmul@a+2,7
  5495  0086  288F               	goto	i1l1843
  5496  0087                     i1l1841:
  5497  0087  3000               	movlw	0
  5498  0088  00A7               	movwf	___flmul@a+3
  5499  0089  3000               	movlw	0
  5500  008A  00A6               	movwf	___flmul@a+2
  5501  008B  3000               	movlw	0
  5502  008C  00A5               	movwf	___flmul@a+1
  5503  008D  3000               	movlw	0
  5504  008E  00A4               	movwf	___flmul@a
  5505  008F                     i1l1843:
  5506  008F  082D               	movf	___flmul@aexp,w
  5507  0090  1903               	btfsc	3,2
  5508  0091  2893               	goto	u152_21
  5509  0092  2894               	goto	u152_20
  5510  0093                     u152_21:
  5511  0093  2899               	goto	i1l1847
  5512  0094                     u152_20:
  5513  0094                     i1l1845:
  5514  0094  082E               	movf	___flmul@bexp,w
  5515  0095  1D03               	btfss	3,2
  5516  0096  2898               	goto	u153_21
  5517  0097  2899               	goto	u153_20
  5518  0098                     u153_21:
  5519  0098  28A2               	goto	i1l1851
  5520  0099                     u153_20:
  5521  0099                     i1l1847:
  5522  0099  3000               	movlw	0
  5523  009A  00A3               	movwf	?___flmul+3
  5524  009B  3000               	movlw	0
  5525  009C  00A2               	movwf	?___flmul+2
  5526  009D  3000               	movlw	0
  5527  009E  00A1               	movwf	?___flmul+1
  5528  009F  3000               	movlw	0
  5529  00A0  00A0               	movwf	?___flmul
  5530  00A1  2B95               	goto	i1l798
  5531  00A2                     i1l1851:
  5532  00A2  0820               	movf	___flmul@b,w
  5533  00A3  00FF               	movwf	btemp+1
  5534  00A4  087F               	movf	btemp+1,w
  5535  00A5  00F0               	movwf	__Umul8_16@multiplicand
  5536  00A6  0826               	movf	___flmul@a+2,w
  5537  00A7  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5538  00AC  0871               	movf	?__Umul8_16+1,w
  5539  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  5540  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  5541  00AF  00B4               	movwf	___flmul@temp+1
  5542  00B0  0870               	movf	?__Umul8_16,w
  5543  00B1  00B3               	movwf	___flmul@temp
  5544  00B2                     i1l1853:
  5545  00B2  0833               	movf	___flmul@temp,w
  5546  00B3  00F9               	movwf	??___flmul
  5547  00B4  01FA               	clrf	??___flmul+1
  5548  00B5  01FB               	clrf	??___flmul+2
  5549  00B6  01FC               	clrf	??___flmul+3
  5550  00B7  087C               	movf	??___flmul+3,w
  5551  00B8  00AC               	movwf	___flmul@grs+3
  5552  00B9  087B               	movf	??___flmul+2,w
  5553  00BA  00AB               	movwf	___flmul@grs+2
  5554  00BB  087A               	movf	??___flmul+1,w
  5555  00BC  00AA               	movwf	___flmul@grs+1
  5556  00BD  0879               	movf	??___flmul,w
  5557  00BE  00A9               	movwf	___flmul@grs
  5558  00BF                     i1l1855:
  5559  00BF  0834               	movf	___flmul@temp+1,w
  5560  00C0  00F9               	movwf	??___flmul
  5561  00C1  01FA               	clrf	??___flmul+1
  5562  00C2  01FB               	clrf	??___flmul+2
  5563  00C3  01FC               	clrf	??___flmul+3
  5564  00C4  087C               	movf	??___flmul+3,w
  5565  00C5  00B2               	movwf	___flmul@prod+3
  5566  00C6  087B               	movf	??___flmul+2,w
  5567  00C7  00B1               	movwf	___flmul@prod+2
  5568  00C8  087A               	movf	??___flmul+1,w
  5569  00C9  00B0               	movwf	___flmul@prod+1
  5570  00CA  0879               	movf	??___flmul,w
  5571  00CB  00AF               	movwf	___flmul@prod
  5572  00CC  0821               	movf	___flmul@b+1,w
  5573  00CD  00FF               	movwf	btemp+1
  5574  00CE  087F               	movf	btemp+1,w
  5575  00CF  00F0               	movwf	__Umul8_16@multiplicand
  5576  00D0  0825               	movf	___flmul@a+1,w
  5577  00D1  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5578  00D6  0871               	movf	?__Umul8_16+1,w
  5579  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  5580  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  5581  00D9  00B4               	movwf	___flmul@temp+1
  5582  00DA  0870               	movf	?__Umul8_16,w
  5583  00DB  00B3               	movwf	___flmul@temp
  5584  00DC                     i1l1857:
  5585  00DC  0833               	movf	___flmul@temp,w
  5586  00DD  00F9               	movwf	??___flmul
  5587  00DE  01FA               	clrf	??___flmul+1
  5588  00DF  01FB               	clrf	??___flmul+2
  5589  00E0  01FC               	clrf	??___flmul+3
  5590  00E1  0879               	movf	??___flmul,w
  5591  00E2  07A9               	addwf	___flmul@grs,f
  5592  00E3  087A               	movf	??___flmul+1,w
  5593  00E4  1103               	clrz
  5594  00E5  1803               	skipnc
  5595  00E6  3E01               	addlw	1
  5596  00E7  1903               	skipnz
  5597  00E8  28EA               	goto	u154_21
  5598  00E9  07AA               	addwf	___flmul@grs+1,f
  5599  00EA                     u154_21:
  5600  00EA  087B               	movf	??___flmul+2,w
  5601  00EB  1103               	clrz
  5602  00EC  1803               	skipnc
  5603  00ED  3E01               	addlw	1
  5604  00EE  1903               	skipnz
  5605  00EF  28F1               	goto	u154_22
  5606  00F0  07AB               	addwf	___flmul@grs+2,f
  5607  00F1                     u154_22:
  5608  00F1  087C               	movf	??___flmul+3,w
  5609  00F2  1103               	clrz
  5610  00F3  1803               	skipnc
  5611  00F4  3E01               	addlw	1
  5612  00F5  1903               	skipnz
  5613  00F6  28F8               	goto	u154_23
  5614  00F7  07AC               	addwf	___flmul@grs+3,f
  5615  00F8                     u154_23:
  5616  00F8                     i1l1859:
  5617  00F8  0834               	movf	___flmul@temp+1,w
  5618  00F9  00F9               	movwf	??___flmul
  5619  00FA  01FA               	clrf	??___flmul+1
  5620  00FB  01FB               	clrf	??___flmul+2
  5621  00FC  01FC               	clrf	??___flmul+3
  5622  00FD  0879               	movf	??___flmul,w
  5623  00FE  07AF               	addwf	___flmul@prod,f
  5624  00FF  087A               	movf	??___flmul+1,w
  5625  0100  1103               	clrz
  5626  0101  1803               	skipnc
  5627  0102  3E01               	addlw	1
  5628  0103  1903               	skipnz
  5629  0104  2906               	goto	u155_21
  5630  0105  07B0               	addwf	___flmul@prod+1,f
  5631  0106                     u155_21:
  5632  0106  087B               	movf	??___flmul+2,w
  5633  0107  1103               	clrz
  5634  0108  1803               	skipnc
  5635  0109  3E01               	addlw	1
  5636  010A  1903               	skipnz
  5637  010B  290D               	goto	u155_22
  5638  010C  07B1               	addwf	___flmul@prod+2,f
  5639  010D                     u155_22:
  5640  010D  087C               	movf	??___flmul+3,w
  5641  010E  1103               	clrz
  5642  010F  1803               	skipnc
  5643  0110  3E01               	addlw	1
  5644  0111  1903               	skipnz
  5645  0112  2914               	goto	u155_23
  5646  0113  07B2               	addwf	___flmul@prod+3,f
  5647  0114                     u155_23:
  5648  0114  0822               	movf	___flmul@b+2,w
  5649  0115  00FF               	movwf	btemp+1
  5650  0116  087F               	movf	btemp+1,w
  5651  0117  00F0               	movwf	__Umul8_16@multiplicand
  5652  0118  0824               	movf	___flmul@a,w
  5653  0119  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5654  011E  0871               	movf	?__Umul8_16+1,w
  5655  011F  1283               	bcf	3,5	;RP0=0, select bank0
  5656  0120  1303               	bcf	3,6	;RP1=0, select bank0
  5657  0121  00B4               	movwf	___flmul@temp+1
  5658  0122  0870               	movf	?__Umul8_16,w
  5659  0123  00B3               	movwf	___flmul@temp
  5660  0124                     i1l1861:
  5661  0124  0833               	movf	___flmul@temp,w
  5662  0125  00F9               	movwf	??___flmul
  5663  0126  01FA               	clrf	??___flmul+1
  5664  0127  01FB               	clrf	??___flmul+2
  5665  0128  01FC               	clrf	??___flmul+3
  5666  0129  0879               	movf	??___flmul,w
  5667  012A  07A9               	addwf	___flmul@grs,f
  5668  012B  087A               	movf	??___flmul+1,w
  5669  012C  1103               	clrz
  5670  012D  1803               	skipnc
  5671  012E  3E01               	addlw	1
  5672  012F  1903               	skipnz
  5673  0130  2932               	goto	u156_21
  5674  0131  07AA               	addwf	___flmul@grs+1,f
  5675  0132                     u156_21:
  5676  0132  087B               	movf	??___flmul+2,w
  5677  0133  1103               	clrz
  5678  0134  1803               	skipnc
  5679  0135  3E01               	addlw	1
  5680  0136  1903               	skipnz
  5681  0137  2939               	goto	u156_22
  5682  0138  07AB               	addwf	___flmul@grs+2,f
  5683  0139                     u156_22:
  5684  0139  087C               	movf	??___flmul+3,w
  5685  013A  1103               	clrz
  5686  013B  1803               	skipnc
  5687  013C  3E01               	addlw	1
  5688  013D  1903               	skipnz
  5689  013E  2940               	goto	u156_23
  5690  013F  07AC               	addwf	___flmul@grs+3,f
  5691  0140                     u156_23:
  5692  0140                     i1l1863:
  5693  0140  0834               	movf	___flmul@temp+1,w
  5694  0141  00F9               	movwf	??___flmul
  5695  0142  01FA               	clrf	??___flmul+1
  5696  0143  01FB               	clrf	??___flmul+2
  5697  0144  01FC               	clrf	??___flmul+3
  5698  0145  0879               	movf	??___flmul,w
  5699  0146  07AF               	addwf	___flmul@prod,f
  5700  0147  087A               	movf	??___flmul+1,w
  5701  0148  1103               	clrz
  5702  0149  1803               	skipnc
  5703  014A  3E01               	addlw	1
  5704  014B  1903               	skipnz
  5705  014C  294E               	goto	u157_21
  5706  014D  07B0               	addwf	___flmul@prod+1,f
  5707  014E                     u157_21:
  5708  014E  087B               	movf	??___flmul+2,w
  5709  014F  1103               	clrz
  5710  0150  1803               	skipnc
  5711  0151  3E01               	addlw	1
  5712  0152  1903               	skipnz
  5713  0153  2955               	goto	u157_22
  5714  0154  07B1               	addwf	___flmul@prod+2,f
  5715  0155                     u157_22:
  5716  0155  087C               	movf	??___flmul+3,w
  5717  0156  1103               	clrz
  5718  0157  1803               	skipnc
  5719  0158  3E01               	addlw	1
  5720  0159  1903               	skipnz
  5721  015A  295C               	goto	u157_23
  5722  015B  07B2               	addwf	___flmul@prod+3,f
  5723  015C                     u157_23:
  5724  015C                     i1l1865:
  5725  015C  3008               	movlw	8
  5726  015D  00F9               	movwf	??___flmul
  5727  015E                     u158_25:
  5728  015E  1003               	clrc
  5729  015F  0DA9               	rlf	___flmul@grs,f
  5730  0160  0DAA               	rlf	___flmul@grs+1,f
  5731  0161  0DAB               	rlf	___flmul@grs+2,f
  5732  0162  0DAC               	rlf	___flmul@grs+3,f
  5733  0163  0BF9               	decfsz	??___flmul,f
  5734  0164  295E               	goto	u158_25
  5735  0165                     i1l1867:
  5736  0165  0821               	movf	___flmul@b+1,w
  5737  0166  00FF               	movwf	btemp+1
  5738  0167  087F               	movf	btemp+1,w
  5739  0168  00F0               	movwf	__Umul8_16@multiplicand
  5740  0169  0824               	movf	___flmul@a,w
  5741  016A  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5742  016F  0871               	movf	?__Umul8_16+1,w
  5743  0170  1283               	bcf	3,5	;RP0=0, select bank0
  5744  0171  1303               	bcf	3,6	;RP1=0, select bank0
  5745  0172  00B4               	movwf	___flmul@temp+1
  5746  0173  0870               	movf	?__Umul8_16,w
  5747  0174  00B3               	movwf	___flmul@temp
  5748  0175                     i1l1869:
  5749  0175  0833               	movf	___flmul@temp,w
  5750  0176  00F9               	movwf	??___flmul
  5751  0177  0834               	movf	___flmul@temp+1,w
  5752  0178  00FA               	movwf	??___flmul+1
  5753  0179  01FB               	clrf	??___flmul+2
  5754  017A  01FC               	clrf	??___flmul+3
  5755  017B  0879               	movf	??___flmul,w
  5756  017C  07A9               	addwf	___flmul@grs,f
  5757  017D  087A               	movf	??___flmul+1,w
  5758  017E  1103               	clrz
  5759  017F  1803               	skipnc
  5760  0180  3E01               	addlw	1
  5761  0181  1903               	skipnz
  5762  0182  2984               	goto	u159_21
  5763  0183  07AA               	addwf	___flmul@grs+1,f
  5764  0184                     u159_21:
  5765  0184  087B               	movf	??___flmul+2,w
  5766  0185  1103               	clrz
  5767  0186  1803               	skipnc
  5768  0187  3E01               	addlw	1
  5769  0188  1903               	skipnz
  5770  0189  298B               	goto	u159_22
  5771  018A  07AB               	addwf	___flmul@grs+2,f
  5772  018B                     u159_22:
  5773  018B  087C               	movf	??___flmul+3,w
  5774  018C  1103               	clrz
  5775  018D  1803               	skipnc
  5776  018E  3E01               	addlw	1
  5777  018F  1903               	skipnz
  5778  0190  2992               	goto	u159_23
  5779  0191  07AC               	addwf	___flmul@grs+3,f
  5780  0192                     u159_23:
  5781  0192                     i1l1871:
  5782  0192  0820               	movf	___flmul@b,w
  5783  0193  00FF               	movwf	btemp+1
  5784  0194  087F               	movf	btemp+1,w
  5785  0195  00F0               	movwf	__Umul8_16@multiplicand
  5786  0196  0825               	movf	___flmul@a+1,w
  5787  0197  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5788  019C  0871               	movf	?__Umul8_16+1,w
  5789  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5790  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5791  019F  00B4               	movwf	___flmul@temp+1
  5792  01A0  0870               	movf	?__Umul8_16,w
  5793  01A1  00B3               	movwf	___flmul@temp
  5794  01A2                     i1l1873:
  5795  01A2  0833               	movf	___flmul@temp,w
  5796  01A3  00F9               	movwf	??___flmul
  5797  01A4  0834               	movf	___flmul@temp+1,w
  5798  01A5  00FA               	movwf	??___flmul+1
  5799  01A6  01FB               	clrf	??___flmul+2
  5800  01A7  01FC               	clrf	??___flmul+3
  5801  01A8  0879               	movf	??___flmul,w
  5802  01A9  07A9               	addwf	___flmul@grs,f
  5803  01AA  087A               	movf	??___flmul+1,w
  5804  01AB  1103               	clrz
  5805  01AC  1803               	skipnc
  5806  01AD  3E01               	addlw	1
  5807  01AE  1903               	skipnz
  5808  01AF  29B1               	goto	u160_21
  5809  01B0  07AA               	addwf	___flmul@grs+1,f
  5810  01B1                     u160_21:
  5811  01B1  087B               	movf	??___flmul+2,w
  5812  01B2  1103               	clrz
  5813  01B3  1803               	skipnc
  5814  01B4  3E01               	addlw	1
  5815  01B5  1903               	skipnz
  5816  01B6  29B8               	goto	u160_22
  5817  01B7  07AB               	addwf	___flmul@grs+2,f
  5818  01B8                     u160_22:
  5819  01B8  087C               	movf	??___flmul+3,w
  5820  01B9  1103               	clrz
  5821  01BA  1803               	skipnc
  5822  01BB  3E01               	addlw	1
  5823  01BC  1903               	skipnz
  5824  01BD  29BF               	goto	u160_23
  5825  01BE  07AC               	addwf	___flmul@grs+3,f
  5826  01BF                     u160_23:
  5827  01BF                     i1l1875:
  5828  01BF  3008               	movlw	8
  5829  01C0  00F9               	movwf	??___flmul
  5830  01C1                     u161_25:
  5831  01C1  1003               	clrc
  5832  01C2  0DA9               	rlf	___flmul@grs,f
  5833  01C3  0DAA               	rlf	___flmul@grs+1,f
  5834  01C4  0DAB               	rlf	___flmul@grs+2,f
  5835  01C5  0DAC               	rlf	___flmul@grs+3,f
  5836  01C6  0BF9               	decfsz	??___flmul,f
  5837  01C7  29C1               	goto	u161_25
  5838  01C8  0820               	movf	___flmul@b,w
  5839  01C9  00FF               	movwf	btemp+1
  5840  01CA  087F               	movf	btemp+1,w
  5841  01CB  00F0               	movwf	__Umul8_16@multiplicand
  5842  01CC  0824               	movf	___flmul@a,w
  5843  01CD  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5844  01D2  0871               	movf	?__Umul8_16+1,w
  5845  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  5846  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  5847  01D5  00B4               	movwf	___flmul@temp+1
  5848  01D6  0870               	movf	?__Umul8_16,w
  5849  01D7  00B3               	movwf	___flmul@temp
  5850  01D8                     i1l1877:
  5851  01D8  0833               	movf	___flmul@temp,w
  5852  01D9  00F9               	movwf	??___flmul
  5853  01DA  0834               	movf	___flmul@temp+1,w
  5854  01DB  00FA               	movwf	??___flmul+1
  5855  01DC  01FB               	clrf	??___flmul+2
  5856  01DD  01FC               	clrf	??___flmul+3
  5857  01DE  0879               	movf	??___flmul,w
  5858  01DF  07A9               	addwf	___flmul@grs,f
  5859  01E0  087A               	movf	??___flmul+1,w
  5860  01E1  1103               	clrz
  5861  01E2  1803               	skipnc
  5862  01E3  3E01               	addlw	1
  5863  01E4  1903               	skipnz
  5864  01E5  29E7               	goto	u162_21
  5865  01E6  07AA               	addwf	___flmul@grs+1,f
  5866  01E7                     u162_21:
  5867  01E7  087B               	movf	??___flmul+2,w
  5868  01E8  1103               	clrz
  5869  01E9  1803               	skipnc
  5870  01EA  3E01               	addlw	1
  5871  01EB  1903               	skipnz
  5872  01EC  29EE               	goto	u162_22
  5873  01ED  07AB               	addwf	___flmul@grs+2,f
  5874  01EE                     u162_22:
  5875  01EE  087C               	movf	??___flmul+3,w
  5876  01EF  1103               	clrz
  5877  01F0  1803               	skipnc
  5878  01F1  3E01               	addlw	1
  5879  01F2  1903               	skipnz
  5880  01F3  29F5               	goto	u162_23
  5881  01F4  07AC               	addwf	___flmul@grs+3,f
  5882  01F5                     u162_23:
  5883  01F5                     i1l1879:
  5884  01F5  0821               	movf	___flmul@b+1,w
  5885  01F6  00FF               	movwf	btemp+1
  5886  01F7  087F               	movf	btemp+1,w
  5887  01F8  00F0               	movwf	__Umul8_16@multiplicand
  5888  01F9  0826               	movf	___flmul@a+2,w
  5889  01FA  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5890  01FF  0871               	movf	?__Umul8_16+1,w
  5891  0200  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0201  1303               	bcf	3,6	;RP1=0, select bank0
  5893  0202  00B4               	movwf	___flmul@temp+1
  5894  0203  0870               	movf	?__Umul8_16,w
  5895  0204  00B3               	movwf	___flmul@temp
  5896  0205  0833               	movf	___flmul@temp,w
  5897  0206  00F9               	movwf	??___flmul
  5898  0207  0834               	movf	___flmul@temp+1,w
  5899  0208  00FA               	movwf	??___flmul+1
  5900  0209  01FB               	clrf	??___flmul+2
  5901  020A  01FC               	clrf	??___flmul+3
  5902  020B  0879               	movf	??___flmul,w
  5903  020C  07AF               	addwf	___flmul@prod,f
  5904  020D  087A               	movf	??___flmul+1,w
  5905  020E  1103               	clrz
  5906  020F  1803               	skipnc
  5907  0210  3E01               	addlw	1
  5908  0211  1903               	skipnz
  5909  0212  2A14               	goto	u163_21
  5910  0213  07B0               	addwf	___flmul@prod+1,f
  5911  0214                     u163_21:
  5912  0214  087B               	movf	??___flmul+2,w
  5913  0215  1103               	clrz
  5914  0216  1803               	skipnc
  5915  0217  3E01               	addlw	1
  5916  0218  1903               	skipnz
  5917  0219  2A1B               	goto	u163_22
  5918  021A  07B1               	addwf	___flmul@prod+2,f
  5919  021B                     u163_22:
  5920  021B  087C               	movf	??___flmul+3,w
  5921  021C  1103               	clrz
  5922  021D  1803               	skipnc
  5923  021E  3E01               	addlw	1
  5924  021F  1903               	skipnz
  5925  0220  2A22               	goto	u163_23
  5926  0221  07B2               	addwf	___flmul@prod+3,f
  5927  0222                     u163_23:
  5928  0222                     i1l1881:
  5929  0222  0822               	movf	___flmul@b+2,w
  5930  0223  00FF               	movwf	btemp+1
  5931  0224  087F               	movf	btemp+1,w
  5932  0225  00F0               	movwf	__Umul8_16@multiplicand
  5933  0226  0825               	movf	___flmul@a+1,w
  5934  0227  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5935  022C  0871               	movf	?__Umul8_16+1,w
  5936  022D  1283               	bcf	3,5	;RP0=0, select bank0
  5937  022E  1303               	bcf	3,6	;RP1=0, select bank0
  5938  022F  00B4               	movwf	___flmul@temp+1
  5939  0230  0870               	movf	?__Umul8_16,w
  5940  0231  00B3               	movwf	___flmul@temp
  5941  0232                     i1l1883:
  5942  0232  0833               	movf	___flmul@temp,w
  5943  0233  00F9               	movwf	??___flmul
  5944  0234  0834               	movf	___flmul@temp+1,w
  5945  0235  00FA               	movwf	??___flmul+1
  5946  0236  01FB               	clrf	??___flmul+2
  5947  0237  01FC               	clrf	??___flmul+3
  5948  0238  0879               	movf	??___flmul,w
  5949  0239  07AF               	addwf	___flmul@prod,f
  5950  023A  087A               	movf	??___flmul+1,w
  5951  023B  1103               	clrz
  5952  023C  1803               	skipnc
  5953  023D  3E01               	addlw	1
  5954  023E  1903               	skipnz
  5955  023F  2A41               	goto	u164_21
  5956  0240  07B0               	addwf	___flmul@prod+1,f
  5957  0241                     u164_21:
  5958  0241  087B               	movf	??___flmul+2,w
  5959  0242  1103               	clrz
  5960  0243  1803               	skipnc
  5961  0244  3E01               	addlw	1
  5962  0245  1903               	skipnz
  5963  0246  2A48               	goto	u164_22
  5964  0247  07B1               	addwf	___flmul@prod+2,f
  5965  0248                     u164_22:
  5966  0248  087C               	movf	??___flmul+3,w
  5967  0249  1103               	clrz
  5968  024A  1803               	skipnc
  5969  024B  3E01               	addlw	1
  5970  024C  1903               	skipnz
  5971  024D  2A4F               	goto	u164_23
  5972  024E  07B2               	addwf	___flmul@prod+3,f
  5973  024F                     u164_23:
  5974  024F  0822               	movf	___flmul@b+2,w
  5975  0250  00FF               	movwf	btemp+1
  5976  0251  087F               	movf	btemp+1,w
  5977  0252  00F0               	movwf	__Umul8_16@multiplicand
  5978  0253  0826               	movf	___flmul@a+2,w
  5979  0254  120A  158A  25B1  120A  118A  	fcall	__Umul8_16
  5980  0259  0871               	movf	?__Umul8_16+1,w
  5981  025A  1283               	bcf	3,5	;RP0=0, select bank0
  5982  025B  1303               	bcf	3,6	;RP1=0, select bank0
  5983  025C  00B4               	movwf	___flmul@temp+1
  5984  025D  0870               	movf	?__Umul8_16,w
  5985  025E  00B3               	movwf	___flmul@temp
  5986  025F                     i1l1885:
  5987  025F  0833               	movf	___flmul@temp,w
  5988  0260  00F9               	movwf	??___flmul
  5989  0261  0834               	movf	___flmul@temp+1,w
  5990  0262  00FA               	movwf	??___flmul+1
  5991  0263  01FB               	clrf	??___flmul+2
  5992  0264  01FC               	clrf	??___flmul+3
  5993  0265  3008               	movlw	8
  5994  0266                     u165_25:
  5995  0266  1003               	clrc
  5996  0267  0DF9               	rlf	??___flmul,f
  5997  0268  0DFA               	rlf	??___flmul+1,f
  5998  0269  0DFB               	rlf	??___flmul+2,f
  5999  026A  0DFC               	rlf	??___flmul+3,f
  6000  026B                     u165_20:
  6001  026B  3EFF               	addlw	-1
  6002  026C  1D03               	skipz
  6003  026D  2A66               	goto	u165_25
  6004  026E  0879               	movf	??___flmul,w
  6005  026F  07AF               	addwf	___flmul@prod,f
  6006  0270  087A               	movf	??___flmul+1,w
  6007  0271  1103               	clrz
  6008  0272  1803               	skipnc
  6009  0273  3E01               	addlw	1
  6010  0274  1903               	skipnz
  6011  0275  2A77               	goto	u166_21
  6012  0276  07B0               	addwf	___flmul@prod+1,f
  6013  0277                     u166_21:
  6014  0277  087B               	movf	??___flmul+2,w
  6015  0278  1103               	clrz
  6016  0279  1803               	skipnc
  6017  027A  3E01               	addlw	1
  6018  027B  1903               	skipnz
  6019  027C  2A7E               	goto	u166_22
  6020  027D  07B1               	addwf	___flmul@prod+2,f
  6021  027E                     u166_22:
  6022  027E  087C               	movf	??___flmul+3,w
  6023  027F  1103               	clrz
  6024  0280  1803               	skipnc
  6025  0281  3E01               	addlw	1
  6026  0282  1903               	skipnz
  6027  0283  2A85               	goto	u166_23
  6028  0284  07B2               	addwf	___flmul@prod+3,f
  6029  0285                     u166_23:
  6030  0285                     i1l1887:
  6031  0285  0829               	movf	___flmul@grs,w
  6032  0286  00F9               	movwf	??___flmul
  6033  0287  082A               	movf	___flmul@grs+1,w
  6034  0288  00FA               	movwf	??___flmul+1
  6035  0289  082B               	movf	___flmul@grs+2,w
  6036  028A  00FB               	movwf	??___flmul+2
  6037  028B  082C               	movf	___flmul@grs+3,w
  6038  028C  00FC               	movwf	??___flmul+3
  6039  028D  3018               	movlw	24
  6040  028E                     u167_25:
  6041  028E  1003               	clrc
  6042  028F  0CFC               	rrf	??___flmul+3,f
  6043  0290  0CFB               	rrf	??___flmul+2,f
  6044  0291  0CFA               	rrf	??___flmul+1,f
  6045  0292  0CF9               	rrf	??___flmul,f
  6046  0293                     u167_20:
  6047  0293  3EFF               	addlw	-1
  6048  0294  1D03               	skipz
  6049  0295  2A8E               	goto	u167_25
  6050  0296  0879               	movf	??___flmul,w
  6051  0297  07AF               	addwf	___flmul@prod,f
  6052  0298  087A               	movf	??___flmul+1,w
  6053  0299  1103               	clrz
  6054  029A  1803               	skipnc
  6055  029B  3E01               	addlw	1
  6056  029C  1903               	skipnz
  6057  029D  2A9F               	goto	u168_21
  6058  029E  07B0               	addwf	___flmul@prod+1,f
  6059  029F                     u168_21:
  6060  029F  087B               	movf	??___flmul+2,w
  6061  02A0  1103               	clrz
  6062  02A1  1803               	skipnc
  6063  02A2  3E01               	addlw	1
  6064  02A3  1903               	skipnz
  6065  02A4  2AA6               	goto	u168_22
  6066  02A5  07B1               	addwf	___flmul@prod+2,f
  6067  02A6                     u168_22:
  6068  02A6  087C               	movf	??___flmul+3,w
  6069  02A7  1103               	clrz
  6070  02A8  1803               	skipnc
  6071  02A9  3E01               	addlw	1
  6072  02AA  1903               	skipnz
  6073  02AB  2AAD               	goto	u168_23
  6074  02AC  07B2               	addwf	___flmul@prod+3,f
  6075  02AD                     u168_23:
  6076  02AD                     i1l1889:
  6077  02AD  3008               	movlw	8
  6078  02AE  00F9               	movwf	??___flmul
  6079  02AF                     u169_25:
  6080  02AF  1003               	clrc
  6081  02B0  0DA9               	rlf	___flmul@grs,f
  6082  02B1  0DAA               	rlf	___flmul@grs+1,f
  6083  02B2  0DAB               	rlf	___flmul@grs+2,f
  6084  02B3  0DAC               	rlf	___flmul@grs+3,f
  6085  02B4  0BF9               	decfsz	??___flmul,f
  6086  02B5  2AAF               	goto	u169_25
  6087  02B6                     i1l1891:
  6088  02B6  082E               	movf	___flmul@bexp,w
  6089  02B7  072D               	addwf	___flmul@aexp,w
  6090  02B8  00F9               	movwf	??___flmul
  6091  02B9  01FA               	clrf	??___flmul+1
  6092  02BA  0DFA               	rlf	??___flmul+1,f
  6093  02BB  0879               	movf	??___flmul,w
  6094  02BC  3E82               	addlw	130
  6095  02BD  00B3               	movwf	___flmul@temp
  6096  02BE  087A               	movf	??___flmul+1,w
  6097  02BF  1803               	skipnc
  6098  02C0  3E01               	addlw	1
  6099  02C1  3EFF               	addlw	255
  6100  02C2  00B4               	movwf	___flmul@temp+1
  6101  02C3  2AE1               	goto	i1l1903
  6102  02C4                     i1l1893:
  6103  02C4  3001               	movlw	1
  6104  02C5  00F9               	movwf	??___flmul
  6105  02C6                     u170_25:
  6106  02C6  1003               	clrc
  6107  02C7  0DAF               	rlf	___flmul@prod,f
  6108  02C8  0DB0               	rlf	___flmul@prod+1,f
  6109  02C9  0DB1               	rlf	___flmul@prod+2,f
  6110  02CA  0DB2               	rlf	___flmul@prod+3,f
  6111  02CB  0BF9               	decfsz	??___flmul,f
  6112  02CC  2AC6               	goto	u170_25
  6113  02CD                     i1l1895:
  6114  02CD  1FAC               	btfss	___flmul@grs+3,7
  6115  02CE  2AD0               	goto	u171_21
  6116  02CF  2AD1               	goto	u171_20
  6117  02D0                     u171_21:
  6118  02D0  2AD2               	goto	i1l1899
  6119  02D1                     u171_20:
  6120  02D1                     i1l1897:
  6121  02D1  142F               	bsf	___flmul@prod,0
  6122  02D2                     i1l1899:
  6123  02D2  3001               	movlw	1
  6124  02D3  00F9               	movwf	??___flmul
  6125  02D4                     u172_25:
  6126  02D4  1003               	clrc
  6127  02D5  0DA9               	rlf	___flmul@grs,f
  6128  02D6  0DAA               	rlf	___flmul@grs+1,f
  6129  02D7  0DAB               	rlf	___flmul@grs+2,f
  6130  02D8  0DAC               	rlf	___flmul@grs+3,f
  6131  02D9  0BF9               	decfsz	??___flmul,f
  6132  02DA  2AD4               	goto	u172_25
  6133  02DB                     i1l1901:
  6134  02DB  30FF               	movlw	255
  6135  02DC  07B3               	addwf	___flmul@temp,f
  6136  02DD  1803               	skipnc
  6137  02DE  0AB4               	incf	___flmul@temp+1,f
  6138  02DF  30FF               	movlw	255
  6139  02E0  07B4               	addwf	___flmul@temp+1,f
  6140  02E1                     i1l1903:
  6141  02E1  1FB1               	btfss	___flmul@prod+2,7
  6142  02E2  2AE4               	goto	u173_21
  6143  02E3  2AE5               	goto	u173_20
  6144  02E4                     u173_21:
  6145  02E4  2AC4               	goto	i1l1893
  6146  02E5                     u173_20:
  6147  02E5                     i1l1905:
  6148  02E5  01AD               	clrf	___flmul@aexp
  6149  02E6                     i1l1907:
  6150  02E6  1FAC               	btfss	___flmul@grs+3,7
  6151  02E7  2AE9               	goto	u174_21
  6152  02E8  2AEA               	goto	u174_20
  6153  02E9                     u174_21:
  6154  02E9  2B06               	goto	i1l1915
  6155  02EA                     u174_20:
  6156  02EA                     i1l1909:
  6157  02EA  30FF               	movlw	255
  6158  02EB  0529               	andwf	___flmul@grs,w
  6159  02EC  00F9               	movwf	??___flmul
  6160  02ED  30FF               	movlw	255
  6161  02EE  052A               	andwf	___flmul@grs+1,w
  6162  02EF  00FA               	movwf	??___flmul+1
  6163  02F0  30FF               	movlw	255
  6164  02F1  052B               	andwf	___flmul@grs+2,w
  6165  02F2  00FB               	movwf	??___flmul+2
  6166  02F3  307F               	movlw	127
  6167  02F4  052C               	andwf	___flmul@grs+3,w
  6168  02F5  00FC               	movwf	??___flmul+3
  6169  02F6  087C               	movf	??___flmul+3,w
  6170  02F7  047B               	iorwf	??___flmul+2,w
  6171  02F8  047A               	iorwf	??___flmul+1,w
  6172  02F9  0479               	iorwf	??___flmul,w
  6173  02FA  1903               	skipnz
  6174  02FB  2AFD               	goto	u175_21
  6175  02FC  2AFE               	goto	u175_20
  6176  02FD                     u175_21:
  6177  02FD  2B01               	goto	i1l804
  6178  02FE                     u175_20:
  6179  02FE                     i1l1911:
  6180  02FE  01AD               	clrf	___flmul@aexp
  6181  02FF  0AAD               	incf	___flmul@aexp,f
  6182  0300  2B06               	goto	i1l1915
  6183  0301                     i1l804:
  6184  0301  1C2F               	btfss	___flmul@prod,0
  6185  0302  2B04               	goto	u176_21
  6186  0303  2B05               	goto	u176_20
  6187  0304                     u176_21:
  6188  0304  2B06               	goto	i1l1915
  6189  0305                     u176_20:
  6190  0305  2AFE               	goto	i1l1911
  6191  0306                     i1l1915:
  6192  0306  082D               	movf	___flmul@aexp,w
  6193  0307  1903               	btfsc	3,2
  6194  0308  2B0A               	goto	u177_21
  6195  0309  2B0B               	goto	u177_20
  6196  030A                     u177_21:
  6197  030A  2B3C               	goto	i1l1925
  6198  030B                     u177_20:
  6199  030B                     i1l1917:
  6200  030B  3001               	movlw	1
  6201  030C  07AF               	addwf	___flmul@prod,f
  6202  030D  3000               	movlw	0
  6203  030E  1803               	skipnc
  6204  030F  3001               	movlw	1
  6205  0310  07B0               	addwf	___flmul@prod+1,f
  6206  0311  3000               	movlw	0
  6207  0312  1803               	skipnc
  6208  0313  3001               	movlw	1
  6209  0314  07B1               	addwf	___flmul@prod+2,f
  6210  0315  3000               	movlw	0
  6211  0316  1803               	skipnc
  6212  0317  3001               	movlw	1
  6213  0318  07B2               	addwf	___flmul@prod+3,f
  6214  0319                     i1l1919:
  6215  0319  1C32               	btfss	___flmul@prod+3,0
  6216  031A  2B1C               	goto	u178_21
  6217  031B  2B1D               	goto	u178_20
  6218  031C                     u178_21:
  6219  031C  2B3C               	goto	i1l1925
  6220  031D                     u178_20:
  6221  031D                     i1l1921:
  6222  031D  082F               	movf	___flmul@prod,w
  6223  031E  00F9               	movwf	??___flmul
  6224  031F  0830               	movf	___flmul@prod+1,w
  6225  0320  00FA               	movwf	??___flmul+1
  6226  0321  0831               	movf	___flmul@prod+2,w
  6227  0322  00FB               	movwf	??___flmul+2
  6228  0323  0832               	movf	___flmul@prod+3,w
  6229  0324  00FC               	movwf	??___flmul+3
  6230  0325  3001               	movlw	1
  6231  0326  00FD               	movwf	??___flmul+4
  6232  0327                     u179_25:
  6233  0327  0D7C               	rlf	??___flmul+3,w
  6234  0328  0CFC               	rrf	??___flmul+3,f
  6235  0329  0CFB               	rrf	??___flmul+2,f
  6236  032A  0CFA               	rrf	??___flmul+1,f
  6237  032B  0CF9               	rrf	??___flmul,f
  6238  032C                     u179_20:
  6239  032C  0BFD               	decfsz	??___flmul+4,f
  6240  032D  2B27               	goto	u179_25
  6241  032E  087C               	movf	??___flmul+3,w
  6242  032F  00B2               	movwf	___flmul@prod+3
  6243  0330  087B               	movf	??___flmul+2,w
  6244  0331  00B1               	movwf	___flmul@prod+2
  6245  0332  087A               	movf	??___flmul+1,w
  6246  0333  00B0               	movwf	___flmul@prod+1
  6247  0334  0879               	movf	??___flmul,w
  6248  0335  00AF               	movwf	___flmul@prod
  6249  0336                     i1l1923:
  6250  0336  3001               	movlw	1
  6251  0337  07B3               	addwf	___flmul@temp,f
  6252  0338  1803               	skipnc
  6253  0339  0AB4               	incf	___flmul@temp+1,f
  6254  033A  3000               	movlw	0
  6255  033B  07B4               	addwf	___flmul@temp+1,f
  6256  033C                     i1l1925:
  6257  033C  0834               	movf	___flmul@temp+1,w
  6258  033D  3A80               	xorlw	128
  6259  033E  00FF               	movwf	btemp+1
  6260  033F  3080               	movlw	128
  6261  0340  027F               	subwf	btemp+1,w
  6262  0341  1D03               	skipz
  6263  0342  2B45               	goto	u180_25
  6264  0343  30FF               	movlw	255
  6265  0344  0233               	subwf	___flmul@temp,w
  6266  0345                     u180_25:
  6267  0345  1C03               	skipc
  6268  0346  2B48               	goto	u180_21
  6269  0347  2B49               	goto	u180_20
  6270  0348                     u180_21:
  6271  0348  2B54               	goto	i1l1929
  6272  0349                     u180_20:
  6273  0349                     i1l1927:
  6274  0349  307F               	movlw	127
  6275  034A  1283               	bcf	3,5	;RP0=0, select bank0
  6276  034B  1303               	bcf	3,6	;RP1=0, select bank0
  6277  034C  00B2               	movwf	___flmul@prod+3
  6278  034D  3080               	movlw	128
  6279  034E  00B1               	movwf	___flmul@prod+2
  6280  034F  3000               	movlw	0
  6281  0350  00B0               	movwf	___flmul@prod+1
  6282  0351  3000               	movlw	0
  6283  0352  00AF               	movwf	___flmul@prod
  6284  0353  2B89               	goto	i1l810
  6285  0354                     i1l1929:
  6286  0354  1283               	bcf	3,5	;RP0=0, select bank0
  6287  0355  1303               	bcf	3,6	;RP1=0, select bank0
  6288  0356  0834               	movf	___flmul@temp+1,w
  6289  0357  3A80               	xorlw	128
  6290  0358  00FF               	movwf	btemp+1
  6291  0359  3080               	movlw	128
  6292  035A  027F               	subwf	btemp+1,w
  6293  035B  1D03               	skipz
  6294  035C  2B5F               	goto	u181_25
  6295  035D  3001               	movlw	1
  6296  035E  0233               	subwf	___flmul@temp,w
  6297  035F                     u181_25:
  6298  035F  1803               	skipnc
  6299  0360  2B62               	goto	u181_21
  6300  0361  2B63               	goto	u181_20
  6301  0362                     u181_21:
  6302  0362  2B6F               	goto	i1l1935
  6303  0363                     u181_20:
  6304  0363                     i1l1931:
  6305  0363  3000               	movlw	0
  6306  0364  1283               	bcf	3,5	;RP0=0, select bank0
  6307  0365  1303               	bcf	3,6	;RP1=0, select bank0
  6308  0366  00B2               	movwf	___flmul@prod+3
  6309  0367  3000               	movlw	0
  6310  0368  00B1               	movwf	___flmul@prod+2
  6311  0369  3000               	movlw	0
  6312  036A  00B0               	movwf	___flmul@prod+1
  6313  036B  3000               	movlw	0
  6314  036C  00AF               	movwf	___flmul@prod
  6315  036D                     i1l1933:
  6316  036D  01A8               	clrf	___flmul@sign
  6317  036E  2B89               	goto	i1l810
  6318  036F                     i1l1935:
  6319  036F  1283               	bcf	3,5	;RP0=0, select bank0
  6320  0370  1303               	bcf	3,6	;RP1=0, select bank0
  6321  0371  0833               	movf	___flmul@temp,w
  6322  0372  00FF               	movwf	btemp+1
  6323  0373  087F               	movf	btemp+1,w
  6324  0374  00AE               	movwf	___flmul@bexp
  6325  0375                     i1l1937:
  6326  0375  30FF               	movlw	255
  6327  0376  05AF               	andwf	___flmul@prod,f
  6328  0377  30FF               	movlw	255
  6329  0378  05B0               	andwf	___flmul@prod+1,f
  6330  0379  307F               	movlw	127
  6331  037A  05B1               	andwf	___flmul@prod+2,f
  6332  037B  3000               	movlw	0
  6333  037C  05B2               	andwf	___flmul@prod+3,f
  6334  037D                     i1l1939:
  6335  037D  1C2E               	btfss	___flmul@bexp,0
  6336  037E  2B80               	goto	u182_21
  6337  037F  2B81               	goto	u182_20
  6338  0380                     u182_21:
  6339  0380  2B82               	goto	i1l1943
  6340  0381                     u182_20:
  6341  0381                     i1l1941:
  6342  0381  17B1               	bsf	___flmul@prod+2,7
  6343  0382                     i1l1943:
  6344  0382  082E               	movf	___flmul@bexp,w
  6345  0383  00F9               	movwf	??___flmul
  6346  0384  1003               	clrc
  6347  0385  0C79               	rrf	??___flmul,w
  6348  0386  00FF               	movwf	btemp+1
  6349  0387  087F               	movf	btemp+1,w
  6350  0388  00B2               	movwf	___flmul@prod+3
  6351  0389                     i1l810:
  6352  0389  0828               	movf	___flmul@sign,w
  6353  038A  00FF               	movwf	btemp+1
  6354  038B  087F               	movf	btemp+1,w
  6355  038C  04B2               	iorwf	___flmul@prod+3,f
  6356  038D                     i1l1945:
  6357  038D  0832               	movf	___flmul@prod+3,w
  6358  038E  00A3               	movwf	?___flmul+3
  6359  038F  0831               	movf	___flmul@prod+2,w
  6360  0390  00A2               	movwf	?___flmul+2
  6361  0391  0830               	movf	___flmul@prod+1,w
  6362  0392  00A1               	movwf	?___flmul+1
  6363  0393  082F               	movf	___flmul@prod,w
  6364  0394  00A0               	movwf	?___flmul
  6365  0395                     i1l798:
  6366  0395  0008               	return
  6367  0396                     __end_of___flmul:
  6368                           
  6369                           	psect	text38
  6370  0DB1                     __ptext38:	
  6371 ;; *************** function __Umul8_16 *****************
  6372 ;; Defined at:
  6373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  multiplier      1    wreg     unsigned char 
  6376 ;;  multiplicand    1    0[COMMON] unsigned char 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  multiplier      1    8[COMMON] unsigned char 
  6379 ;;  word_mpld       2    6[COMMON] unsigned int 
  6380 ;;  product         2    4[COMMON] unsigned int 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  2    0[COMMON] unsigned int 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         2       0       0       0       0
  6391 ;;      Locals:         5       0       0       0       0
  6392 ;;      Temps:          2       0       0       0       0
  6393 ;;      Totals:         9       0       0       0       0
  6394 ;;Total ram usage:        9 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		___flmul
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           
  6404                           ;psect for function __Umul8_16
  6405  0DB1                     __Umul8_16:
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6409                           ;__Umul8_16@multiplier stored from wreg
  6410  0DB1  00F8               	movwf	__Umul8_16@multiplier
  6411  0DB2                     i1l1697:
  6412  0DB2  01F4               	clrf	__Umul8_16@product
  6413  0DB3  01F5               	clrf	__Umul8_16@product+1
  6414  0DB4                     i1l1699:
  6415  0DB4  0870               	movf	__Umul8_16@multiplicand,w
  6416  0DB5  00F2               	movwf	??__Umul8_16
  6417  0DB6  01F3               	clrf	??__Umul8_16+1
  6418  0DB7  0872               	movf	??__Umul8_16,w
  6419  0DB8  00F6               	movwf	__Umul8_16@word_mpld
  6420  0DB9  0873               	movf	??__Umul8_16+1,w
  6421  0DBA  00F7               	movwf	__Umul8_16@word_mpld+1
  6422  0DBB                     i1l1701:
  6423  0DBB  1C78               	btfss	__Umul8_16@multiplier,0
  6424  0DBC  2DBE               	goto	u130_21
  6425  0DBD  2DBF               	goto	u130_20
  6426  0DBE                     u130_21:
  6427  0DBE  2DC5               	goto	i1l817
  6428  0DBF                     u130_20:
  6429  0DBF                     i1l1703:
  6430  0DBF  0876               	movf	__Umul8_16@word_mpld,w
  6431  0DC0  07F4               	addwf	__Umul8_16@product,f
  6432  0DC1  1803               	skipnc
  6433  0DC2  0AF5               	incf	__Umul8_16@product+1,f
  6434  0DC3  0877               	movf	__Umul8_16@word_mpld+1,w
  6435  0DC4  07F5               	addwf	__Umul8_16@product+1,f
  6436  0DC5                     i1l817:
  6437  0DC5  3001               	movlw	1
  6438  0DC6                     u131_25:
  6439  0DC6  1003               	clrc
  6440  0DC7  0DF6               	rlf	__Umul8_16@word_mpld,f
  6441  0DC8  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6442  0DC9  3EFF               	addlw	-1
  6443  0DCA  1D03               	skipz
  6444  0DCB  2DC6               	goto	u131_25
  6445  0DCC  1003               	clrc
  6446  0DCD  0CF8               	rrf	__Umul8_16@multiplier,f
  6447  0DCE                     i1l1705:
  6448  0DCE  0878               	movf	__Umul8_16@multiplier,w
  6449  0DCF  1D03               	btfss	3,2
  6450  0DD0  2DD2               	goto	u132_21
  6451  0DD1  2DD3               	goto	u132_20
  6452  0DD2                     u132_21:
  6453  0DD2  2DBB               	goto	i1l1701
  6454  0DD3                     u132_20:
  6455  0DD3                     i1l1707:
  6456  0DD3  0875               	movf	__Umul8_16@product+1,w
  6457  0DD4  00F1               	movwf	?__Umul8_16+1
  6458  0DD5  0874               	movf	__Umul8_16@product,w
  6459  0DD6  00F0               	movwf	?__Umul8_16
  6460  0DD7                     i1l819:
  6461  0DD7  0008               	return
  6462  0DD8                     __end_of__Umul8_16:
  6463  007E                     btemp	set	126	;btemp
  6464  007E                     wtemp0	set	126
  6465                           
  6466                           	psect	config
  6467                           
  6468                           ;Config register CONFIG @ 0x2007
  6469                           ;	Oscillator Selection bits
  6470                           ;	FOSC = HS, HS oscillator
  6471                           ;	Watchdog Timer Enable bit
  6472                           ;	WDTE = OFF, WDT disabled
  6473                           ;	Power-up Timer Enable bit
  6474                           ;	PWRTE = OFF, PWRT disabled
  6475                           ;	Brown-out Reset Enable bit
  6476                           ;	BOREN = OFF, BOR disabled
  6477                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6478                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6479                           ;	Data EEPROM Memory Code Protection bit
  6480                           ;	CPD = OFF, Data EEPROM code protection off
  6481                           ;	Flash Program Memory Write Enable bits
  6482                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6483                           ;	In-Circuit Debugger Mode bit
  6484                           ;	DEBUG = 0x1, unprogrammed default
  6485                           ;	Flash Program Memory Code Protection bit
  6486                           ;	CP = OFF, Code protection off
  6487  2007                     	org	8199
  6488  2007  3F3A               	dw	16186

Data Sizes:
    Strings     30
    Constant    0
    Data        14
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      72
    BANK1            80     17      35
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1___bmul->i1___lwdiv
    i1_EEPROM_Write->i1___bmul
    _calc_average->i1___lwdiv
    _ADC_Read->___flmul
    _ADC_Read->___xxtofl
    ___fltol->___flmul
    ___flmul->__Umul8_16

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_ADC_Read
    _ADC_Read->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_SEG_Write1
    ___wmul->___lwdiv
    ___bmul->___lwdiv
    _SEG_Write1->___wmul
    _SEG_Write->___lwdiv
    _LCD_Write_String->_LCD_Write_uint8_t
    _LCD_Write_uint8_t->_LCD_SEND
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_SEND
    _EEPROM_Write->___bmul
    _EEPROM_Read->_I2C_Write

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8264
                                             15 BANK1      2     2      0
                           _ADC_Init
                        _EEPROM_Read
                       _EEPROM_Write
                    _I2C_INIT_MASTER
                           _LCD_Init
                    _LCD_SendCommand
                   _LCD_Write_String
                           _SEG_Init
                          _SEG_Write
                         _SEG_Write1
                        _TIMER1_INIT
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2068
                                              7 BANK1      6     2      4
                        _EEPROM_Read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    4718
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               3     2      1     294
                                              7 BANK1      3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _TIMER1_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SEG_Write1                                           2     0      2     174
                                             13 BANK1      2     0      2
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SEG_Write                                            2     0      2     174
                                              7 BANK1      2     0      2
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _SEG_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     233
                                              4 BANK1      3     3      0
                  _LCD_Write_uint8_t
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_uint8_t                                    3     3      0      44
                                              1 BANK1      3     3      0
                           _LCD_SEND
 ---------------------------------------------------------------------------------
 (1) _LCD_SendCommand                                      3     3      0      22
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              4 BANK1      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      44
                                              1 BANK1      3     3      0
                           _LCD_SEND
 ---------------------------------------------------------------------------------
 (3) _LCD_SEND                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_INIT_MASTER                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     470
                                             10 BANK1      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                             ___bmul (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     2      0      67
                                              1 BANK1      2     2      0
                           _I2C_Nack
                      _I2C_Read_Byte
                            _I2C_Res
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 BANK1      1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Res                                              0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0    4083
                                             39 BANK0      5     5      0
                           _ADC_Read
                       _calc_average
                     i1_EEPROM_Write
                           i1___bmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             3     2      1     118
                                              7 COMMON     3     2      1
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1_EEPROM_Write                                       2     1      1     118
                                             10 COMMON     2     1      1
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
                           i1___bmul (ARG)
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
                         i1_I2C_Wait
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Stop                                           0     0      0       0
                         i1_I2C_Wait
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Start                                          0     0      0       0
                         i1_I2C_Wait
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Wait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _calc_average                                         5     5      0     386
                                              7 COMMON     5     5      0
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     318
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _ADC_Read                                             8     6      2    3143
                                             31 BANK0      8     6      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     305
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    2417
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _EEPROM_Read
     _I2C_Nack
       _I2C_Wait
     _I2C_Read_Byte
     _I2C_Res
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _EEPROM_Write
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     ___bmul (ARG)
       ___lwdiv (ARG)
     ___lwdiv (ARG)
   _I2C_INIT_MASTER
   _LCD_Init
     _LCD_CMD
       _LCD_SEND
   _LCD_SendCommand
   _LCD_Write_String
     _LCD_Write_uint8_t
       _LCD_SEND
   _SEG_Init
   _SEG_Write
     ___lwdiv (ARG)
   _SEG_Write1
     ___lwdiv (ARG)
     ___wmul (ARG)
       _EEPROM_Read (ARG)
         _I2C_Nack
           _I2C_Wait
         _I2C_Read_Byte
         _I2C_Res
           _I2C_Wait
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _I2C_Write
           _I2C_Wait
       ___lwdiv (ARG)
   _TIMER1_INIT
   ___bmul
     ___lwdiv (ARG)
   ___lwdiv
   ___wmul
     _EEPROM_Read (ARG)
       _I2C_Nack
         _I2C_Wait
       _I2C_Read_Byte
       _I2C_Res
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
     ___lwdiv (ARG)

 _ISR (ROOT)
   _ADC_Read
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     ___xxtofl
   _calc_average
     i1___lwdiv
   i1_EEPROM_Write
     i1_I2C_Start
       i1_I2C_Wait
     i1_I2C_Stop
       i1_I2C_Wait
     i1_I2C_Write
       i1_I2C_Wait
     i1___bmul (ARG)
       i1___lwdiv (ARG)
     i1___lwdiv (ARG)
   i1___bmul
     i1___lwdiv (ARG)
   i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     11      23       7       43.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      79      12        0.0%
ABS                  0      0      79       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 03 23:32:38 2020

                         pc 0002              ___bmul@product 00A8          __size_of_I2C_Start 0009  
               _SSPSTATbits 0094          __size_of_I2C_Write 0014                          l40 0D6D  
                        l25 0D30                          l43 0F83                          l52 0E27  
                        l37 0C0E                          l46 0D8C                          l92 0C73  
                        l95 0C7F                          l98 0C59                          fsr 0004  
       ___wmul@multiplicand 00A9         __Umul8_16@word_mpld 0076                 ?i1_I2C_Wait 0070  
               ?i1_I2C_Stop 0070                         l101 0C3A                         l104 0C43  
                       l113 0C4D                         l121 0C8B                         l201 0C65  
                       l122 0C8D                         l107 0C31                         l116 0CFF  
                       l119 0C86                         l160 0E60                         l139 0CAA  
                       l163 0DB0                         l411 0DFE                         l182 0C06  
                       l185 0CB9                         l409 0DE6                         l435 07FD  
                       l188 0CC8                         l284 0402                         l293 04A6  
                       l289 0439                         l681 0F2E                         _GIE 005F  
                       _RA3 002B                         _RB1 0031                         _RA4 002C  
                       _RB2 0032                         _RC2 003A                         _RE1 0049  
                       _RC5 003D                         _RB7 0037                         _RE2 004A  
                       _PEN 048A                         _ISR 05FC                         _SEN 0488  
                       fsr0 0004             __end_of_I2C_Res 0C32                         indf 0000  
              LCD_SEND@data 00A0                ___flmul@aexp 002D                ___flmul@bexp 002E  
     LCD_Write_uint8_t@Data 00A3                ___flmul@sign 0028                ___flmul@temp 0033  
              ___flmul@prod 002F             __end_of_LCD_CMD 0D6E                        ?_ISR 0070  
              ?i1_I2C_Start 0070                ___fltol@exp1 003E                ?i1_I2C_Write 0070  
                      l2111 0E5D                        l2103 0E2B                        l2105 0E49  
                      l2041 0D18                        l2121 0C04                        l2201 0F1D  
                      l2107 0E53                        l2115 0D90                        l2051 0F32  
                      l2043 0D1C                        l2123 0C05                        l2131 0CBE  
                      l2203 0F24                        l2109 0E58                        l2061 0F4F  
                      l2053 0F33                        l2045 0D22                        l2117 0C00  
                      l2125 0CAB                        l2133 0C5A                        l2205 0F2A  
                      l2301 03E0                        l2071 0F71                        l2063 0F59  
                      l2055 0F34                        l2047 0D2D                        l2119 0C03  
                      l2127 0CAF                        l2135 0C5F                        l2311 0407  
                      l2303 03F0                        l2073 0F77                        l2065 0F5F  
                      l2057 0F3F                        l2049 0F2F                        l2081 0E12  
                      l2129 0CBA                        l2137 0C63                        l2161 0DF4  
                      l2153 0DD8                        l2321 041E                        l2313 040B  
                      l2305 03F6                        l2091 0C57                        l2075 0F7D  
                      l2067 0F65                        l2059 0F49                        l2083 0E1A  
                      l2171 07EF                        l2163 0DFA                        l2155 0DDC  
                      l2323 041F                        l2315 040F                        l2307 03FA  
                      l2093 0C58                        l2085 0C4E                        l2069 0F6B  
                      l2077 0E02                        l2173 07F3                        l2157 0DE0  
                      l2333 043E                        l2341 048F                        l2317 0415  
                      l2325 0422                        l2095 0C9C                        l2087 0C52  
                      l2079 0E05                        l2175 07F5                        l2167 07EA  
                      l2191 0EFD                        l2183 0EE9                        l2159 0DED  
                      l2351 04B5                        l2343 0497                        l2335 0448  
                      l2327 042A                        l2319 041B                        l2089 0C55  
                      l1721 0D60                        l2177 07F7                        l2169 07EB  
                      l2193 0F01                        l2185 0EED                        l2361 0516  
                      l2353 04B9                        l2345 049D                        l2337 044C  
                      l2329 0430                        l1723 0D6A                        l1715 0D52  
                      l1731 0D7F                        l2179 07FC                        l2195 0F05  
                      l2187 0EF3                        l2371 052C                        l2363 051C  
                      l2355 04D4                        l2339 0467                        l2291 03AE  
                      l1741 0C40                        l1717 0D55                        l1733 0D89  
                      l1725 0D71                        l2197 0F16                        l2189 0EF6  
                      l2381 054E                        l2365 0522                        l2349 04AB  
                      l2357 04FC                        l2293 03B3                        l2285 0396  
                      l1751 0C4C                        l1743 0C29                        l1735 0C32  
                      l1719 0D5D                        l1727 0D74                        l2199 0F1C  
                      l2391 0578                        l2383 0554                        l2367 0528  
                      l2375 052E                        l2359 0504                        l2295 03B8  
                      l2287 03A4                        l1745 0C2E                        l1737 0C37  
                      l1753 0CEF                        l1729 0D7C                        l2393 057F  
                      l2385 0557                        l2377 0542                        l2369 052B  
                      l2297 03BD                        l2289 03A9                        l1747 0C44  
                      l1763 0C80                        l1739 0C3B                        l1755 0CF4  
                      l1691 0C0A                        l2395 05AD                        l2379 0548  
                      l2387 0558                        l2299 03C3         LCD_Write_String@str 00A6  
                      l1693 0C73                        l1749 0C49                        l1765 0C8C  
                      l1757 0CFA                        l2397 05B3                        l2389 0560  
                      l1695 0C79                        l1759 0CFF                        STR_1 0806  
                      STR_2 0814                        STR_3 081C                        u2100 0DFA  
                      u2101 0DF9                        u2110 07EF                        u2111 07EE  
                      u2040 0E27                        u2120 07FC                        u2041 0E26  
                      u2121 07FB                        u2130 0EF3                        u2131 0EF2  
                      u2300 040B                        u2301 040A                        u1350 0C8B  
                      u2150 0F05                        u2070 0DE0                        u2310 042A  
                      u1351 0C8A                        u2151 0F04                        u2071 0DDF  
                      u2311 0429                        u1280 0C79                        u2400 0516  
                      u2320 0430                        u1281 0C78                        u2145 0EF7  
                      u2401 0515                        u2321 042F                        u1290 0C7F  
                      u2170 0F16                        u2410 051C                        u2330 0439  
                      u1291 0C7E                        u2171 0F15                        u2411 051B  
                      u2331 0438                        u2420 0542                        u2340 043E  
                      u2260 03F6                        u2165 0F06                        u2085 0DE7  
                      u2421 0541                        u2405 0512                        u2341 043D  
                      u2261 03F5                        u2190 0F2A                        u2430 0548  
                      u2350 0497                        u2270 03FA                        u2191 0F29  
                      u2175 0F12                        u2095 0DEE                        u2431 0547  
                      u2351 0496                        u2271 03F9                        u2440 0560  
                      u2360 049D                        u2280 0402                        u2185 0F1E  
                      u2441 055F                        u2425 053E                        u2361 049C  
                      u2281 0401                        u2450 05B3                        u2370 04A6  
                      u2290 0407                        u2451 05B2                        u2371 04A5  
                      u2291 0406                        u2380 04AB                        u2381 04AA  
                      u2390 0504                        u2607 0F63                        u2391 0503  
                      u2617 0D66                        u2627 0CA8                        u2547 057C  
                      u2557 0D85                        u2567 0D29                        u2577 0F3A  
                      u2587 0F45                        _PEIE 005E                        u2597 0F55  
                      _INTE 005C                        _INTF 0059                        _MODE 00BB  
                      _RCEN 048B                        i1l92 0C66                        i1l95 0C72  
                      _TMR1 000E                        _RSEN 0489           ?_LCD_Write_String 0070  
                      _main 0396            __end_of_I2C_Nack 0C4E                        btemp 007E  
          __end_of_I2C_Wait 0C80            __end_of_I2C_Stop 0C44            __end_of_ADC_Init 0CAB  
          __end_of_ADC_Read 07E7                        start 0012          ??_LCD_Write_String 00A4  
           _LCD_SendCommand 0D15           ___bmul@multiplier 00A9                _ADC_READINGS 004C  
                     ??_ISR 0047           ??_I2C_INIT_MASTER 00A0            __end_of_LCD_SEND 0C0F  
      __end_of_EEPROM_Write 0DB1            __end_of_LCD_Init 0F84               ___fltol@sign1 003D  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___flmul 0396             __end_of___fltol 1000                       _T1CON 0010  
               ?_SEG_Write1 00AD             __end_of___lwdiv 0F2F                       i1l101 0C1F  
                     i1l104 0C28                       i1l116 0CD8                       i1l142 0791  
                     i1l145 07E6                       i1l323 0EE8                       i1l163 0D4E  
                     i1l318 06C7                       i1l602 0FEA                       i1l435 0D14  
                     i1l605 0FFF                       i1l810 0389                       i1l804 0301  
                     i1l817 0DC5                       i1l681 0EA4                       i1l842 06F6  
                     i1l819 0DD7                       i1l595 0FFF                       i1l844 078D  
                     i1l855 0757                       i1l856 0763                       i1l798 0395  
                     _PORTD 0008                       _TRISD 0088                       _SSPIF 0063  
          __end_of_SEG_Init 0C07          __size_of_SEG_Write 000F      __size_of_I2C_Read_Byte 000E  
         __end_of_I2C_Start 0C3B            __end_ofi1___bmul 0D15           __end_of_I2C_Write 0D00  
                     pclath 000A                       status 0003                       wtemp0 007E  
         _LCD_Write_uint8_t 0D6E          __size_ofi1___lwdiv 0044         __size_ofi1_I2C_Wait 000D  
          EEPROM_Write@data 00AA         __size_ofi1_I2C_Stop 0009        __size_of_EEPROM_Read 0039  
        ?_LCD_Write_uint8_t 0070       __size_of_calc_average 0044              _READINGS_INDEX 0062  
           __initialization 0015                __end_of_main 05FC         ??_LCD_Write_uint8_t 00A1  
                 ??_I2C_Res 00A0                ?_TIMER1_INIT 0070                      ??_main 00AF  
                 ??_LCD_CMD 00A1                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E     __end_of_LCD_SendCommand 0D31  
                    i1l2001 0C20                      i1l2003 0C25                      i1l2011 0CD8  
                    i1l2021 0E6C                      i1l2005 0CCA                      i1l2031 0E92  
                    i1l2023 0E73                      i1l2015 0E61                      i1l2007 0CCF  
                    i1l2033 0E93                      i1l2025 0E77                      i1l2017 0E63  
                    i1l2009 0CD3                      i1l2035 0E9A                      i1l2027 0E7B  
                    i1l2019 0E69                      i1l2211 0D01                      i1l2029 0E8C  
                    i1l2037 0EA0                      i1l2221 0D0E                      i1l2213 0D02  
                    i1l2151 0ED3                      i1l2223 0D13                      i1l2215 0D06  
                    i1l2145 0EAB                      i1l2209 0D32                      i1l2217 0D0A  
                    i1l2401 0600                      i1l2147 0EC0                      i1l2139 0EA5  
                    i1l2219 0D0C                      i1l2403 0608                      i1l2411 0620  
                    i1l1701 0DBB                      u200_25 0E7C                      i1l2149 0EC6  
                    i1l2421 0651                      i1l2413 0628                      i1l2405 0610  
                    i1l1703 0DBF                      i1l1711 0C66                      i1l2431 066D  
                    i1l2423 0659                      i1l2415 062F                      i1l2407 0617  
                    u201_20 0E8C                      i1l1705 0DCE                      i1l1801 0FDF  
                    i1l2097 078E                      u201_21 0E8B                      i1l1713 0C6C  
                    i1l2433 0673                      i1l2425 065E                      i1l2417 0631  
                    i1l2409 0619                      i1l2441 0680                      i1l1707 0DD3  
                    i1l1811 0042                      i1l1803 0FEF                      i1l2099 0795  
                    i1l2443 0684                      i1l2435 067A                      i1l2427 0667  
                    i1l2419 0642                      i1l1901 02DB                      i1l1821 0059  
                    i1l1813 0046                      i1l1805 0FF4                      u201_25 0E88  
                    i1l2445 068A                      i1l2437 067C                      i1l2429 0669  
                    i1l1911 02FE                      i1l1903 02E1                      i1l1831 0072  
                    i1l1823 005B                      i1l1815 0047                      i1l1807 0035  
                    i1l2447 06A1                      i1l2439 067E                      u130_20 0DBF  
                    u130_21 0DBE                      i1l1921 031D                      i1l1905 02E5  
                    i1l1841 0087                      i1l1833 0073                      i1l1825 0063  
                    i1l1817 004C                      i1l1809 003C                      i1l2449 06C6  
                    i1l1931 0363                      i1l1923 0336                      i1l1915 0306  
                    i1l1907 02E6                      i1l1851 00A2                      i1l1843 008F  
                    i1l1835 0078                      i1l1827 0068                      i1l1819 0051  
                    i1l1771 0F91                      i1l1941 0381                      i1l1933 036D  
                    i1l1917 030B                      i1l1925 033C                      i1l1909 02EA  
                    i1l1861 0124                      i1l1853 00B2                      i1l1845 0094  
                    i1l1837 007D                      i1l1829 006E                      i1l1781 0FB8  
                    u202_25 0E94                      i1l1943 0382                      i1l1935 036F  
                    i1l1927 0349                      i1l1919 0319                      i1l1871 0192  
                    i1l1863 0140                      i1l1855 00BF                      i1l1847 0099  
                    i1l1839 0085                      i1l1791 0FC6                      i1l1783 0FBA  
                    i1l1775 0F9A                      i1l1951 06DA                      i1l2399 05FC  
                    u203_20 0EA0                      i1l1697 0DB2                      i1l1945 038D  
                    i1l1937 0375                      i1l1929 0354                      i1l1881 0222  
                    i1l1873 01A2                      i1l1865 015C                      i1l1857 00DC  
                    i1l1793 0FCF                      i1l1785 0FBE                      i1l1777 0FAF  
                    i1l1769 0F84                      i1l1961 0707                      i1l1953 06DE  
                    u203_21 0E9F                      i1l1699 0DB4                      i1l1939 037D  
                    i1l1891 02B6                      i1l1883 0232                      i1l1875 01BF  
                    i1l1867 0165                      i1l1859 00F8                      i1l1795 0FD8  
                    i1l1779 0FB0                      i1l1971 0724                      i1l1963 070C  
                    i1l1955 06EE                      u131_25 0DC6                      i1l1893 02C4  
                    i1l1885 025F                      i1l1877 01D8                      i1l1869 0175  
                    i1l1981 0751                      i1l1973 0732                      i1l1965 0710  
                    i1l1957 06FE                      i1l1949 06D5                _calc_average 0EA5  
                    i1l1895 02CD                      i1l1887 0285                      i1l1879 01F5  
                    i1l1991 0784                      i1l1983 075B                      i1l1975 073B  
                    i1l1967 0719                      u132_20 0DD3                      u220_20 0D06  
                    u132_21 0DD2                      i1l1897 02D1                      i1l1889 02AD  
                    i1l1993 0785                      i1l1985 0765                      i1l1977 0742  
                    i1l1969 0720                      u220_21 0D05                      i1l1899 02D2  
                    i1l1987 077B                      i1l1979 074D                      u140_25 0FC7  
                    i1l1989 0780                      i1l1997 0C17                      i1l1999 0C1C  
                    u141_20 0FD7                      u205_20 0795                      u133_20 0C6C  
                    u221_20 0D13                      u141_21 0FD6                      u205_21 0794  
                    u133_21 0C6B                      u221_21 0D12                      u150_20 0078  
                    u142_20 0FDE                      u206_20 0ED3                      u134_20 0C72  
                    u150_21 0077                      u142_21 0FDD                      u206_21 0ED2  
                    u134_21 0C71                      _INTEDG 040E                      u206_25 0ECF  
                    u151_20 007D   __end_of_LCD_Write_uint8_t 0D8D                      u151_21 007C  
                    u143_25 0FE1                      u152_20 0094                      u144_20 0FEF  
                    u136_20 0F91                      u160_21 01B1                      u152_21 0093  
                    u144_21 0FEE                      u136_21 0F90                      u160_22 01B8  
                    u160_23 01BF                      u153_20 0099                      u145_20 0FF4  
                    u137_20 0FA8                      u153_21 0098                      u145_21 0FF3  
                    u161_25 01C1                      u137_25 0FA3                      u146_20 0046  
                    u138_20 0FBE                      u250_20 0667                      u162_21 01E7  
                    u154_21 00EA                      u146_21 0045                      u138_21 0FBD  
                    u250_21 0666                      u162_22 01EE                      u154_22 00F1  
                    u162_23 01F5                      u154_23 00F8                      u170_25 02C6  
                    u171_20 02D1                      u147_20 004C                      u139_20 0FC5  
                    u251_20 066D                      u171_21 02D0                      u163_21 0214  
                    u155_21 0106                      u147_21 004B                      u139_21 0FC4  
                    u251_21 066C                      u163_22 021B                      u155_22 010D  
                    u163_23 0222                      u155_23 0114                      u180_20 0349  
                    u148_20 0051                      u252_20 067A                      u180_21 0348  
                    u164_21 0241                      u156_21 0132                      u148_21 0050  
                    u252_21 0679                      u164_22 0248                      u156_22 0139  
                    u164_23 024F                      u156_23 0140                      u180_25 0345  
                    u172_25 02D4                      u181_20 0363                      u173_20 02E5  
                    u165_20 026B                      u149_20 0072                      u253_20 0684  
                    u181_21 0362                      u173_21 02E4                      u157_21 014E  
                    u149_21 0071                      u253_21 0683                      u157_22 0155  
                    u157_23 015C                      u181_25 035F                      u165_25 0266  
                    u182_20 0381                      u174_20 02EA                      u246_20 0600  
                    u182_21 0380                      u174_21 02E9                      u166_21 0277  
                    u246_21 05FF                      u166_22 027E                      u166_23 0285  
                    u158_25 015E                      u190_25 0746                      u175_20 02FE  
                    u167_20 0293                      u191_20 0751                      u183_20 06DA  
                    u247_20 0608                      u175_21 02FD                      u159_21 0184  
                    u191_21 0750                      u183_21 06D9                      u247_21 0607  
                    u159_22 018B                      u159_23 0192                      u167_25 028E  
                    u176_20 0305                      u192_20 0757                      u184_20 06DE  
                    u248_20 0617                      u176_21 0304                      u168_21 029F  
                    u192_21 0756                      u184_21 06DD                      u248_21 0616  
                    u168_22 02A6                      u168_23 02AD                      u177_20 030B  
                    u193_20 075B                      u185_20 06FE                      u249_20 062F  
                    u177_21 030A                      u193_21 075A                      u185_21 06FD  
                    u249_21 062E                      u169_25 02AF                      u178_20 031D  
                    u194_20 0770                      u178_21 031C                      u194_25 076B  
                    u186_25 0711                      u179_20 032C                      u195_20 0780  
                    u187_20 071F                      u195_21 077F                      u187_21 071E  
                    u179_25 0327                      u196_20 0784                      u196_21 0783  
                    u188_25 0733                      u189_20 0741                      u197_20 0E69  
                    u189_21 0740                      u197_21 0E68                      u198_25 0E6D  
                    u199_20 0E7B                      u199_21 0E7A                      _TMR1IE 0460  
                    _TMR1IF 0060                      _SSPADD 0093                      _TRISB0 0430  
                    _TRISA3 042B                      _TRISA4 042C                      _TRISB2 0432  
                    _TRISA5 042D                      _TRISC2 043A                      _TRISC3 043B  
                    _TRISC4 043C                      _TRISE1 0449                      _TRISC5 043D  
                    _TRISB7 0437                      _TRISE2 044A                      _SSPCON 0014  
                    _SSPBUF 0013     __size_ofi1_EEPROM_Write 001E            __end_of___xxtofl 078E  
       __size_of_SEG_Write1 000F           __end_of_SEG_Write 0CBA                      ___bmul 07E7  
             _I2C_Read_Byte 0C80                      ___wmul 0DD8                   ??___flmul 0079  
                 ??___fltol 0039                   ??___lwdiv 00A4         LCD_SendCommand@Inst 00A2  
           ADC_Read@reading 0043           __end_ofi1___lwdiv 0EA5                   ?_I2C_Nack 0070  
                 ?_I2C_Wait 0070          __size_of__Umul8_16 0027                   ?_I2C_Stop 0070  
                 ?_ADC_Init 0070                   ?_ADC_Read 003F                      saved_w 007E  
              _DESIRED_TEMP 00BD                ___xxtofl@arg 007A                ___xxtofl@exp 0079  
              ___xxtofl@val 0070                   ?_LCD_SEND 0070        __size_ofi1_I2C_Start 0009  
   __end_of__initialization 0031        __size_ofi1_I2C_Write 0010                   ?_LCD_Init 0070  
                ___fltol@f1 0035       __size_of_EEPROM_Write 0024         ___bmul@multiplicand 00A7  
            ?_I2C_Read_Byte 0070              __pcstackCOMMON 0070                   ?_SEG_Init 0070  
              __pidataBANK1 0C8E                   ?i1___bmul 0077                ??i1_I2C_Wait 0070  
              ??i1_I2C_Stop 0070                  ??_I2C_Nack 00A0                  ??_I2C_Wait 00A0  
                ??_I2C_Stop 00A0                  ??_ADC_Init 00A0                  ??_ADC_Read 0041  
          i1___bmul@product 0078          i1EEPROM_Write@data 007A                _EEPROM_Write 0D8D  
                __pbssBANK0 004C                  __pbssBANK1 00BF            ?_LCD_SendCommand 0070  
__size_of_LCD_Write_uint8_t 001F                  ??_LCD_SEND 00A0             _I2C_INIT_MASTER 0C4E  
                ??_LCD_Init 00A4          __end_ofi1_I2C_Wait 0C73          __end_ofi1_I2C_Stop 0C29  
         __end_of__Umul8_16 0DD8                  __pmaintext 0396                     ?___bmul 00A7  
                ??_SEG_Init 00A0                     ?___wmul 00A7                  __pintentry 0004  
                   _ACKSTAT 048E                     _I2C_Res 0C29             SEG_Write@number 00A7  
 __size_of_LCD_Write_String 0029                  ??i1___bmul 0078                ??_SEG_Write1 00AF  
                   _LCD_CMD 0D4F        __size_of_TIMER1_INIT 000C                   ?___xxtofl 0070  
                   _GO_DONE 00FA                     _SSPCON2 0091                  __stringtab 0800  
            i1_EEPROM_Write 0D31                   _I2C_Start 0C32                   _I2C_Write 0CEC  
           ??_I2C_Read_Byte 00A0          __end_of_SEG_Write1 0CC9             __size_of___bmul 0017  
                   ___flmul 0035                     ___fltol 0F84             __size_of___wmul 0027  
                   ___lwdiv 0EE9                     __ptext1 0DD8                     __ptext2 0EE9  
                   __ptext3 07E7                     __ptext4 0C5A                     __ptext5 0CBA  
                   __ptext6 0CAB                     __ptext7 0C00                     __ptext8 0DFF  
                   __ptext9 0D6E                     _average 00BF                __size_of_ISR 00D8  
         i1___lwdiv@divisor 0070           i1___lwdiv@counter 0076                  ??___xxtofl 0074  
       i1___bmul@multiplier 0079     __end_of_I2C_INIT_MASTER 0C5A                     _numbers 00B1  
                   clrloop0 0C10        end_of_initialization 0031      __end_ofi1_EEPROM_Write 0D4F  
             ??_EEPROM_Read 00A1                  ?_I2C_Start 0070                  ?_I2C_Write 0070  
     i1EEPROM_Write@address 007B                   _SEG_Write 0CAB                  LCD_CMD@CMD 00A3  
             ___xxtofl@sign 0078           __size_of_I2C_Nack 000A           __size_of_I2C_Wait 000D  
         __size_of_I2C_Stop 0009           __size_of_ADC_Init 000F           __size_of_ADC_Read 0059  
                 i1___lwdiv 0E61           LCD_Write_String@i 00A4             ?i1_EEPROM_Write 007A  
               ___flmul@grs 0029           __size_of_LCD_SEND 0008           __size_of_LCD_Init 0055  
       __end_of_EEPROM_Read 0E61              __end_of___bmul 07FE                  ?_SEG_Write 00A7  
            __end_of___wmul 0DFF           __size_of_SEG_Init 0007            _LCD_Write_String 0DFF  
         __size_ofi1___bmul 0015         start_initialization 0015                 __end_of_ISR 06D4  
          ?_I2C_INIT_MASTER 0070                  ?i1___lwdiv 0070               ??i1_I2C_Start 0070  
             ??i1_I2C_Write 0070                 ??_I2C_Start 00A0                 ??_I2C_Write 00A0  
               _ADC_counter 0066                _MODE_COUNTER 0064                    ??___bmul 00A8  
                  ??___wmul 00AB                  init_fetch0 0CD9                   __Umul8_16 0DB1  
               __pdataBANK1 00B1                    ?_I2C_Res 0070            SEG_Write1@number 00AD  
                  ?_LCD_CMD 0070                   ___flmul@a 0024                   ___flmul@b 0020  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00A0  
         __size_of___xxtofl 00BA                 _EEPROM_Read 0E28         __end_ofi1_I2C_Start 0C20  
       __end_ofi1_I2C_Write 0CD9            ___lwdiv@dividend 00A2    __size_of_LCD_SendCommand 001C  
                  ?___flmul 0020                    ?___fltol 0035                  ?__Umul8_16 0070  
                  ?___lwdiv 00A0                 ??_SEG_Write 00A9               ??_TIMER1_INIT 00A0  
                 __pstrings 0800                    _ADC_TEMP 00C1                    _I2C_Nack 0C44  
                  _I2C_Wait 0C73                    _I2C_Stop 0C3B                    _ADC_Init 0C9C  
                  _ADC_Read 078E            ___lwdiv@quotient 00A4                 ??i1___lwdiv 0074  
             ?_calc_average 0070                    _LCD_SEND 0C07           interrupt_function 0004  
                  _LCD_Init 0F2F              ___wmul@product 00AB                   clear_ram0 0C0F  
     i1___bmul@multiplicand 0077                 _LED_COUNTER 0060       __end_of_I2C_Read_Byte 0C8E  
                  _SEG_Init 0C00                    i1___bmul 0D00            __size_of_I2C_Res 0009  
                _ADCON0bits 001F                 __stringbase 0805           ___wmul@multiplier 00A7  
          __size_of_LCD_CMD 001F            ??i1_EEPROM_Write 007B         __end_of_TIMER1_INIT 0C66  
            ??_calc_average 0077                 i1_I2C_Start 0C17                 i1_I2C_Write 0CC9  
  __end_of_LCD_Write_String 0E28               I2C_Write@Data 00A0                 ??__Umul8_16 0072  
          __size_of___flmul 0361            __size_of___fltol 007C            __size_of___lwdiv 0046  
         ??_LCD_SendCommand 00A0          __end_of__stringtab 0806                    ___xxtofl 06D4  
           ___lwdiv@divisor 00A0             ___lwdiv@counter 00A6                    __ptext10 0D15  
                  __ptext11 0F2F                    __ptext20 0C29                    __ptext12 0D4F  
                  __ptext21 0C80                    __ptext13 0C07                    __ptext30 0C17  
                  __ptext22 0C44                    __ptext14 0C4E                    __ptext31 0C66  
                  __ptext23 0C73                    __ptext15 0D8D                    __ptext32 0EA5  
                  __ptext24 0C9C                    __ptext16 0E28                    __ptext33 0E61  
                  __ptext25 05FC                    __ptext17 0CEC                    __ptext34 078E  
                  __ptext26 0D00                    __ptext18 0C3B                    __ptext35 06D4  
                  __ptext27 0D31                    __ptext19 0C32                    __ptext36 0F84  
                  __ptext28 0CC9                    __ptext37 0035                    __ptext29 0C20  
                  __ptext38 0DB1               ?_EEPROM_Write 00AA          i1___lwdiv@dividend 0072  
             __size_of_main 0266                 _TIMER1_INIT 0C5A                  i1_I2C_Wait 0C66  
                i1_I2C_Stop 0C20          i1___lwdiv@quotient 0074                    init_ram0 0CDD  
            ??_EEPROM_Write 00AB                    intlevel1 0000                ?_EEPROM_Read 0070  
  __size_of_I2C_INIT_MASTER 000C                   stringcode 0800          EEPROM_Read@address 00A1  
      __end_of_calc_average 0EE9             i1I2C_Write@Data 0070      __Umul8_16@multiplicand 0070  
                _SEG_Write1 0CBA                    stringdir 0800                    stringtab 0800  
      __Umul8_16@multiplier 0078               calc_average@i 007A             EEPROM_Read@data 00A2  
       EEPROM_Write@address 00AB           __Umul8_16@product 0074  
